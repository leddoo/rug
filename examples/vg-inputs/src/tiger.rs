use rug::*;
use color::*;
use cmd::*;

    #[inline(never)]
    fn build_it(cb: &mut CmdBufBuilder) {
        {
            let p = cb.build_path(|pb| {
                pb.move_to([0.0, 0.0].into());
                pb.line_to([495.0, 0.0].into());
                pb.line_to([495.0, 510.0].into());
                pb.line_to([0.0, 510.0].into());
                pb.line_to([0.0, 0.0].into());
                pb.close_path();
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([66.1946, 278.852].into());
                pb.cubic_to([66.1946, 278.852].into(), [66.2915, 277.035].into(), [65.5012, 277.053].into());
                pb.cubic_to([64.711, 277.072].into(), [48.9313, 323.176].into(), [29.2446, 321.025].into());
                pb.cubic_to([29.2446, 321.025].into(), [46.2988, 328.077].into(), [66.1946, 278.852].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([66.1946, 278.852].into());
                pb.cubic_to([66.1946, 278.852].into(), [66.2915, 277.035].into(), [65.5012, 277.053].into());
                pb.cubic_to([64.711, 277.072].into(), [48.9313, 323.176].into(), [29.2446, 321.025].into());
                pb.cubic_to([29.2446, 321.025].into(), [46.2988, 328.077].into(), [66.1946, 278.852].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([69.5799, 281.751].into());
                pb.cubic_to([69.5799, 281.751].into(), [69.0534, 280.009].into(), [68.316, 280.296].into());
                pb.cubic_to([67.5794, 280.582].into(), [68.4262, 329.305].into(), [49.1826, 333.98].into());
                pb.cubic_to([49.1826, 333.98].into(), [67.6178, 334.808].into(), [69.5799, 281.751].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([69.5799, 281.751].into());
                pb.cubic_to([69.5799, 281.751].into(), [69.0534, 280.009].into(), [68.316, 280.296].into());
                pb.cubic_to([67.5794, 280.582].into(), [68.4262, 329.305].into(), [49.1826, 333.98].into());
                pb.cubic_to([49.1826, 333.98].into(), [67.6178, 334.808].into(), [69.5799, 281.751].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([95.9433, 241.157].into());
                pb.cubic_to([95.9433, 241.157].into(), [97.5123, 240.237].into(), [97.0615, 239.587].into());
                pb.cubic_to([96.6098, 238.938].into(), [49.4511, 251.216].into(), [40.3836, 233.611].into());
                pb.cubic_to([40.3836, 233.611].into(), [43.9118, 251.724].into(), [95.9433, 241.157].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([95.9433, 241.157].into());
                pb.cubic_to([95.9433, 241.157].into(), [97.5123, 240.237].into(), [97.0615, 239.587].into());
                pb.cubic_to([96.6098, 238.938].into(), [49.4511, 251.216].into(), [40.3836, 233.611].into());
                pb.cubic_to([40.3836, 233.611].into(), [43.9118, 251.724].into(), [95.9433, 241.157].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([93.2494, 231.365].into());
                pb.cubic_to([93.2494, 231.365].into(), [95.0294, 230.985].into(), [94.805, 230.227].into());
                pb.cubic_to([94.5815, 229.468].into(), [45.9565, 226.263].into(), [42.8972, 206.698].into());
                pb.cubic_to([42.8972, 206.698].into(), [40.5399, 225.001].into(), [93.2494, 231.365].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([93.2494, 231.365].into());
                pb.cubic_to([93.2494, 231.365].into(), [95.0294, 230.985].into(), [94.805, 230.227].into());
                pb.cubic_to([94.5815, 229.468].into(), [45.9565, 226.263].into(), [42.8972, 206.698].into());
                pb.cubic_to([42.8972, 206.698].into(), [40.5399, 225.001].into(), [93.2494, 231.365].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([89.211, 236.663].into());
                pb.cubic_to([89.211, 236.663].into(), [90.9161, 236.028].into(), [90.5843, 235.31].into());
                pb.cubic_to([90.2525, 234.593].into(), [41.6802, 238.514].into(), [35.7995, 219.604].into());
                pb.cubic_to([35.7995, 219.604].into(), [36.1371, 238.055].into(), [89.211, 236.663].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([89.211, 236.663].into());
                pb.cubic_to([89.211, 236.663].into(), [90.9161, 236.028].into(), [90.5843, 235.31].into());
                pb.cubic_to([90.2525, 234.593].into(), [41.6802, 238.514].into(), [35.7995, 219.604].into());
                pb.cubic_to([35.7995, 219.604].into(), [36.1371, 238.055].into(), [89.211, 236.663].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([78.9447, 254.121].into());
                pb.cubic_to([78.9447, 254.121].into(), [80.1991, 252.804].into(), [79.5863, 252.304].into());
                pb.cubic_to([78.9735, 251.804].into(), [37.0232, 276.599].into(), [23.456, 262.173].into());
                pb.cubic_to([23.456, 262.173].into(), [31.8388, 278.614].into(), [78.9447, 254.121].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([78.9447, 254.121].into());
                pb.cubic_to([78.9447, 254.121].into(), [80.1991, 252.804].into(), [79.5863, 252.304].into());
                pb.cubic_to([78.9735, 251.804].into(), [37.0232, 276.599].into(), [23.456, 262.173].into());
                pb.cubic_to([23.456, 262.173].into(), [31.8388, 278.614].into(), [78.9447, 254.121].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([71.709, 250.102].into());
                pb.cubic_to([71.709, 250.102].into(), [73.1053, 248.935].into(), [72.5529, 248.368].into());
                pb.cubic_to([72.0005, 247.802].into(), [27.5136, 267.691].into(), [15.6659, 251.823].into());
                pb.cubic_to([15.6659, 251.823].into(), [22.1345, 269.106].into(), [71.709, 250.102].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([71.709, 250.102].into());
                pb.cubic_to([71.709, 250.102].into(), [73.1053, 248.935].into(), [72.5529, 248.368].into());
                pb.cubic_to([72.0005, 247.802].into(), [27.5136, 267.691].into(), [15.6659, 251.823].into());
                pb.cubic_to([15.6659, 251.823].into(), [22.1345, 269.106].into(), [71.709, 250.102].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([69.2155, 246.197].into());
                pb.cubic_to([69.2155, 246.197].into(), [70.7576, 245.23].into(), [70.2877, 244.595].into());
                pb.cubic_to([69.8178, 243.959].into(), [23.035, 257.599].into(), [13.4611, 240.264].into());
                pb.cubic_to([13.4611, 240.264].into(), [17.513, 258.267].into(), [69.2155, 246.197].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([69.2155, 246.197].into());
                pb.cubic_to([69.2155, 246.197].into(), [70.7576, 245.23].into(), [70.2877, 244.595].into());
                pb.cubic_to([69.8178, 243.959].into(), [23.035, 257.599].into(), [13.4611, 240.264].into());
                pb.cubic_to([13.4611, 240.264].into(), [17.513, 258.267].into(), [69.2155, 246.197].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([79.5096, 245.608].into());
                pb.cubic_to([79.5096, 245.608].into(), [80.5856, 244.14].into(), [79.9133, 243.723].into());
                pb.cubic_to([79.2411, 243.306].into(), [40.8142, 273.273].into(), [25.5102, 260.705].into());
                pb.cubic_to([25.5102, 260.705].into(), [35.9299, 275.935].into(), [79.5096, 245.608].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([79.5096, 245.608].into());
                pb.cubic_to([79.5096, 245.608].into(), [80.5856, 244.14].into(), [79.9133, 243.723].into());
                pb.cubic_to([79.2411, 243.306].into(), [40.8142, 273.273].into(), [25.5102, 260.705].into());
                pb.cubic_to([25.5102, 260.705].into(), [35.9299, 275.935].into(), [79.5096, 245.608].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([60.5402, 273.371].into());
                pb.cubic_to([60.5402, 273.371].into(), [61.1157, 271.645].into(), [60.3484, 271.453].into());
                pb.cubic_to([59.5812, 271.261].into(), [32.1533, 311.54].into(), [13.7393, 304.251].into());
                pb.cubic_to([13.7393, 304.251].into(), [28.3173, 315.568].into(), [60.5402, 273.371].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([60.5402, 273.371].into());
                pb.cubic_to([60.5402, 273.371].into(), [61.1157, 271.645].into(), [60.3484, 271.453].into());
                pb.cubic_to([59.5812, 271.261].into(), [32.1533, 311.54].into(), [13.7393, 304.251].into());
                pb.cubic_to([13.7393, 304.251].into(), [28.3173, 315.568].into(), [60.5402, 273.371].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([61.2068, 266.678].into());
                pb.cubic_to([61.2068, 266.678].into(), [62.1418, 265.116].into(), [61.4331, 264.764].into());
                pb.cubic_to([60.7253, 264.411].into(), [25.2561, 297.827].into(), [8.84826, 286.739].into());
                pb.cubic_to([8.84826, 286.739].into(), [20.6413, 300.932].into(), [61.2068, 266.678].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([61.2068, 266.678].into());
                pb.cubic_to([61.2068, 266.678].into(), [62.1418, 265.116].into(), [61.4331, 264.764].into());
                pb.cubic_to([60.7253, 264.411].into(), [25.2561, 297.827].into(), [8.84826, 286.739].into());
                pb.cubic_to([8.84826, 286.739].into(), [20.6413, 300.932].into(), [61.2068, 266.678].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([61.0965, 262.487].into());
                pb.cubic_to([61.0965, 262.487].into(), [62.1725, 261.019].into(), [61.5002, 260.601].into());
                pb.cubic_to([60.8279, 260.185].into(), [22.4011, 290.152].into(), [7.0971, 277.584].into());
                pb.cubic_to([7.0971, 277.584].into(), [17.5168, 292.814].into(), [61.0965, 262.487].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([61.0965, 262.487].into());
                pb.cubic_to([61.0965, 262.487].into(), [62.1725, 261.019].into(), [61.5002, 260.601].into());
                pb.cubic_to([60.8279, 260.185].into(), [22.4011, 290.152].into(), [7.0971, 277.584].into());
                pb.cubic_to([7.0971, 277.584].into(), [17.5168, 292.814].into(), [61.0965, 262.487].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([58.977, 260.841].into());
                pb.cubic_to([59.4594, 255.041].into(), [60.4069, 248.741].into(), [62.0747, 245.75].into());
                pb.cubic_to([62.0747, 245.75].into(), [58.6222, 233.858].into(), [67.0616, 221.199].into());
                pb.cubic_to([67.0616, 221.199].into(), [66.6779, 214.294].into(), [68.2124, 211.226].into());
                pb.cubic_to([68.2124, 211.226].into(), [72.0484, 203.17].into(), [76.6517, 202.403].into());
                pb.cubic_to([80.3765, 201.782].into(), [88.7421, 198.839].into(), [98.1989, 197.492].into());
                pb.cubic_to([98.1989, 197.492].into(), [114.629, 183.989].into(), [111.56, 171.714].into());
                pb.cubic_to([111.56, 171.714].into(), [111.176, 155.986].into(), [107.724, 154.452].into());
                pb.cubic_to([107.724, 154.452].into(), [118.848, 165.193].into(), [109.642, 149.081].into());
                pb.line_to([105.422, 131.052].into());
                pb.cubic_to([105.422, 131.052].into(), [117.181, 141.134].into(), [119.663, 141.227].into());
                pb.cubic_to([119.273, 139.284].into(), [119.267, 139.139].into(), [115.012, 134.121].into());
                pb.line_to([105.422, 109.186].into());
                pb.cubic_to([105.422, 109.186].into(), [117.488, 120.472].into(), [118.812, 120.878].into());
                pb.cubic_to([118.043, 119.673].into(), [118.344, 119.675].into(), [117.362, 118.25].into());
                pb.line_to([114.245, 110.337].into());
                pb.cubic_to([114.245, 110.337].into(), [133.8, 122.649].into(), [136.462, 121.151].into());
                pb.cubic_to([137.675, 120.469].into(), [135.382, 116.92].into(), [126.137, 108.035].into());
                pb.cubic_to([126.137, 108.035].into(), [133.809, 111.488].into(), [138.029, 108.803].into());
                pb.cubic_to([138.029, 108.803].into(), [144.55, 109.953].into(), [143.783, 108.419].into());
                pb.cubic_to([143.783, 108.419].into(), [123.835, 98.445].into(), [120.383, 80.799].into());
                pb.cubic_to([120.383, 80.799].into(), [128.439, 90.389].into(), [125.37, 80.032].into());
                pb.line_to([125.753, 68.907].into());
                pb.cubic_to([125.753, 68.907].into(), [126.996, 74.337].into(), [127.878, 74.819].into());
                pb.cubic_to([129.357, 72.91].into(), [129.38, 69.902].into(), [129.206, 53.563].into());
                pb.cubic_to([129.206, 53.563].into(), [147.619, 70.825].into(), [136.494, 50.878].into());
                pb.line_to([136.494, 34.766].into());
                pb.cubic_to([136.494, 34.766].into(), [144.896, 43.831].into(), [146.257, 42.826].into());
                pb.cubic_to([146.689, 42.507].into(), [145.374, 39.385].into(), [144.934, 38.219].into());
                pb.cubic_to([145.747, 38.889].into(), [148.458, 41.32].into(), [150.379, 40.515].into());
                pb.cubic_to([151.627, 39.992].into(), [152.198, 37.821].into(), [150.688, 32.081].into());
                pb.cubic_to([150.688, 32.081].into(), [150.184, 28.401].into(), [151.246, 27.871].into());
                pb.cubic_to([152.219, 28.315].into(), [152.614, 28.963].into(), [154.14, 32.848].into());
                pb.cubic_to([154.14, 32.848].into(), [169.485, 62.194].into(), [163.73, 37.068].into());
                pb.cubic_to([163.73, 37.068].into(), [162.963, 18.655].into(), [167.567, 32.848].into());
                pb.cubic_to([167.567, 32.848].into(), [167.95, 22.875].into(), [176.773, 15.97].into());
                pb.cubic_to([176.773, 15.97].into(), [175.622, 64.688].into(), [187.898, 30.163].into());
                pb.line_to([191.734, 14.435].into());
                pb.cubic_to([191.734, 14.435].into(), [194.419, 23.258].into(), [194.035, 28.245].into());
                pb.cubic_to([194.035, 28.245].into(), [208.229, 43.973].into(), [201.708, 20.573].into());
                pb.cubic_to([201.708, 20.573].into(), [216.285, 42.439].into(), [213.216, 29.78].into());
                pb.cubic_to([213.216, 29.78].into(), [205.927, 14.435].into(), [207.462, 9.832].into());
                pb.cubic_to([207.462, 9.832].into(), [223.573, 43.206].into(), [224.724, 44.74].into());
                pb.cubic_to([224.724, 44.74].into(), [222.806, 4.077].into(), [233.163, 38.602].into());
                pb.cubic_to([233.163, 38.602].into(), [238.534, 27.094].into(), [235.849, 22.875].into());
                pb.cubic_to([235.849, 22.875].into(), [243.521, 30.547].into(), [242.753, 33.616].into());
                pb.cubic_to([242.753, 33.616].into(), [247.165, 41.48].into(), [249.85, 28.437].into());
                pb.cubic_to([249.85, 28.437].into(), [251.576, 19.422].into(), [253.111, 22.491].into());
                pb.cubic_to([253.111, 22.491].into(), [254.883, 11.858].into(), [256.38, 11.912].into());
                pb.cubic_to([257.085, 11.937].into(), [257.729, 14.336].into(), [258.098, 21.34].into());
                pb.cubic_to([258.098, 21.34].into(), [258.733, 26.742].into(), [257.346, 33.559].into());
                pb.cubic_to([256.577, 37.334].into(), [255.188, 41.542].into(), [252.727, 45.507].into());
                pb.cubic_to([252.727, 45.507].into(), [253.494, 48.576].into(), [250.809, 52.412].into());
                pb.cubic_to([250.809, 52.412].into(), [263.852, 31.698].into(), [256.947, 59.317].into());
                pb.cubic_to([256.947, 59.317].into(), [267.593, 51.884].into(), [268.84, 51.645].into());
                pb.cubic_to([268.17, 53.272].into(), [255.796, 73.894].into(), [264.235, 69.291].into());
                pb.cubic_to([264.235, 69.291].into(), [259.249, 79.265].into(), [276.512, 67.757].into());
                pb.cubic_to([266.618, 78.507].into(), [272.316, 77.235].into(), [277.495, 74.032].into());
                pb.cubic_to([279.677, 72.654].into(), [280.583, 71.967].into(), [281.407, 72.752].into());
                pb.cubic_to([281.247, 73.799].into(), [280.695, 74.76].into(), [278.43, 77.347].into());
                pb.cubic_to([274.68, 81.411].into(), [273.748, 82.283].into(), [274.078, 84.344].into());
                pb.cubic_to([276.415, 83.805].into(), [278.796, 81.723].into(), [285.718, 75.429].into());
                pb.cubic_to([285.718, 75.429].into(), [296.843, 59.701].into(), [297.61, 57.016].into());
                pb.cubic_to([297.61, 57.016].into(), [288.02, 85.019].into(), [283.8, 87.704].into());
                pb.cubic_to([283.8, 87.704].into(), [291.856, 122.612].into(), [331.368, 107.652].into());
                pb.cubic_to([331.368, 107.652].into(), [337.889, 91.157].into(), [342.109, 108.803].into());
                pb.cubic_to([342.109, 108.803].into(), [354.384, 114.94].into(), [365.125, 88.471].into());
                pb.cubic_to([365.125, 88.471].into(), [368.961, 101.514].into(), [368.194, 104.199].into());
                pb.cubic_to([368.194, 104.199].into(), [374.715, 103.048].into(), [373.948, 104.199].into());
                pb.cubic_to([373.948, 104.199].into(), [386.607, 99.98].into(), [387.758, 100.747].into());
                pb.cubic_to([387.758, 100.747].into(), [394.279, 94.225].into(), [394.663, 97.678].into());
                pb.cubic_to([394.663, 97.678].into(), [403.486, 94.993].into(), [401.568, 98.445].into());
                pb.cubic_to([401.568, 98.445].into(), [404.536, 93.349].into(), [407.055, 88.276].into());
                pb.cubic_to([408.717, 84.93].into(), [410.095, 82.074].into(), [410.391, 80.032].into());
                pb.line_to([412.692, 93.458].into());
                pb.line_to([414.61, 90.773].into());
                pb.cubic_to([414.61, 90.773].into(), [415.93, 97.739].into(), [415.377, 99.212].into());
                pb.cubic_to([417.89, 98.481].into(), [434.558, 92.691].into(), [439.161, 72.743].into());
                pb.line_to([441.079, 64.688].into());
                pb.cubic_to([441.079, 64.688].into(), [446.833, 78.881].into(), [445.299, 82.717].into());
                pb.cubic_to([445.299, 82.717].into(), [450.286, 81.95].into(), [450.669, 77.73].into());
                pb.cubic_to([450.669, 77.73].into(), [454.505, 99.98].into(), [449.902, 105.734].into());
                pb.cubic_to([449.902, 105.734].into(), [454.122, 106.501].into(), [455.273, 103.048].into());
                pb.line_to([455.273, 109.953].into());
                pb.cubic_to([455.273, 109.953].into(), [462.178, 109.186].into(), [462.178, 111.488].into());
                pb.cubic_to([462.178, 111.488].into(), [466.397, 115.324].into(), [468.315, 110.721].into());
                pb.cubic_to([468.315, 110.721].into(), [456.423, 144.478].into(), [474.069, 126.065].into());
                pb.cubic_to([474.069, 126.065].into(), [480.974, 115.707].into(), [477.522, 133.737].into());
                pb.cubic_to([474.069, 151.766].into(), [470.233, 153.301].into(), [474.837, 153.685].into());
                pb.cubic_to([474.837, 153.685].into(), [475.604, 157.041].into(), [474.26, 158.336].into());
                pb.cubic_to([473.65, 158.925].into(), [473.463, 159.051].into(), [473.016, 159.409].into());
                pb.cubic_to([473.548, 159.198].into(), [474.413, 158.78].into(), [474.789, 158.624].into());
                pb.cubic_to([475.37, 158.415].into(), [479.44, 154.835].into(), [474.453, 175.934].into());
                pb.cubic_to([474.453, 175.934].into(), [480.591, 174.399].into(), [469.082, 202.403].into());
                pb.cubic_to([469.082, 202.403].into(), [471.768, 204.704].into(), [467.932, 212.76].into());
                pb.cubic_to([467.932, 212.76].into(), [475.604, 208.54].into(), [478.289, 210.075].into());
                pb.cubic_to([478.289, 210.075].into(), [477.905, 211.609].into(), [474.837, 215.445].into());
                pb.cubic_to([474.837, 215.445].into(), [454.122, 268.0].into(), [473.686, 246.901].into());
                pb.cubic_to([473.686, 246.901].into(), [485.05, 233.906].into(), [478.912, 255.772].into());
                pb.cubic_to([478.912, 255.772].into(), [470.175, 278.798].into(), [470.92, 282.918].into());
                pb.line_to([58.977, 260.841].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([58.977, 260.841].into());
                pb.cubic_to([59.4594, 255.041].into(), [60.4069, 248.741].into(), [62.0747, 245.75].into());
                pb.cubic_to([62.0747, 245.75].into(), [58.6222, 233.858].into(), [67.0616, 221.199].into());
                pb.cubic_to([67.0616, 221.199].into(), [66.6779, 214.294].into(), [68.2124, 211.226].into());
                pb.cubic_to([68.2124, 211.226].into(), [72.0484, 203.17].into(), [76.6517, 202.403].into());
                pb.cubic_to([80.3765, 201.782].into(), [88.7421, 198.839].into(), [98.1989, 197.492].into());
                pb.cubic_to([98.1989, 197.492].into(), [114.629, 183.989].into(), [111.56, 171.714].into());
                pb.cubic_to([111.56, 171.714].into(), [111.176, 155.986].into(), [107.724, 154.452].into());
                pb.cubic_to([107.724, 154.452].into(), [118.848, 165.193].into(), [109.642, 149.081].into());
                pb.line_to([105.422, 131.052].into());
                pb.cubic_to([105.422, 131.052].into(), [117.181, 141.134].into(), [119.663, 141.227].into());
                pb.cubic_to([119.273, 139.284].into(), [119.267, 139.139].into(), [115.012, 134.121].into());
                pb.line_to([105.422, 109.186].into());
                pb.cubic_to([105.422, 109.186].into(), [117.488, 120.472].into(), [118.812, 120.878].into());
                pb.cubic_to([118.043, 119.673].into(), [118.344, 119.675].into(), [117.362, 118.25].into());
                pb.line_to([114.245, 110.337].into());
                pb.cubic_to([114.245, 110.337].into(), [133.8, 122.649].into(), [136.462, 121.151].into());
                pb.cubic_to([137.675, 120.469].into(), [135.382, 116.92].into(), [126.137, 108.035].into());
                pb.cubic_to([126.137, 108.035].into(), [133.809, 111.488].into(), [138.029, 108.803].into());
                pb.cubic_to([138.029, 108.803].into(), [144.55, 109.953].into(), [143.783, 108.419].into());
                pb.cubic_to([143.783, 108.419].into(), [123.835, 98.445].into(), [120.383, 80.799].into());
                pb.cubic_to([120.383, 80.799].into(), [128.439, 90.389].into(), [125.37, 80.032].into());
                pb.line_to([125.753, 68.907].into());
                pb.cubic_to([125.753, 68.907].into(), [126.996, 74.337].into(), [127.878, 74.819].into());
                pb.cubic_to([129.357, 72.91].into(), [129.38, 69.902].into(), [129.206, 53.563].into());
                pb.cubic_to([129.206, 53.563].into(), [147.619, 70.825].into(), [136.494, 50.878].into());
                pb.line_to([136.494, 34.766].into());
                pb.cubic_to([136.494, 34.766].into(), [144.896, 43.831].into(), [146.257, 42.826].into());
                pb.cubic_to([146.689, 42.507].into(), [145.374, 39.385].into(), [144.934, 38.219].into());
                pb.cubic_to([145.747, 38.889].into(), [148.458, 41.32].into(), [150.379, 40.515].into());
                pb.cubic_to([151.627, 39.992].into(), [152.198, 37.821].into(), [150.688, 32.081].into());
                pb.cubic_to([150.688, 32.081].into(), [150.184, 28.401].into(), [151.246, 27.871].into());
                pb.cubic_to([152.219, 28.315].into(), [152.614, 28.963].into(), [154.14, 32.848].into());
                pb.cubic_to([154.14, 32.848].into(), [169.485, 62.194].into(), [163.73, 37.068].into());
                pb.cubic_to([163.73, 37.068].into(), [162.963, 18.655].into(), [167.567, 32.848].into());
                pb.cubic_to([167.567, 32.848].into(), [167.95, 22.875].into(), [176.773, 15.97].into());
                pb.cubic_to([176.773, 15.97].into(), [175.622, 64.688].into(), [187.898, 30.163].into());
                pb.line_to([191.734, 14.435].into());
                pb.cubic_to([191.734, 14.435].into(), [194.419, 23.258].into(), [194.035, 28.245].into());
                pb.cubic_to([194.035, 28.245].into(), [208.229, 43.973].into(), [201.708, 20.573].into());
                pb.cubic_to([201.708, 20.573].into(), [216.285, 42.439].into(), [213.216, 29.78].into());
                pb.cubic_to([213.216, 29.78].into(), [205.927, 14.435].into(), [207.462, 9.832].into());
                pb.cubic_to([207.462, 9.832].into(), [223.573, 43.206].into(), [224.724, 44.74].into());
                pb.cubic_to([224.724, 44.74].into(), [222.806, 4.077].into(), [233.163, 38.602].into());
                pb.cubic_to([233.163, 38.602].into(), [238.534, 27.094].into(), [235.849, 22.875].into());
                pb.cubic_to([235.849, 22.875].into(), [243.521, 30.547].into(), [242.753, 33.616].into());
                pb.cubic_to([242.753, 33.616].into(), [247.165, 41.48].into(), [249.85, 28.437].into());
                pb.cubic_to([249.85, 28.437].into(), [251.576, 19.422].into(), [253.111, 22.491].into());
                pb.cubic_to([253.111, 22.491].into(), [254.883, 11.858].into(), [256.38, 11.912].into());
                pb.cubic_to([257.085, 11.937].into(), [257.729, 14.336].into(), [258.098, 21.34].into());
                pb.cubic_to([258.098, 21.34].into(), [258.733, 26.742].into(), [257.346, 33.559].into());
                pb.cubic_to([256.577, 37.334].into(), [255.188, 41.542].into(), [252.727, 45.507].into());
                pb.cubic_to([252.727, 45.507].into(), [253.494, 48.576].into(), [250.809, 52.412].into());
                pb.cubic_to([250.809, 52.412].into(), [263.852, 31.698].into(), [256.947, 59.317].into());
                pb.cubic_to([256.947, 59.317].into(), [267.593, 51.884].into(), [268.84, 51.645].into());
                pb.cubic_to([268.17, 53.272].into(), [255.796, 73.894].into(), [264.235, 69.291].into());
                pb.cubic_to([264.235, 69.291].into(), [259.249, 79.265].into(), [276.512, 67.757].into());
                pb.cubic_to([266.618, 78.507].into(), [272.316, 77.235].into(), [277.495, 74.032].into());
                pb.cubic_to([279.677, 72.654].into(), [280.583, 71.967].into(), [281.407, 72.752].into());
                pb.cubic_to([281.247, 73.799].into(), [280.695, 74.76].into(), [278.43, 77.347].into());
                pb.cubic_to([274.68, 81.411].into(), [273.748, 82.283].into(), [274.078, 84.344].into());
                pb.cubic_to([276.415, 83.805].into(), [278.796, 81.723].into(), [285.718, 75.429].into());
                pb.cubic_to([285.718, 75.429].into(), [296.843, 59.701].into(), [297.61, 57.016].into());
                pb.cubic_to([297.61, 57.016].into(), [288.02, 85.019].into(), [283.8, 87.704].into());
                pb.cubic_to([283.8, 87.704].into(), [291.856, 122.612].into(), [331.368, 107.652].into());
                pb.cubic_to([331.368, 107.652].into(), [337.889, 91.157].into(), [342.109, 108.803].into());
                pb.cubic_to([342.109, 108.803].into(), [354.384, 114.94].into(), [365.125, 88.471].into());
                pb.cubic_to([365.125, 88.471].into(), [368.961, 101.514].into(), [368.194, 104.199].into());
                pb.cubic_to([368.194, 104.199].into(), [374.715, 103.048].into(), [373.948, 104.199].into());
                pb.cubic_to([373.948, 104.199].into(), [386.607, 99.98].into(), [387.758, 100.747].into());
                pb.cubic_to([387.758, 100.747].into(), [394.279, 94.225].into(), [394.663, 97.678].into());
                pb.cubic_to([394.663, 97.678].into(), [403.486, 94.993].into(), [401.568, 98.445].into());
                pb.cubic_to([401.568, 98.445].into(), [404.536, 93.349].into(), [407.055, 88.276].into());
                pb.cubic_to([408.717, 84.93].into(), [410.095, 82.074].into(), [410.391, 80.032].into());
                pb.line_to([412.692, 93.458].into());
                pb.line_to([414.61, 90.773].into());
                pb.cubic_to([414.61, 90.773].into(), [415.93, 97.739].into(), [415.377, 99.212].into());
                pb.cubic_to([417.89, 98.481].into(), [434.558, 92.691].into(), [439.161, 72.743].into());
                pb.line_to([441.079, 64.688].into());
                pb.cubic_to([441.079, 64.688].into(), [446.833, 78.881].into(), [445.299, 82.717].into());
                pb.cubic_to([445.299, 82.717].into(), [450.286, 81.95].into(), [450.669, 77.73].into());
                pb.cubic_to([450.669, 77.73].into(), [454.505, 99.98].into(), [449.902, 105.734].into());
                pb.cubic_to([449.902, 105.734].into(), [454.122, 106.501].into(), [455.273, 103.048].into());
                pb.line_to([455.273, 109.953].into());
                pb.cubic_to([455.273, 109.953].into(), [462.178, 109.186].into(), [462.178, 111.488].into());
                pb.cubic_to([462.178, 111.488].into(), [466.397, 115.324].into(), [468.315, 110.721].into());
                pb.cubic_to([468.315, 110.721].into(), [456.423, 144.478].into(), [474.069, 126.065].into());
                pb.cubic_to([474.069, 126.065].into(), [480.974, 115.707].into(), [477.522, 133.737].into());
                pb.cubic_to([474.069, 151.766].into(), [470.233, 153.301].into(), [474.837, 153.685].into());
                pb.cubic_to([474.837, 153.685].into(), [475.604, 157.041].into(), [474.26, 158.336].into());
                pb.cubic_to([473.65, 158.925].into(), [473.463, 159.051].into(), [473.016, 159.409].into());
                pb.cubic_to([473.548, 159.198].into(), [474.413, 158.78].into(), [474.789, 158.624].into());
                pb.cubic_to([475.37, 158.415].into(), [479.44, 154.835].into(), [474.453, 175.934].into());
                pb.cubic_to([474.453, 175.934].into(), [480.591, 174.399].into(), [469.082, 202.403].into());
                pb.cubic_to([469.082, 202.403].into(), [471.768, 204.704].into(), [467.932, 212.76].into());
                pb.cubic_to([467.932, 212.76].into(), [475.604, 208.54].into(), [478.289, 210.075].into());
                pb.cubic_to([478.289, 210.075].into(), [477.905, 211.609].into(), [474.837, 215.445].into());
                pb.cubic_to([474.837, 215.445].into(), [454.122, 268.0].into(), [473.686, 246.901].into());
                pb.cubic_to([473.686, 246.901].into(), [485.05, 233.906].into(), [478.912, 255.772].into());
                pb.cubic_to([478.912, 255.772].into(), [470.175, 278.798].into(), [470.92, 282.918].into());
                pb.line_to([58.977, 260.841].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([470.92, 282.726].into());
                pb.cubic_to([471.522, 282.552].into(), [473.638, 281.474].into(), [474.837, 279.892].into());
                pb.cubic_to([474.837, 279.892].into(), [476.838, 276.713].into(), [477.775, 276.878].into());
                pb.cubic_to([478.722, 277.777].into(), [478.595, 279.311].into(), [476.371, 287.181].into());
                pb.cubic_to([476.371, 287.181].into(), [467.548, 314.8].into(), [475.987, 304.059].into());
                pb.cubic_to([475.987, 304.059].into(), [481.741, 297.154].into(), [478.673, 310.197].into());
                pb.cubic_to([474.966, 325.951].into(), [472.535, 332.063].into(), [472.535, 332.063].into());
                pb.cubic_to([472.535, 332.063].into(), [483.659, 327.459].into(), [457.958, 365.436].into());
                pb.line_to([466.397, 361.984].into());
                pb.cubic_to([466.397, 361.984].into(), [447.6, 399.961].into(), [426.886, 404.948].into());
                pb.line_to([419.214, 410.702].into());
                pb.cubic_to([419.214, 410.702].into(), [456.04, 447.145].into(), [443.764, 482.436].into());
                pb.cubic_to([443.764, 482.436].into(), [437.243, 487.423].into(), [428.037, 478.6].into());
                pb.cubic_to([428.037, 478.6].into(), [421.899, 473.997].into(), [416.145, 475.532].into());
                pb.cubic_to([416.145, 475.532].into(), [386.607, 474.381].into(), [384.689, 474.381].into());
                pb.cubic_to([382.771, 474.381].into(), [349.397, 510.056].into(), [286.486, 493.177].into());
                pb.cubic_to([286.486, 493.177].into(), [281.499, 491.259].into(), [277.279, 492.41].into());
                pb.cubic_to([277.279, 492.41].into(), [259.632, 507.755].into(), [212.832, 485.889].into());
                pb.cubic_to([212.832, 485.889].into(), [203.242, 483.971].into(), [201.708, 483.971].into());
                pb.cubic_to([200.173, 483.971].into(), [197.488, 483.971].into(), [189.816, 477.833].into());
                pb.cubic_to([182.144, 471.695].into(), [181.76, 470.928].into(), [179.842, 469.394].into());
                pb.cubic_to([179.842, 469.394].into(), [164.114, 458.653].into(), [159.511, 457.886].into());
                pb.cubic_to([159.511, 457.886].into(), [148.386, 451.748].into(), [144.167, 442.158].into());
                pb.line_to([140.714, 441.007].into());
                pb.cubic_to([140.714, 441.007].into(), [139.18, 434.102].into(), [138.796, 432.951].into());
                pb.cubic_to([138.796, 432.951].into(), [134.193, 429.499].into(), [133.426, 424.128].into());
                pb.cubic_to([133.426, 424.128].into(), [124.986, 418.374].into(), [125.37, 414.155].into());
                pb.cubic_to([125.37, 414.155].into(), [123.835, 409.168].into(), [123.068, 404.564].into());
                pb.cubic_to([123.068, 404.564].into(), [116.163, 399.961].into(), [116.93, 397.276].into());
                pb.cubic_to([116.93, 397.276].into(), [109.642, 383.85].into(), [110.793, 377.328].into());
                pb.cubic_to([110.793, 377.328].into(), [104.655, 377.712].into(), [101.97, 375.41].into());
                pb.cubic_to([101.97, 375.41].into(), [101.203, 370.807].into(), [99.6681, 370.423].into());
                pb.cubic_to([99.6681, 370.423].into(), [96.9829, 369.272].into(), [99.2845, 365.436].into());
                pb.cubic_to([99.2845, 365.436].into(), [97.7501, 362.751].into(), [97.3665, 361.217].into());
                pb.cubic_to([97.3665, 361.217].into(), [98.1337, 358.532].into(), [93.914, 353.161].into());
                pb.cubic_to([93.914, 353.161].into(), [87.7763, 335.131].into(), [89.6944, 330.145].into());
                pb.cubic_to([89.6944, 330.145].into(), [90.078, 325.541].into(), [87.3927, 324.007].into());
                pb.cubic_to([87.3927, 324.007].into(), [83.9403, 324.39].into(), [91.996, 312.882].into());
                pb.cubic_to([91.996, 312.882].into(), [92.7632, 311.731].into(), [89.6944, 309.43].into());
                pb.cubic_to([89.6944, 309.43].into(), [73.1993, 305.977].into(), [70.8976, 290.249].into());
                pb.cubic_to([70.8976, 290.249].into(), [57.855, 276.056].into(), [57.855, 271.069].into());
                pb.cubic_to([57.855, 268.859].into(), [58.1149, 265.841].into(), [58.7852, 261.417].into());
                pb.cubic_to([58.7852, 261.417].into(), [58.2386, 253.422].into(), [84.7075, 252.655].into());
                pb.cubic_to([111.176, 251.888].into(), [470.92, 282.726].into(), [470.92, 282.726].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,114,38, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([470.92, 282.726].into());
                pb.cubic_to([471.522, 282.552].into(), [473.638, 281.474].into(), [474.837, 279.892].into());
                pb.cubic_to([474.837, 279.892].into(), [476.838, 276.713].into(), [477.775, 276.878].into());
                pb.cubic_to([478.722, 277.777].into(), [478.595, 279.311].into(), [476.371, 287.181].into());
                pb.cubic_to([476.371, 287.181].into(), [467.548, 314.8].into(), [475.987, 304.059].into());
                pb.cubic_to([475.987, 304.059].into(), [481.741, 297.154].into(), [478.673, 310.197].into());
                pb.cubic_to([474.966, 325.951].into(), [472.535, 332.063].into(), [472.535, 332.063].into());
                pb.cubic_to([472.535, 332.063].into(), [483.659, 327.459].into(), [457.958, 365.436].into());
                pb.line_to([466.397, 361.984].into());
                pb.cubic_to([466.397, 361.984].into(), [447.6, 399.961].into(), [426.886, 404.948].into());
                pb.line_to([419.214, 410.702].into());
                pb.cubic_to([419.214, 410.702].into(), [456.04, 447.145].into(), [443.764, 482.436].into());
                pb.cubic_to([443.764, 482.436].into(), [437.243, 487.423].into(), [428.037, 478.6].into());
                pb.cubic_to([428.037, 478.6].into(), [421.899, 473.997].into(), [416.145, 475.532].into());
                pb.cubic_to([416.145, 475.532].into(), [386.607, 474.381].into(), [384.689, 474.381].into());
                pb.cubic_to([382.771, 474.381].into(), [349.397, 510.056].into(), [286.486, 493.177].into());
                pb.cubic_to([286.486, 493.177].into(), [281.499, 491.259].into(), [277.279, 492.41].into());
                pb.cubic_to([277.279, 492.41].into(), [259.632, 507.755].into(), [212.832, 485.889].into());
                pb.cubic_to([212.832, 485.889].into(), [203.242, 483.971].into(), [201.708, 483.971].into());
                pb.cubic_to([200.173, 483.971].into(), [197.488, 483.971].into(), [189.816, 477.833].into());
                pb.cubic_to([182.144, 471.695].into(), [181.76, 470.928].into(), [179.842, 469.394].into());
                pb.cubic_to([179.842, 469.394].into(), [164.114, 458.653].into(), [159.511, 457.886].into());
                pb.cubic_to([159.511, 457.886].into(), [148.386, 451.748].into(), [144.167, 442.158].into());
                pb.line_to([140.714, 441.007].into());
                pb.cubic_to([140.714, 441.007].into(), [139.18, 434.102].into(), [138.796, 432.951].into());
                pb.cubic_to([138.796, 432.951].into(), [134.193, 429.499].into(), [133.426, 424.128].into());
                pb.cubic_to([133.426, 424.128].into(), [124.986, 418.374].into(), [125.37, 414.155].into());
                pb.cubic_to([125.37, 414.155].into(), [123.835, 409.168].into(), [123.068, 404.564].into());
                pb.cubic_to([123.068, 404.564].into(), [116.163, 399.961].into(), [116.93, 397.276].into());
                pb.cubic_to([116.93, 397.276].into(), [109.642, 383.85].into(), [110.793, 377.328].into());
                pb.cubic_to([110.793, 377.328].into(), [104.655, 377.712].into(), [101.97, 375.41].into());
                pb.cubic_to([101.97, 375.41].into(), [101.203, 370.807].into(), [99.6681, 370.423].into());
                pb.cubic_to([99.6681, 370.423].into(), [96.9829, 369.272].into(), [99.2845, 365.436].into());
                pb.cubic_to([99.2845, 365.436].into(), [97.7501, 362.751].into(), [97.3665, 361.217].into());
                pb.cubic_to([97.3665, 361.217].into(), [98.1337, 358.532].into(), [93.914, 353.161].into());
                pb.cubic_to([93.914, 353.161].into(), [87.7763, 335.131].into(), [89.6944, 330.145].into());
                pb.cubic_to([89.6944, 330.145].into(), [90.078, 325.541].into(), [87.3927, 324.007].into());
                pb.cubic_to([87.3927, 324.007].into(), [83.9403, 324.39].into(), [91.996, 312.882].into());
                pb.cubic_to([91.996, 312.882].into(), [92.7632, 311.731].into(), [89.6944, 309.43].into());
                pb.cubic_to([89.6944, 309.43].into(), [73.1993, 305.977].into(), [70.8976, 290.249].into());
                pb.cubic_to([70.8976, 290.249].into(), [57.855, 276.056].into(), [57.855, 271.069].into());
                pb.cubic_to([57.855, 268.859].into(), [58.1149, 265.841].into(), [58.7852, 261.417].into());
                pb.cubic_to([58.7852, 261.417].into(), [58.2386, 253.422].into(), [84.7075, 252.655].into());
                pb.cubic_to([111.176, 251.888].into(), [470.92, 282.726].into(), [470.92, 282.726].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([72.6239, 261.287].into());
                pb.cubic_to([48.6484, 299.072].into(), [62.4583, 244.983].into(), [62.4583, 244.983].into());
                pb.cubic_to([70.8976, 211.993].into(), [195.186, 248.052].into(), [195.186, 248.052].into());
                pb.cubic_to([195.186, 248.052].into(), [357.069, 277.207].into(), [367.81, 281.043].into());
                pb.cubic_to([378.551, 284.879].into(), [469.85, 278.741].into(), [469.85, 278.741].into());
                pb.line_to([464.479, 294.853].into());
                pb.cubic_to([402.335, 339.351].into(), [383.922, 317.102].into(), [370.879, 320.938].into());
                pb.cubic_to([357.836, 324.774].into(), [360.138, 315.568].into(), [357.069, 314.8].into());
                pb.cubic_to([354.0, 314.033].into(), [316.407, 337.817].into(), [310.269, 337.05].into());
                pb.cubic_to([304.132, 336.282].into(), [279.828, 359.06].into(), [294.158, 328.61].into());
                pb.cubic_to([309.502, 296.004].into(), [238.15, 291.017].into(), [222.039, 301.758].into());
                pb.cubic_to([205.927, 312.499].into(), [228.944, 284.112].into(), [228.944, 284.112].into());
                pb.cubic_to([246.59, 264.931].into(), [213.599, 281.043].into(), [213.599, 281.043].into());
                pb.cubic_to([180.609, 293.318].into(), [157.593, 268.768].into(), [154.524, 268.0].into());
                pb.cubic_to([151.455, 267.233].into(), [146.852, 264.164].into(), [146.085, 270.302].into());
                pb.cubic_to([145.317, 276.44].into(), [138.115, 292.456].into(), [107.724, 267.233].into());
                pb.cubic_to([88.5435, 251.312].into(), [75.3091, 272.412].into(), [75.3091, 272.412].into());
                pb.line_to([72.6239, 261.287].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,114,38, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([311.525, 335.375].into());
                pb.cubic_to([305.387, 334.608].into(), [281.059, 357.374].into(), [295.413, 326.936].into());
                pb.cubic_to([311.333, 293.178].into(), [239.406, 289.342].into(), [223.295, 300.083].into());
                pb.cubic_to([207.183, 310.824].into(), [230.2, 282.437].into(), [230.2, 282.437].into());
                pb.cubic_to([247.846, 263.257].into(), [214.855, 279.368].into(), [214.855, 279.368].into());
                pb.cubic_to([181.865, 291.644].into(), [158.848, 267.093].into(), [155.779, 266.326].into());
                pb.cubic_to([152.71, 265.559].into(), [148.107, 262.49].into(), [147.34, 268.627].into());
                pb.cubic_to([146.573, 274.765].into(), [139.496, 290.622].into(), [108.979, 265.559].into());
                pb.cubic_to([88.6135, 248.924].into(), [75.6754, 269.499].into(), [75.6754, 269.499].into());
                pb.line_to([72.6066, 259.805].into());
                pb.cubic_to([48.6312, 297.973].into(), [63.0855, 242.054].into(), [63.0855, 242.054].into());
                pb.cubic_to([71.5258, 209.063].into(), [196.442, 246.378].into(), [196.442, 246.378].into());
                pb.cubic_to([196.442, 246.378].into(), [358.325, 275.532].into(), [369.066, 279.368].into());
                pb.cubic_to([379.807, 283.205].into(), [470.269, 277.137].into(), [470.269, 277.137].into());
                pb.line_to([464.967, 293.736].into());
                pb.cubic_to([402.823, 338.235].into(), [385.177, 315.428].into(), [372.134, 319.264].into());
                pb.cubic_to([359.092, 323.1].into(), [361.393, 313.893].into(), [358.325, 313.126].into());
                pb.cubic_to([355.256, 312.359].into(), [317.662, 336.142].into(), [311.525, 335.375].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(232,127,58, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([312.78, 333.702].into());
                pb.cubic_to([306.642, 332.934].into(), [282.922, 355.979].into(), [296.668, 325.262].into());
                pb.cubic_to([312.205, 290.545].into(), [240.662, 287.668].into(), [224.55, 298.409].into());
                pb.cubic_to([208.439, 309.15].into(), [231.455, 280.763].into(), [231.455, 280.763].into());
                pb.cubic_to([249.101, 261.583].into(), [216.111, 277.694].into(), [216.111, 277.694].into());
                pb.cubic_to([183.121, 289.969].into(), [160.103, 265.419].into(), [157.035, 264.651].into());
                pb.cubic_to([153.966, 263.884].into(), [149.362, 260.815].into(), [148.595, 266.953].into());
                pb.cubic_to([147.828, 273.091].into(), [140.877, 288.787].into(), [110.235, 263.884].into());
                pb.cubic_to([88.6826, 246.535].into(), [76.0418, 266.587].into(), [76.0418, 266.587].into());
                pb.line_to([72.5893, 258.322].into());
                pb.cubic_to([49.7647, 295.724].into(), [63.7136, 239.124].into(), [63.7136, 239.124].into());
                pb.cubic_to([72.153, 206.134].into(), [197.698, 244.704].into(), [197.698, 244.704].into());
                pb.cubic_to([197.698, 244.704].into(), [359.58, 273.858].into(), [370.321, 277.694].into());
                pb.cubic_to([381.062, 281.53].into(), [470.687, 275.532].into(), [470.687, 275.532].into());
                pb.line_to([465.456, 292.62].into());
                pb.cubic_to([403.311, 337.119].into(), [386.432, 313.754].into(), [373.39, 317.59].into());
                pb.cubic_to([360.347, 321.426].into(), [362.649, 312.22].into(), [359.58, 311.451].into());
                pb.cubic_to([356.511, 310.684].into(), [318.918, 334.469].into(), [312.78, 333.702].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(234,140,77, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([314.035, 332.027].into());
                pb.cubic_to([307.898, 331.26].into(), [284.182, 354.307].into(), [297.924, 323.588].into());
                pb.cubic_to([314.035, 287.571].into(), [241.405, 286.335].into(), [225.806, 296.735].into());
                pb.cubic_to([209.694, 307.476].into(), [232.711, 279.089].into(), [232.711, 279.089].into());
                pb.cubic_to([250.357, 259.909].into(), [217.366, 276.021].into(), [217.366, 276.021].into());
                pb.cubic_to([184.376, 288.296].into(), [161.36, 263.745].into(), [158.291, 262.978].into());
                pb.cubic_to([155.222, 262.211].into(), [150.619, 259.142].into(), [149.852, 265.28].into());
                pb.cubic_to([149.084, 271.417].into(), [142.259, 286.951].into(), [111.49, 262.211].into());
                pb.cubic_to([88.7526, 244.146].into(), [76.4072, 263.675].into(), [76.4072, 263.675].into());
                pb.line_to([72.5711, 256.84].into());
                pb.cubic_to([51.6645, 292.132].into(), [64.3418, 236.195].into(), [64.3418, 236.195].into());
                pb.cubic_to([72.7811, 203.204].into(), [198.953, 243.03].into(), [198.953, 243.03].into());
                pb.cubic_to([198.953, 243.03].into(), [360.835, 272.184].into(), [371.577, 276.021].into());
                pb.cubic_to([382.318, 279.857].into(), [471.106, 273.928].into(), [471.106, 273.928].into());
                pb.line_to([465.945, 291.504].into());
                pb.cubic_to([403.8, 336.003].into(), [387.689, 312.08].into(), [374.646, 315.916].into());
                pb.cubic_to([361.603, 319.752].into(), [363.904, 310.545].into(), [360.835, 309.778].into());
                pb.cubic_to([357.766, 309.011].into(), [320.173, 332.794].into(), [314.035, 332.027].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(236,153,97, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([315.292, 330.353].into());
                pb.cubic_to([309.153, 329.585].into(), [285.923, 352.845].into(), [299.179, 321.913].into());
                pb.cubic_to([315.292, 284.32].into(), [243.173, 284.32].into(), [227.061, 295.061].into());
                pb.cubic_to([210.95, 305.802].into(), [233.966, 277.415].into(), [233.966, 277.415].into());
                pb.cubic_to([251.612, 258.235].into(), [218.622, 274.346].into(), [218.622, 274.346].into());
                pb.cubic_to([185.632, 286.622].into(), [162.615, 262.071].into(), [159.546, 261.303].into());
                pb.cubic_to([156.477, 260.536].into(), [151.874, 257.467].into(), [151.107, 263.605].into());
                pb.cubic_to([150.34, 269.743].into(), [143.641, 285.117].into(), [112.746, 260.536].into());
                pb.cubic_to([88.8226, 241.757].into(), [76.7735, 260.764].into(), [76.7735, 260.764].into());
                pb.line_to([72.5538, 255.358].into());
                pb.cubic_to([53.5653, 288.732].into(), [64.969, 233.266].into(), [64.969, 233.266].into());
                pb.cubic_to([73.4083, 200.275].into(), [200.209, 241.356].into(), [200.209, 241.356].into());
                pb.cubic_to([200.209, 241.356].into(), [362.092, 270.51].into(), [372.833, 274.346].into());
                pb.cubic_to([383.574, 278.182].into(), [471.524, 272.324].into(), [471.524, 272.324].into());
                pb.line_to([466.433, 290.389].into());
                pb.cubic_to([404.288, 334.887].into(), [388.944, 310.405].into(), [375.901, 314.241].into());
                pb.cubic_to([362.859, 318.077].into(), [365.16, 308.871].into(), [362.092, 308.104].into());
                pb.cubic_to([359.023, 307.336].into(), [321.429, 331.12].into(), [315.292, 330.353].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(238,165,117, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([316.547, 328.679].into());
                pb.cubic_to([310.409, 327.912].into(), [285.509, 350.402].into(), [300.435, 320.24].into());
                pb.cubic_to([318.849, 283.03].into(), [244.428, 282.646].into(), [228.316, 293.387].into());
                pb.cubic_to([212.205, 304.128].into(), [235.221, 275.741].into(), [235.221, 275.741].into());
                pb.cubic_to([252.867, 256.561].into(), [219.877, 272.673].into(), [219.877, 272.673].into());
                pb.cubic_to([186.887, 284.948].into(), [163.87, 260.397].into(), [160.802, 259.63].into());
                pb.cubic_to([157.733, 258.863].into(), [153.129, 255.794].into(), [152.362, 261.932].into());
                pb.cubic_to([151.595, 268.069].into(), [145.022, 283.282].into(), [114.002, 258.863].into());
                pb.cubic_to([88.8926, 239.368].into(), [77.1399, 257.851].into(), [77.1399, 257.851].into());
                pb.line_to([72.5366, 253.876].into());
                pb.cubic_to([55.2743, 285.715].into(), [65.5971, 230.336].into(), [65.5971, 230.336].into());
                pb.cubic_to([74.0365, 197.346].into(), [201.464, 239.682].into(), [201.464, 239.682].into());
                pb.cubic_to([201.464, 239.682].into(), [363.347, 268.837].into(), [374.088, 272.673].into());
                pb.cubic_to([384.829, 276.509].into(), [471.942, 270.72].into(), [471.942, 270.72].into());
                pb.line_to([466.921, 289.272].into());
                pb.cubic_to([404.777, 333.771].into(), [390.199, 308.732].into(), [377.157, 312.568].into());
                pb.cubic_to([364.114, 316.404].into(), [366.416, 307.197].into(), [363.347, 306.43].into());
                pb.cubic_to([360.278, 305.663].into(), [322.685, 329.446].into(), [316.547, 328.679].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(241,178,136, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([317.802, 327.006].into());
                pb.cubic_to([311.664, 326.239].into(), [286.401, 348.545].into(), [301.69, 318.566].into());
                pb.cubic_to([321.255, 280.205].into(), [245.683, 280.972].into(), [229.572, 291.713].into());
                pb.cubic_to([213.46, 302.454].into(), [236.477, 274.067].into(), [236.477, 274.067].into());
                pb.cubic_to([254.123, 254.887].into(), [221.132, 270.998].into(), [221.132, 270.998].into());
                pb.cubic_to([188.142, 283.274].into(), [165.126, 258.723].into(), [162.057, 257.956].into());
                pb.cubic_to([158.988, 257.188].into(), [154.385, 254.119].into(), [153.618, 260.257].into());
                pb.cubic_to([152.85, 266.395].into(), [146.403, 281.448].into(), [115.257, 257.188].into());
                pb.cubic_to([88.9617, 236.979].into(), [77.5062, 254.939].into(), [77.5062, 254.939].into());
                pb.line_to([72.5193, 252.393].into());
                pb.cubic_to([57.175, 281.356].into(), [66.2243, 227.406].into(), [66.2243, 227.406].into());
                pb.cubic_to([74.6637, 194.416].into(), [202.719, 238.008].into(), [202.719, 238.008].into());
                pb.cubic_to([202.719, 238.008].into(), [364.602, 267.162].into(), [375.343, 270.998].into());
                pb.cubic_to([386.084, 274.834].into(), [472.361, 269.116].into(), [472.361, 269.116].into());
                pb.line_to([467.409, 288.156].into());
                pb.cubic_to([405.265, 332.654].into(), [391.455, 307.057].into(), [378.412, 310.893].into());
                pb.cubic_to([365.37, 314.73].into(), [367.671, 305.523].into(), [364.602, 304.756].into());
                pb.cubic_to([361.533, 303.988].into(), [323.94, 327.773].into(), [317.802, 327.006].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(243,191,156, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([319.058, 325.331].into());
                pb.cubic_to([312.92, 324.564].into(), [286.603, 346.31].into(), [302.946, 316.892].into());
                pb.cubic_to([324.045, 278.915].into(), [246.939, 279.298].into(), [230.827, 290.039].into());
                pb.cubic_to([214.716, 300.78].into(), [237.732, 272.394].into(), [237.732, 272.394].into());
                pb.cubic_to([255.378, 253.213].into(), [222.388, 269.325].into(), [222.388, 269.325].into());
                pb.cubic_to([189.398, 281.6].into(), [166.381, 257.049].into(), [163.312, 256.282].into());
                pb.cubic_to([160.243, 255.515].into(), [155.64, 252.446].into(), [154.873, 258.584].into());
                pb.cubic_to([154.106, 264.721].into(), [147.785, 279.612].into(), [116.512, 255.515].into());
                pb.cubic_to([89.0317, 234.59].into(), [77.8726, 252.027].into(), [77.8726, 252.027].into());
                pb.line_to([72.5021, 250.912].into());
                pb.cubic_to([58.6913, 278.148].into(), [66.8525, 224.477].into(), [66.8525, 224.477].into());
                pb.cubic_to([75.2918, 191.486].into(), [203.975, 236.335].into(), [203.975, 236.335].into());
                pb.cubic_to([203.975, 236.335].into(), [365.858, 265.489].into(), [376.599, 269.325].into());
                pb.cubic_to([387.34, 273.161].into(), [472.779, 267.511].into(), [472.779, 267.511].into());
                pb.line_to([467.897, 287.041].into());
                pb.cubic_to([405.753, 331.539].into(), [392.71, 305.384].into(), [379.668, 309.22].into());
                pb.cubic_to([366.625, 313.056].into(), [368.927, 303.849].into(), [365.858, 303.082].into());
                pb.cubic_to([362.789, 302.315].into(), [325.195, 326.099].into(), [319.058, 325.331].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(245,204,176, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([320.313, 323.657].into());
                pb.cubic_to([314.175, 322.89].into(), [287.858, 344.636].into(), [304.202, 315.217].into());
                pb.cubic_to([325.3, 277.24].into(), [248.195, 277.624].into(), [232.083, 288.365].into());
                pb.cubic_to([215.972, 299.106].into(), [238.988, 270.719].into(), [238.988, 270.719].into());
                pb.cubic_to([256.634, 251.539].into(), [223.644, 267.65].into(), [223.644, 267.65].into());
                pb.cubic_to([190.653, 279.926].into(), [167.637, 255.375].into(), [164.568, 254.608].into());
                pb.cubic_to([161.499, 253.84].into(), [156.896, 250.772].into(), [156.128, 256.909].into());
                pb.cubic_to([155.361, 263.047].into(), [149.167, 277.777].into(), [117.768, 253.84].into());
                pb.cubic_to([89.1017, 232.201].into(), [78.2389, 249.114].into(), [78.2389, 249.114].into());
                pb.line_to([72.4848, 249.429].into());
                pb.cubic_to([59.4412, 274.748].into(), [67.4806, 221.547].into(), [67.4806, 221.547].into());
                pb.cubic_to([75.92, 188.557].into(), [205.23, 234.66].into(), [205.23, 234.66].into());
                pb.cubic_to([205.23, 234.66].into(), [367.113, 263.814].into(), [377.854, 267.65].into());
                pb.cubic_to([388.595, 271.486].into(), [473.199, 265.907].into(), [473.199, 265.907].into());
                pb.line_to([468.386, 285.924].into());
                pb.cubic_to([406.241, 330.423].into(), [393.966, 303.709].into(), [380.923, 307.545].into());
                pb.cubic_to([367.88, 311.381].into(), [370.182, 302.175].into(), [367.113, 301.408].into());
                pb.cubic_to([364.044, 300.64].into(), [326.451, 324.424].into(), [320.313, 323.657].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(248,216,196, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([321.568, 321.983].into());
                pb.cubic_to([315.431, 321.216].into(), [289.485, 343.165].into(), [305.457, 313.544].into());
                pb.cubic_to([326.555, 274.416].into(), [249.45, 275.951].into(), [233.339, 286.692].into());
                pb.cubic_to([217.227, 297.433].into(), [240.244, 269.046].into(), [240.244, 269.046].into());
                pb.cubic_to([257.89, 249.865].into(), [224.899, 265.977].into(), [224.899, 265.977].into());
                pb.cubic_to([191.909, 278.252].into(), [168.893, 253.701].into(), [165.824, 252.934].into());
                pb.cubic_to([162.754, 252.167].into(), [158.151, 249.098].into(), [157.384, 255.236].into());
                pb.cubic_to([156.616, 261.373].into(), [150.548, 275.943].into(), [119.023, 252.167].into());
                pb.cubic_to([89.1717, 229.812].into(), [78.6052, 246.203].into(), [78.6052, 246.203].into());
                pb.line_to([72.4666, 247.947].into());
                pb.cubic_to([59.9994, 270.964].into(), [68.1078, 218.618].into(), [68.1078, 218.618].into());
                pb.cubic_to([76.5472, 185.627].into(), [206.486, 232.987].into(), [206.486, 232.987].into());
                pb.cubic_to([206.486, 232.987].into(), [368.368, 262.141].into(), [379.109, 265.977].into());
                pb.cubic_to([389.85, 269.813].into(), [473.617, 264.302].into(), [473.617, 264.302].into());
                pb.line_to([468.873, 284.808].into());
                pb.cubic_to([406.729, 329.307].into(), [395.221, 302.036].into(), [382.178, 305.872].into());
                pb.cubic_to([369.136, 309.708].into(), [371.437, 300.501].into(), [368.368, 299.734].into());
                pb.cubic_to([365.3, 298.967].into(), [327.706, 322.751].into(), [321.568, 321.983].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(250,229,215, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([322.824, 320.31].into());
                pb.cubic_to([316.686, 319.543].into(), [291.776, 342.026].into(), [306.712, 311.871].into());
                pb.cubic_to([327.043, 270.824].into(), [250.706, 274.276].into(), [234.594, 285.017].into());
                pb.cubic_to([218.483, 295.758].into(), [241.499, 267.371].into(), [241.499, 267.371].into());
                pb.cubic_to([259.145, 248.191].into(), [226.155, 264.302].into(), [226.155, 264.302].into());
                pb.cubic_to([193.165, 276.578].into(), [170.148, 252.027].into(), [167.079, 251.26].into());
                pb.cubic_to([164.011, 250.492].into(), [159.407, 247.424].into(), [158.64, 253.561].into());
                pb.cubic_to([157.873, 259.699].into(), [151.93, 274.107].into(), [120.279, 250.492].into());
                pb.cubic_to([89.2407, 227.423].into(), [78.9706, 243.291].into(), [78.9706, 243.291].into());
                pb.line_to([72.4493, 246.465].into());
                pb.cubic_to([60.1739, 268.714].into(), [68.736, 215.689].into(), [68.736, 215.689].into());
                pb.cubic_to([77.1753, 182.699].into(), [207.742, 231.312].into(), [207.742, 231.312].into());
                pb.cubic_to([207.742, 231.312].into(), [369.625, 260.466].into(), [380.366, 264.302].into());
                pb.cubic_to([391.107, 268.138].into(), [474.035, 262.699].into(), [474.035, 262.699].into());
                pb.line_to([469.362, 283.693].into());
                pb.cubic_to([407.217, 328.191].into(), [396.477, 300.361].into(), [383.435, 304.197].into());
                pb.cubic_to([370.392, 308.034].into(), [372.694, 298.827].into(), [369.625, 298.06].into());
                pb.cubic_to([366.555, 297.293].into(), [328.961, 321.077].into(), [322.824, 320.31].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(252,242,235, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([72.4321, 244.983].into());
                pb.cubic_to([60.1566, 266.082].into(), [69.3632, 212.76].into(), [69.3632, 212.76].into());
                pb.cubic_to([77.8025, 179.77].into(), [208.996, 229.639].into(), [208.996, 229.639].into());
                pb.cubic_to([208.996, 229.639].into(), [370.879, 258.794].into(), [381.62, 262.63].into());
                pb.cubic_to([392.361, 266.466].into(), [474.453, 261.095].into(), [474.453, 261.095].into());
                pb.line_to([469.85, 282.577].into());
                pb.cubic_to([407.705, 327.076].into(), [397.732, 298.689].into(), [384.689, 302.525].into());
                pb.cubic_to([371.646, 306.361].into(), [373.948, 297.154].into(), [370.879, 296.387].into());
                pb.cubic_to([367.81, 295.62].into(), [330.217, 319.404].into(), [324.079, 318.636].into());
                pb.cubic_to([317.941, 317.869].into(), [293.755, 340.7].into(), [307.968, 310.197].into());
                pb.cubic_to([329.284, 264.445].into(), [249.698, 274.112].into(), [235.849, 283.345].into());
                pb.cubic_to([219.737, 294.086].into(), [242.753, 265.699].into(), [242.753, 265.699].into());
                pb.cubic_to([260.399, 246.517].into(), [227.409, 262.63].into(), [227.409, 262.63].into());
                pb.cubic_to([194.419, 274.905].into(), [171.403, 250.353].into(), [168.334, 249.586].into());
                pb.cubic_to([165.265, 248.819].into(), [160.662, 245.75].into(), [159.894, 251.888].into());
                pb.cubic_to([159.127, 258.027].into(), [153.311, 272.274].into(), [121.534, 248.819].into());
                pb.cubic_to([89.3108, 225.035].into(), [79.337, 240.38].into(), [79.337, 240.38].into());
                pb.line_to([72.4321, 244.983].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([112.327, 216.212].into());
                pb.cubic_to([112.327, 216.212].into(), [105.422, 205.088].into(), [125.37, 192.429].into());
                pb.cubic_to([125.37, 192.429].into(), [126.712, 191.086].into(), [109.45, 195.114].into());
                pb.cubic_to([109.45, 195.114].into(), [103.504, 197.032].into(), [101.97, 207.006].into());
                pb.cubic_to([101.97, 207.006].into(), [97.3665, 211.226].into(), [92.7632, 216.596].into());
                pb.cubic_to([88.1599, 221.967].into(), [112.327, 216.212].into(), [112.327, 216.212].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([246.59, 261.863].into());
                pb.cubic_to([246.59, 261.863].into(), [263.562, 236.141].into(), [262.989, 231.557].into());
                pb.cubic_to([261.742, 221.583].into(), [261.55, 212.376].into(), [264.619, 208.54].into());
                pb.cubic_to([267.689, 204.704].into(), [276.128, 172.865].into(), [276.128, 172.865].into());
                pb.cubic_to([276.128, 172.865].into(), [275.745, 171.714].into(), [287.636, 208.157].into());
                pb.cubic_to([287.636, 208.157].into(), [298.761, 223.501].into(), [279.581, 241.147].into());
                pb.cubic_to([279.581, 241.147].into(), [245.822, 268.768].into(), [246.59, 261.863].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([131.507, 190.511].into());
                pb.cubic_to([131.507, 190.511].into(), [142.248, 183.606].into(), [128.439, 153.685].into());
                pb.line_to([134.576, 155.986].into());
                pb.cubic_to([134.576, 155.986].into(), [133.809, 145.245].into(), [130.74, 142.944].into());
                pb.line_to([137.645, 146.012].into());
                pb.cubic_to([137.645, 146.012].into(), [142.248, 138.34].into(), [138.412, 133.737].into());
                pb.cubic_to([138.412, 133.737].into(), [154.524, 126.065].into(), [153.757, 119.927].into());
                pb.cubic_to([153.757, 119.927].into(), [159.894, 127.599].into(), [156.058, 133.737].into());
                pb.cubic_to([152.222, 139.875].into(), [145.317, 136.039].into(), [146.085, 153.685].into());
                pb.line_to([137.645, 150.616].into());
                pb.cubic_to([137.645, 150.616].into(), [143.016, 159.055].into(), [143.016, 165.193].into());
                pb.line_to([135.344, 162.891].into());
                pb.cubic_to([135.344, 162.891].into(), [150.179, 188.38].into(), [139.947, 189.744].into());
                pb.cubic_to([134.193, 190.511].into(), [131.507, 190.511].into(), [131.507, 190.511].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([162.58, 174.399].into());
                pb.cubic_to([162.58, 174.399].into(), [165.265, 178.619].into(), [162.58, 177.852].into());
                pb.cubic_to([159.894, 177.085].into(), [129.973, 162.891].into(), [124.219, 153.685].into());
                pb.cubic_to([124.219, 153.685].into(), [157.209, 177.085].into(), [162.58, 174.399].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([172.553, 166.727].into());
                pb.cubic_to([172.553, 166.727].into(), [175.239, 170.947].into(), [172.553, 170.18].into());
                pb.cubic_to([169.868, 169.412].into(), [139.947, 155.219].into(), [134.193, 146.012].into());
                pb.cubic_to([134.193, 146.012].into(), [167.183, 169.412].into(), [172.553, 166.727].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([185.212, 181.304].into());
                pb.cubic_to([185.212, 181.304].into(), [187.898, 185.524].into(), [185.212, 184.757].into());
                pb.cubic_to([182.527, 183.989].into(), [152.606, 169.796].into(), [146.852, 160.589].into());
                pb.cubic_to([146.852, 160.589].into(), [179.842, 183.989].into(), [185.212, 181.304].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([162.963, 139.491].into());
                pb.cubic_to([162.963, 139.491].into(), [162.963, 145.245].into(), [160.278, 144.478].into());
                pb.cubic_to([157.593, 143.711].into(), [123.068, 126.832].into(), [117.314, 117.625].into());
                pb.cubic_to([117.314, 117.625].into(), [157.593, 142.176].into(), [162.963, 139.491].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([164.114, 149.848].into());
                pb.cubic_to([164.114, 149.848].into(), [165.265, 154.452].into(), [162.58, 153.685].into());
                pb.cubic_to([160.662, 153.685].into(), [135.344, 142.56].into(), [129.589, 133.353].into());
                pb.cubic_to([129.589, 133.353].into(), [157.976, 154.068].into(), [164.114, 149.848].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([150.304, 104.199].into());
                pb.line_to([140.714, 96.911].into());
                pb.cubic_to([140.714, 96.911].into(), [150.688, 104.199].into(), [154.14, 103.048].into());
                pb.cubic_to([154.14, 103.048].into(), [147.619, 92.307].into(), [146.852, 87.321].into());
                pb.cubic_to([146.852, 87.321].into(), [156.826, 99.596].into(), [162.196, 99.212].into());
                pb.cubic_to([162.196, 99.212].into(), [169.485, 98.829].into(), [169.485, 88.471].into());
                pb.cubic_to([169.485, 88.471].into(), [174.855, 98.445].into(), [177.924, 98.062].into());
                pb.cubic_to([177.924, 98.062].into(), [179.075, 91.924].into(), [177.924, 85.402].into());
                pb.cubic_to([177.924, 85.402].into(), [181.76, 92.691].into(), [185.596, 91.157].into());
                pb.cubic_to([185.596, 91.157].into(), [191.734, 93.075].into(), [190.967, 81.95].into());
                pb.cubic_to([190.967, 81.95].into(), [190.967, 71.976].into(), [190.199, 69.291].into());
                pb.cubic_to([190.199, 69.291].into(), [195.57, 94.609].into(), [197.871, 94.993].into());
                pb.cubic_to([197.871, 94.993].into(), [205.544, 96.143].into(), [210.147, 87.704].into());
                pb.cubic_to([210.147, 87.704].into(), [206.311, 94.993].into(), [210.914, 93.075].into());
                pb.cubic_to([210.914, 93.075].into(), [221.271, 91.54].into(), [224.34, 85.019].into());
                pb.cubic_to([224.34, 85.019].into(), [217.819, 96.527].into(), [223.19, 93.458].into());
                pb.cubic_to([223.19, 93.458].into(), [229.711, 93.458].into(), [230.862, 87.321].into());
                pb.cubic_to([230.862, 87.321].into(), [238.917, 66.989].into(), [240.835, 65.455].into());
                pb.cubic_to([240.835, 65.455].into(), [233.547, 86.17].into(), [235.081, 86.17].into());
                pb.cubic_to([235.081, 86.17].into(), [233.163, 97.678].into(), [238.15, 83.484].into());
                pb.cubic_to([238.15, 83.484].into(), [235.081, 96.911].into(), [240.452, 96.143].into());
                pb.cubic_to([245.822, 95.376].into(), [250.042, 85.786].into(), [258.098, 88.088].into());
                pb.cubic_to([258.098, 88.088].into(), [267.305, 82.717].into(), [269.223, 149.081].into());
                pb.line_to([150.304, 104.199].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([154.908, 193.196].into());
                pb.cubic_to([154.908, 193.196].into(), [169.101, 198.95].into(), [207.462, 193.196].into());
                pb.cubic_to([207.462, 193.196].into(), [214.367, 192.812].into(), [220.888, 201.252].into());
                pb.cubic_to([227.409, 209.691].into(), [253.111, 216.596].into(), [259.249, 214.678].into());
                pb.line_to([268.456, 208.54].into());
                pb.line_to([269.223, 207.389].into());
                pb.cubic_to([269.223, 207.389].into(), [281.115, 197.416].into(), [281.499, 190.127].into());
                pb.cubic_to([281.882, 182.839].into(), [267.689, 136.806].into(), [258.481, 121.462].into());
                pb.cubic_to([249.275, 106.117].into(), [240.068, 94.225].into(), [221.655, 96.527].into());
                pb.cubic_to([221.655, 96.527].into(), [201.708, 100.363].into(), [177.157, 96.527].into());
                pb.cubic_to([177.157, 96.527].into(), [149.153, 98.062].into(), [146.468, 105.734].into());
                pb.cubic_to([143.783, 113.406].into(), [157.209, 127.983].into(), [157.209, 127.983].into());
                pb.cubic_to([157.209, 127.983].into(), [161.429, 136.039].into(), [160.278, 149.848].into());
                pb.cubic_to([159.127, 163.658].into(), [159.511, 190.511].into(), [154.908, 193.196].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([176.006, 191.278].into());
                pb.cubic_to([184.062, 173.632].into(), [155.675, 111.104].into(), [155.675, 111.104].into());
                pb.cubic_to([153.757, 109.57].into(), [167.816, 103.772].into(), [177.54, 106.117].into());
                pb.cubic_to([188.038, 108.647].into(), [226.642, 104.583].into(), [226.642, 104.583].into());
                pb.cubic_to([249.275, 119.544].into(), [261.55, 162.124].into(), [261.55, 162.124].into());
                pb.cubic_to([261.55, 162.124].into(), [271.525, 185.14].into(), [254.645, 188.209].into());
                pb.cubic_to([237.767, 191.278].into(), [176.006, 191.278].into(), [176.006, 191.278].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(229,102,140, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([174.058, 161.648].into());
                pb.cubic_to([177.248, 173.914].into(), [178.767, 185.231].into(), [176.006, 191.278].into());
                pb.cubic_to([176.006, 191.278].into(), [235.849, 185.14].into(), [246.59, 205.088].into());
                pb.cubic_to([250.657, 212.64].into(), [264.812, 183.222].into(), [264.427, 174.016].into());
                pb.cubic_to([264.427, 174.016].into(), [204.009, 160.206].into(), [189.816, 170.947].into());
                pb.line_to([174.058, 161.648].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(178,50,89, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([178.308, 146.012].into());
                pb.cubic_to([178.308, 146.012].into(), [180.226, 139.107].into(), [177.924, 135.271].into());
                pb.cubic_to([177.924, 135.271].into(), [176.389, 134.504].into(), [175.239, 134.121].into());
                pb.cubic_to([175.239, 134.121].into(), [176.389, 130.668].into(), [182.144, 129.134].into());
                pb.cubic_to([182.144, 129.134].into(), [184.062, 124.914].into(), [186.363, 124.53].into());
                pb.cubic_to([188.665, 124.147].into(), [193.268, 118.776].into(), [197.104, 119.927].into());
                pb.cubic_to([200.94, 121.078].into(), [211.681, 124.914].into(), [211.681, 124.914].into());
                pb.cubic_to([211.681, 124.914].into(), [217.052, 127.983].into(), [225.491, 124.53].into());
                pb.cubic_to([225.491, 124.53].into(), [227.769, 125.3].into(), [228.176, 129.134].into());
                pb.cubic_to([228.656, 133.641].into(), [231.629, 137.189].into(), [233.547, 139.107].into());
                pb.cubic_to([235.465, 141.025].into(), [244.672, 153.301].into(), [243.521, 153.685].into());
                pb.cubic_to([242.37, 154.068].into(), [178.308, 146.012].into(), [178.308, 146.012].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(165,38,76, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([174.088, 192.429].into());
                pb.cubic_to([174.088, 192.429].into(), [171.403, 170.947].into(), [174.471, 162.891].into());
                pb.cubic_to([177.54, 154.835].into(), [176.773, 152.917].into(), [176.006, 149.081].into());
                pb.cubic_to([175.239, 145.245].into(), [179.458, 135.655].into(), [184.829, 129.901].into());
                pb.line_to([196.337, 128.366].into());
                pb.cubic_to([196.337, 128.366].into(), [210.914, 131.819].into(), [219.737, 129.134].into());
                pb.cubic_to([219.737, 129.134].into(), [228.362, 127.846].into(), [231.629, 142.176].into());
                pb.cubic_to([231.629, 142.176].into(), [236.232, 148.314].into(), [243.137, 150.999].into());
                pb.cubic_to([250.042, 153.685].into(), [256.947, 193.58].into(), [253.111, 201.252].into());
                pb.cubic_to([249.275, 208.924].into(), [235.465, 213.144].into(), [220.121, 198.183].into());
                pb.cubic_to([204.776, 183.222].into(), [202.858, 199.334].into(), [174.088, 192.429].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,114,127, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([174.088, 192.429].into());
                pb.cubic_to([174.088, 192.429].into(), [171.403, 170.947].into(), [174.471, 162.891].into());
                pb.cubic_to([177.54, 154.835].into(), [176.773, 152.917].into(), [176.006, 149.081].into());
                pb.cubic_to([175.239, 145.245].into(), [179.458, 135.655].into(), [184.829, 129.901].into());
                pb.line_to([196.337, 128.366].into());
                pb.cubic_to([196.337, 128.366].into(), [210.914, 131.819].into(), [219.737, 129.134].into());
                pb.cubic_to([219.737, 129.134].into(), [228.362, 127.846].into(), [231.629, 142.176].into());
                pb.cubic_to([231.629, 142.176].into(), [236.232, 148.314].into(), [243.137, 150.999].into());
                pb.cubic_to([250.042, 153.685].into(), [256.947, 193.58].into(), [253.111, 201.252].into());
                pb.cubic_to([249.275, 208.924].into(), [235.465, 213.144].into(), [220.121, 198.183].into());
                pb.cubic_to([204.776, 183.222].into(), [202.858, 199.334].into(), [174.088, 192.429].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([175.622, 120.694].into());
                pb.cubic_to([175.622, 120.694].into(), [174.855, 122.612].into(), [170.635, 122.996].into());
                pb.cubic_to([170.635, 122.996].into(), [149.153, 126.448].into(), [141.098, 138.34].into());
                pb.cubic_to([141.098, 138.34].into(), [134.576, 143.711].into(), [138.796, 132.586].into());
                pb.cubic_to([138.796, 132.586].into(), [148.77, 113.022].into(), [155.291, 110.337].into());
                pb.cubic_to([155.291, 110.337].into(), [171.019, 106.501].into(), [175.622, 120.694].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([175.622, 120.694].into());
                pb.cubic_to([175.622, 120.694].into(), [174.855, 122.612].into(), [170.635, 122.996].into());
                pb.cubic_to([170.635, 122.996].into(), [149.153, 126.448].into(), [141.098, 138.34].into());
                pb.cubic_to([141.098, 138.34].into(), [134.576, 143.711].into(), [138.796, 132.586].into());
                pb.cubic_to([138.796, 132.586].into(), [148.77, 113.022].into(), [155.291, 110.337].into());
                pb.cubic_to([155.291, 110.337].into(), [171.019, 106.501].into(), [175.622, 120.694].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([252.288, 182.045].into());
                pb.cubic_to([252.92, 189.627].into(), [254.793, 197.888].into(), [253.111, 201.252].into());
                pb.cubic_to([246.929, 213.617].into(), [230.652, 208.45].into(), [220.121, 198.183].into());
                pb.cubic_to([204.776, 183.222].into(), [202.858, 199.334].into(), [174.088, 192.429].into());
                pb.cubic_to([174.088, 192.429].into(), [172.414, 179.038].into(), [173.22, 169.436].into());
                pb.cubic_to([173.22, 169.436].into(), [208.996, 180.537].into(), [209.763, 175.166].into());
                pb.cubic_to([209.763, 175.166].into(), [211.298, 178.235].into(), [220.121, 178.235].into());
                pb.cubic_to([228.944, 178.235].into(), [250.754, 179.359].into(), [252.288, 182.045].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,63,76, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([211.585, 192.325].into());
                pb.line_to([210.236, 190.976].into());
                pb.cubic_to([210.236, 190.976].into(), [211.195, 190.03].into(), [211.855, 187.92].into());
                pb.cubic_to([212.508, 185.829].into(), [212.801, 182.657].into(), [211.195, 178.299].into());
                pb.cubic_to([210.966, 178.043].into(), [207.726, 174.392].into(), [204.572, 168.979].into());
                pb.cubic_to([201.306, 163.374].into(), [198.226, 156.042].into(), [199.238, 148.96].into());
                pb.line_to([201.126, 149.229].into());
                pb.cubic_to([200.219, 155.573].into(), [203.061, 162.597].into(), [206.22, 168.02].into());
                pb.cubic_to([209.38, 173.443].into(), [212.784, 177.221].into(), [212.784, 177.221].into());
                pb.line_to([212.904, 177.34].into());
                pb.line_to([212.964, 177.52].into());
                pb.cubic_to([214.757, 182.304].into(), [214.492, 185.996].into(), [213.713, 188.489].into());
                pb.cubic_to([212.934, 190.982].into(), [211.585, 192.325].into(), [211.585, 192.325].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(165,25,38, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([164.881, 110.337].into());
                pb.cubic_to([164.881, 110.337].into(), [160.662, 122.612].into(), [169.101, 116.091].into());
                pb.cubic_to([169.101, 116.091].into(), [173.704, 114.173].into(), [172.553, 112.639].into());
                pb.cubic_to([171.403, 111.104].into(), [166.032, 107.268].into(), [164.881, 110.337].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([164.881, 110.337].into());
                pb.cubic_to([164.881, 110.337].into(), [160.662, 122.612].into(), [169.101, 116.091].into());
                pb.cubic_to([169.101, 116.091].into(), [173.704, 114.173].into(), [172.553, 112.639].into());
                pb.cubic_to([171.403, 111.104].into(), [166.032, 107.268].into(), [164.881, 110.337].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([169.715, 109.186].into());
                pb.cubic_to([169.715, 109.186].into(), [166.339, 119.006].into(), [173.09, 113.789].into());
                pb.cubic_to([173.09, 113.789].into(), [177.33, 111.442].into(), [175.852, 111.027].into());
                pb.cubic_to([171.479, 109.8].into(), [175.852, 107.345].into(), [169.715, 109.186].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([169.715, 109.186].into());
                pb.cubic_to([169.715, 109.186].into(), [166.339, 119.006].into(), [173.09, 113.789].into());
                pb.cubic_to([173.09, 113.789].into(), [177.33, 111.442].into(), [175.852, 111.027].into());
                pb.cubic_to([171.479, 109.8].into(), [175.852, 107.345].into(), [169.715, 109.186].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([174.318, 109.186].into());
                pb.cubic_to([174.318, 109.186].into(), [170.942, 119.006].into(), [177.694, 113.789].into());
                pb.cubic_to([177.694, 113.789].into(), [181.889, 111.574].into(), [180.456, 111.027].into());
                pb.cubic_to([177.233, 109.8].into(), [180.456, 107.345].into(), [174.318, 109.186].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([174.318, 109.186].into());
                pb.cubic_to([174.318, 109.186].into(), [170.942, 119.006].into(), [177.694, 113.789].into());
                pb.cubic_to([177.694, 113.789].into(), [181.889, 111.574].into(), [180.456, 111.027].into());
                pb.cubic_to([177.233, 109.8].into(), [180.456, 107.345].into(), [174.318, 109.186].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([180.648, 108.994].into());
                pb.cubic_to([180.648, 108.994].into(), [177.272, 118.815].into(), [184.023, 113.598].into());
                pb.cubic_to([184.023, 113.598].into(), [188.227, 111.361].into(), [186.786, 110.836].into());
                pb.cubic_to([183.947, 109.8].into(), [186.786, 107.153].into(), [180.648, 108.994].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([180.648, 108.994].into());
                pb.cubic_to([180.648, 108.994].into(), [177.272, 118.815].into(), [184.023, 113.598].into());
                pb.cubic_to([184.023, 113.598].into(), [188.227, 111.361].into(), [186.786, 110.836].into());
                pb.cubic_to([183.947, 109.8].into(), [186.786, 107.153].into(), [180.648, 108.994].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([186.862, 109.071].into());
                pb.cubic_to([186.862, 109.071].into(), [183.486, 118.891].into(), [190.239, 113.674].into());
                pb.cubic_to([190.239, 113.674].into(), [193.921, 112.14].into(), [193.001, 110.912].into());
                pb.cubic_to([192.08, 109.685].into(), [193.001, 107.23].into(), [186.862, 109.071].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([186.862, 109.071].into());
                pb.cubic_to([186.862, 109.071].into(), [183.486, 118.891].into(), [190.239, 113.674].into());
                pb.cubic_to([190.239, 113.674].into(), [193.921, 112.14].into(), [193.001, 110.912].into());
                pb.cubic_to([192.08, 109.685].into(), [193.001, 107.23].into(), [186.862, 109.071].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([193.268, 108.419].into());
                pb.cubic_to([193.268, 108.419].into(), [188.665, 120.311].into(), [197.488, 114.173].into());
                pb.cubic_to([197.488, 114.173].into(), [202.091, 112.255].into(), [200.94, 110.721].into());
                pb.cubic_to([199.79, 109.186].into(), [200.94, 106.117].into(), [193.268, 108.419].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([193.268, 108.419].into());
                pb.cubic_to([193.268, 108.419].into(), [188.665, 120.311].into(), [197.488, 114.173].into());
                pb.cubic_to([197.488, 114.173].into(), [202.091, 112.255].into(), [200.94, 110.721].into());
                pb.cubic_to([199.79, 109.186].into(), [200.94, 106.117].into(), [193.268, 108.419].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([179.218, 126.872].into());
                pb.cubic_to([177.146, 127.056].into(), [174.992, 126.989].into(), [173.014, 126.842].into());
                pb.cubic_to([169.059, 126.549].into(), [165.822, 125.853].into(), [165.822, 125.853].into());
                pb.line_to([166.241, 123.965].into());
                pb.cubic_to([166.241, 123.965].into(), [169.352, 124.642].into(), [173.164, 124.924].into());
                pb.cubic_to([176.977, 125.207].into(), [181.466, 125.038].into(), [183.983, 123.695].into());
                pb.line_to([184.133, 123.606].into());
                pb.line_to([184.253, 123.576].into());
                pb.cubic_to([184.253, 123.576].into(), [185.7, 123.31].into(), [187.31, 123.066].into());
                pb.cubic_to([188.115, 122.944].into(), [188.966, 122.823].into(), [189.707, 122.766].into());
                pb.cubic_to([190.449, 122.709].into(), [191.004, 122.639].into(), [191.655, 122.856].into());
                pb.cubic_to([192.079, 122.998].into(), [193.159, 123.195].into(), [194.053, 123.336].into());
                pb.cubic_to([194.947, 123.477].into(), [195.701, 123.576].into(), [195.701, 123.576].into());
                pb.line_to([195.461, 125.494].into());
                pb.cubic_to([195.461, 125.494].into(), [194.681, 125.37].into(), [193.753, 125.224].into());
                pb.cubic_to([192.825, 125.077].into(), [191.783, 124.927].into(), [191.056, 124.684].into());
                pb.cubic_to([191.132, 124.71].into(), [190.518, 124.634].into(), [189.857, 124.684].into());
                pb.cubic_to([189.196, 124.735].into(), [188.387, 124.836].into(), [187.61, 124.954].into());
                pb.cubic_to([186.054, 125.19].into(), [184.643, 125.464].into(), [184.643, 125.464].into());
                pb.cubic_to([183.066, 126.252].into(), [181.197, 126.696].into(), [179.218, 126.872].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(165,38,76, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([233.433, 139.16].into());
                pb.cubic_to([228.309, 136.085].into(), [227.968, 131.482].into(), [227.259, 129.0].into());
                pb.cubic_to([227.038, 128.228].into(), [226.952, 127.497].into(), [226.839, 126.902].into());
                pb.cubic_to([226.727, 126.308].into(), [226.581, 125.898].into(), [226.42, 125.703].into());
                pb.cubic_to([226.258, 125.509].into(), [226.077, 125.372].into(), [225.401, 125.374].into());
                pb.cubic_to([224.724, 125.375].into(), [223.61, 125.617].into(), [221.984, 126.213].into());
                pb.cubic_to([215.833, 128.468].into(), [209.765, 126.09].into(), [205.321, 123.276].into());
                pb.cubic_to([200.877, 120.461].into(), [197.919, 117.102].into(), [197.919, 117.102].into());
                pb.line_to([199.357, 115.844].into());
                pb.cubic_to([199.357, 115.844].into(), [202.153, 119.006].into(), [206.34, 121.658].into());
                pb.cubic_to([210.527, 124.309].into(), [215.968, 126.349].into(), [221.325, 124.385].into());
                pb.cubic_to([223.064, 123.747].into(), [224.344, 123.458].into(), [225.401, 123.456].into());
                pb.cubic_to([226.458, 123.454].into(), [227.356, 123.834].into(), [227.888, 124.475].into());
                pb.cubic_to([228.42, 125.116].into(), [228.597, 125.852].into(), [228.727, 126.543].into());
                pb.cubic_to([228.858, 127.233].into(), [228.924, 127.92].into(), [229.087, 128.491].into());
                pb.cubic_to([229.912, 131.379].into(), [229.955, 134.832].into(), [234.422, 137.511].into());
                pb.line_to([233.433, 139.16].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(165,38,76, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([215.134, 131.819].into());
                pb.cubic_to([215.134, 131.819].into(), [211.298, 142.176].into(), [208.612, 129.901].into());
                pb.cubic_to([205.927, 117.625].into(), [202.858, 114.173].into(), [201.324, 111.488].into());
                pb.cubic_to([201.324, 111.488].into(), [201.324, 106.501].into(), [209.38, 106.884].into());
                pb.cubic_to([209.38, 106.884].into(), [219.737, 107.268].into(), [220.121, 109.953].into());
                pb.cubic_to([220.504, 112.639].into(), [218.97, 123.763].into(), [215.134, 131.819].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([215.134, 131.819].into());
                pb.cubic_to([215.134, 131.819].into(), [211.298, 142.176].into(), [208.612, 129.901].into());
                pb.cubic_to([205.927, 117.625].into(), [202.858, 114.173].into(), [201.324, 111.488].into());
                pb.cubic_to([201.324, 111.488].into(), [201.324, 106.501].into(), [209.38, 106.884].into());
                pb.cubic_to([209.38, 106.884].into(), [219.737, 107.268].into(), [220.121, 109.953].into());
                pb.cubic_to([220.504, 112.639].into(), [218.97, 123.763].into(), [215.134, 131.819].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([232.384, 127.352].into());
                pb.cubic_to([231.609, 127.288].into(), [230.859, 127.05].into(), [230.226, 126.812].into());
                pb.cubic_to([228.96, 126.338].into(), [228.038, 125.703].into(), [228.038, 125.703].into());
                pb.line_to([229.087, 124.115].into());
                pb.cubic_to([229.087, 124.115].into(), [229.879, 124.626].into(), [230.915, 125.014].into());
                pb.cubic_to([231.951, 125.403].into(), [233.132, 125.569].into(), [233.882, 125.194].into());
                pb.line_to([234.751, 126.932].into());
                pb.cubic_to([233.976, 127.32].into(), [233.158, 127.415].into(), [232.384, 127.352].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(165,38,76, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([242.034, 147.042].into());
                pb.cubic_to([236.866, 146.18].into(), [233.972, 141.138].into(), [233.972, 141.138].into());
                pb.line_to([235.62, 140.149].into());
                pb.cubic_to([235.62, 140.149].into(), [238.295, 144.48].into(), [242.333, 145.153].into());
                pb.line_to([242.034, 147.042].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(165,38,76, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([158.744, 105.35].into());
                pb.cubic_to([158.744, 105.35].into(), [176.006, 102.281].into(), [180.226, 103.816].into());
                pb.cubic_to([180.226, 103.816].into(), [188.665, 103.816].into(), [180.609, 101.898].into());
                pb.cubic_to([180.609, 101.898].into(), [168.334, 101.898].into(), [160.662, 103.048].into());
                pb.cubic_to([160.662, 103.048].into(), [149.537, 108.419].into(), [158.744, 105.35].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(178,178,178, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([172.17, 194.73].into());
                pb.cubic_to([172.17, 194.73].into(), [189.049, 194.73].into(), [190.967, 193.963].into());
                pb.cubic_to([190.967, 193.963].into(), [197.871, 164.426].into(), [194.419, 157.137].into());
                pb.cubic_to([194.419, 157.137].into(), [193.268, 154.452].into(), [190.583, 159.822].into());
                pb.cubic_to([190.583, 159.822].into(), [172.937, 191.278].into(), [169.868, 193.196].into());
                pb.cubic_to([166.799, 195.114].into(), [171.019, 194.73].into(), [172.17, 194.73].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([172.17, 194.73].into());
                pb.cubic_to([172.17, 194.73].into(), [189.049, 194.73].into(), [190.967, 193.963].into());
                pb.cubic_to([190.967, 193.963].into(), [197.871, 164.426].into(), [194.419, 157.137].into());
                pb.cubic_to([194.419, 157.137].into(), [193.268, 154.452].into(), [190.583, 159.822].into());
                pb.cubic_to([190.583, 159.822].into(), [172.937, 191.278].into(), [169.868, 193.196].into());
                pb.cubic_to([166.799, 195.114].into(), [171.019, 194.73].into(), [172.17, 194.73].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([98.2296, 197.32].into());
                pb.cubic_to([98.2296, 197.32].into(), [106.765, 195.689].into(), [118.848, 193.196].into());
                pb.cubic_to([118.848, 193.196].into(), [123.452, 171.714].into(), [126.521, 167.111].into());
                pb.cubic_to([129.589, 162.507].into(), [126.137, 162.507].into(), [122.685, 165.193].into());
                pb.cubic_to([119.232, 167.878].into(), [105.039, 181.304].into(), [103.121, 185.524].into());
                pb.cubic_to([101.203, 189.744].into(), [98.2296, 197.32].into(), [98.2296, 197.32].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([98.2296, 197.32].into());
                pb.cubic_to([98.2296, 197.32].into(), [106.765, 195.689].into(), [118.848, 193.196].into());
                pb.cubic_to([118.848, 193.196].into(), [123.452, 171.714].into(), [126.521, 167.111].into());
                pb.cubic_to([129.589, 162.507].into(), [126.137, 162.507].into(), [122.685, 165.193].into());
                pb.cubic_to([119.232, 167.878].into(), [105.039, 181.304].into(), [103.121, 185.524].into());
                pb.cubic_to([101.203, 189.744].into(), [98.2296, 197.32].into(), [98.2296, 197.32].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([119.195, 192.988].into());
                pb.cubic_to([119.195, 192.988].into(), [124.757, 191.503].into(), [125.725, 189.379].into());
                pb.cubic_to([126.691, 187.256].into(), [124.572, 184.094].into(), [124.572, 184.094].into());
                pb.cubic_to([124.572, 184.094].into(), [123.613, 180.924].into(), [122.46, 182.998].into());
                pb.cubic_to([121.307, 185.072].into(), [118.553, 192.418].into(), [119.195, 192.988].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([119.195, 192.988].into());
                pb.cubic_to([119.195, 192.988].into(), [124.757, 191.503].into(), [125.725, 189.379].into());
                pb.cubic_to([126.691, 187.256].into(), [124.572, 184.094].into(), [124.572, 184.094].into());
                pb.cubic_to([124.572, 184.094].into(), [123.613, 180.924].into(), [122.46, 182.998].into());
                pb.cubic_to([121.307, 185.072].into(), [118.553, 192.418].into(), [119.195, 192.988].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([119.232, 193.196].into());
                pb.cubic_to([119.232, 193.196].into(), [122.685, 188.209].into(), [126.137, 188.209].into());
                pb.cubic_to([129.589, 188.209].into(), [129.956, 188.605].into(), [132.658, 188.017].into());
                pb.cubic_to([137.07, 187.058].into(), [136.686, 188.976].into(), [143.016, 187.826].into());
                pb.cubic_to([145.548, 187.365].into(), [148.003, 188.209].into(), [150.688, 187.058].into());
                pb.cubic_to([153.373, 185.907].into(), [156.442, 186.675].into(), [157.593, 188.593].into());
                pb.cubic_to([158.744, 190.511].into(), [163.347, 194.539].into(), [163.347, 194.539].into());
                pb.cubic_to([163.347, 194.539].into(), [151.071, 192.812].into(), [148.386, 192.045].into());
                pb.cubic_to([148.386, 192.045].into(), [126.904, 190.894].into(), [119.232, 193.196].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([162.004, 193.004].into());
                pb.cubic_to([162.004, 193.004].into(), [155.819, 189.648].into(), [155.435, 187.346].into());
                pb.cubic_to([155.051, 185.044].into(), [160.47, 181.496].into(), [160.47, 181.496].into());
                pb.cubic_to([160.47, 181.496].into(), [163.107, 177.085].into(), [163.683, 179.386].into());
                pb.cubic_to([164.258, 181.688].into(), [162.771, 192.621].into(), [162.004, 193.004].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([162.004, 193.004].into());
                pb.cubic_to([162.004, 193.004].into(), [155.819, 189.648].into(), [155.435, 187.346].into());
                pb.cubic_to([155.051, 185.044].into(), [160.47, 181.496].into(), [160.47, 181.496].into());
                pb.cubic_to([160.47, 181.496].into(), [163.107, 177.085].into(), [163.683, 179.386].into());
                pb.cubic_to([164.258, 181.688].into(), [162.771, 192.621].into(), [162.004, 193.004].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([126.055, 187.764].into());
                pb.cubic_to([126.055, 187.764].into(), [132.775, 177.035].into(), [132.983, 187.786].into());
                pb.cubic_to([132.983, 187.786].into(), [133.518, 188.993].into(), [131.83, 189.014].into());
                pb.cubic_to([126.004, 189.087].into(), [127.462, 193.021].into(), [126.055, 187.764].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([126.055, 187.764].into());
                pb.cubic_to([126.055, 187.764].into(), [132.775, 177.035].into(), [132.983, 187.786].into());
                pb.cubic_to([132.983, 187.786].into(), [133.518, 188.993].into(), [131.83, 189.014].into());
                pb.cubic_to([126.004, 189.087].into(), [127.462, 193.021].into(), [126.055, 187.764].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([132.939, 187.525].into());
                pb.cubic_to([132.939, 187.525].into(), [140.536, 176.797].into(), [139.926, 187.615].into());
                pb.cubic_to([139.926, 187.615].into(), [139.932, 187.933].into(), [138.251, 188.08].into());
                pb.cubic_to([133.699, 188.477].into(), [134.03, 192.81].into(), [132.939, 187.525].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([132.939, 187.525].into());
                pb.cubic_to([132.939, 187.525].into(), [140.536, 176.797].into(), [139.926, 187.615].into());
                pb.cubic_to([139.926, 187.615].into(), [139.932, 187.933].into(), [138.251, 188.08].into());
                pb.cubic_to([133.699, 188.477].into(), [134.03, 192.81].into(), [132.939, 187.525].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([139.857, 187.518].into());
                pb.cubic_to([139.857, 187.518].into(), [147.49, 177.325].into(), [146.849, 186.595].into());
                pb.cubic_to([146.849, 186.595].into(), [146.963, 187.778].into(), [145.377, 188.066].into());
                pb.cubic_to([141.644, 188.743].into(), [141.442, 191.859].into(), [139.857, 187.518].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([139.857, 187.518].into());
                pb.cubic_to([139.857, 187.518].into(), [147.49, 177.325].into(), [146.849, 186.595].into());
                pb.cubic_to([146.849, 186.595].into(), [146.963, 187.778].into(), [145.377, 188.066].into());
                pb.cubic_to([141.644, 188.743].into(), [141.442, 191.859].into(), [139.857, 187.518].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([146.451, 187.441].into());
                pb.cubic_to([146.451, 187.441].into(), [154.027, 176.354].into(), [154.361, 185.734].into());
                pb.cubic_to([154.361, 185.734].into(), [155.937, 187.055].into(), [154.263, 187.268].into());
                pb.cubic_to([148.683, 187.978].into(), [149.449, 192.249].into(), [146.451, 187.441].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([146.451, 187.441].into());
                pb.cubic_to([146.451, 187.441].into(), [154.027, 176.354].into(), [154.361, 185.734].into());
                pb.cubic_to([154.361, 185.734].into(), [155.937, 187.055].into(), [154.263, 187.268].into());
                pb.cubic_to([148.683, 187.978].into(), [149.449, 192.249].into(), [146.451, 187.441].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([111.759, 184.056].into());
                pb.line_to([104.415, 185.524].into());
                pb.cubic_to([101.922, 190.319].into(), [99.9079, 196.217].into(), [99.9079, 196.217].into());
                pb.cubic_to([99.9079, 196.217].into(), [105.998, 195.258].into(), [117.985, 192.573].into());
                pb.cubic_to([117.985, 192.573].into(), [118.825, 189.391].into(), [120.237, 183.833].into());
                pb.line_to([111.759, 184.056].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(229,229,178, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([174.161, 188.527].into());
                pb.cubic_to([172.563, 190.93].into(), [171.3, 192.616].into(), [170.677, 193.005].into());
                pb.cubic_to([167.787, 194.811].into(), [171.76, 194.449].into(), [172.843, 194.449].into());
                pb.cubic_to([172.843, 194.449].into(), [188.735, 194.449].into(), [190.541, 193.727].into());
                pb.cubic_to([190.541, 193.727].into(), [191.043, 191.577].into(), [191.699, 188.325].into());
                pb.cubic_to([191.699, 188.325].into(), [182.025, 190.253].into(), [174.161, 188.527].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(229,229,178, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([225.568, 321.014].into());
                pb.cubic_to([252.153, 317.216].into(), [276.627, 351.395].into(), [278.315, 360.68].into());
                pb.cubic_to([280.003, 369.963].into(), [270.297, 381.356].into(), [270.297, 381.356].into());
                pb.cubic_to([271.563, 384.31].into(), [266.922, 397.813].into(), [261.858, 406.674].into());
                pb.cubic_to([256.794, 415.536].into(), [241.545, 414.601].into(), [224.724, 415.536].into());
                pb.cubic_to([209.533, 416.379].into(), [191.81, 394.015].into(), [190.545, 392.327].into());
                pb.cubic_to([189.279, 390.639].into(), [195.186, 353.927].into(), [196.452, 348.442].into());
                pb.cubic_to([197.718, 342.956].into(), [195.186, 317.638].into(), [195.186, 317.638].into());
                pb.cubic_to([228.023, 326.365].into(), [198.984, 324.812].into(), [225.568, 321.014].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,114,38, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([191.243, 391.706].into());
                pb.cubic_to([190.0, 390.049].into(), [195.8, 354.004].into(), [197.043, 348.618].into());
                pb.cubic_to([198.286, 343.232].into(), [195.8, 318.375].into(), [195.8, 318.375].into());
                pb.cubic_to([227.133, 326.891].into(), [199.529, 325.418].into(), [225.629, 321.689].into());
                pb.cubic_to([251.731, 317.96].into(), [275.76, 351.518].into(), [277.417, 360.634].into());
                pb.cubic_to([279.074, 369.748].into(), [269.546, 380.934].into(), [269.546, 380.934].into());
                pb.cubic_to([270.788, 383.834].into(), [266.231, 397.092].into(), [261.26, 405.792].into());
                pb.cubic_to([256.288, 414.492].into(), [241.317, 413.574].into(), [224.801, 414.492].into());
                pb.cubic_to([209.886, 415.321].into(), [192.486, 393.363].into(), [191.243, 391.706].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(234,142,81, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([191.941, 391.084].into());
                pb.cubic_to([190.721, 389.458].into(), [196.414, 354.081].into(), [197.634, 348.795].into());
                pb.cubic_to([198.854, 343.509].into(), [196.414, 319.111].into(), [196.414, 319.111].into());
                pb.cubic_to([226.531, 327.896].into(), [200.073, 326.024].into(), [225.691, 322.364].into());
                pb.cubic_to([251.309, 318.704].into(), [274.893, 351.641].into(), [276.519, 360.588].into());
                pb.cubic_to([278.146, 369.533].into(), [268.794, 380.512].into(), [268.794, 380.512].into());
                pb.cubic_to([270.014, 383.359].into(), [265.541, 396.37].into(), [260.661, 404.91].into());
                pb.cubic_to([255.782, 413.449].into(), [241.088, 412.548].into(), [224.877, 413.449].into());
                pb.cubic_to([210.239, 414.262].into(), [193.161, 392.711].into(), [191.941, 391.084].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(239,170,124, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([192.639, 390.463].into());
                pb.cubic_to([191.442, 388.867].into(), [197.028, 354.157].into(), [198.224, 348.971].into());
                pb.cubic_to([199.421, 343.785].into(), [197.028, 319.848].into(), [197.028, 319.848].into());
                pb.cubic_to([225.257, 328.517].into(), [200.618, 326.63].into(), [225.752, 323.039].into());
                pb.cubic_to([250.887, 319.449].into(), [274.026, 351.764].into(), [275.622, 360.541].into());
                pb.cubic_to([277.218, 369.319].into(), [268.042, 380.09].into(), [268.042, 380.09].into());
                pb.cubic_to([269.239, 382.883].into(), [264.85, 395.649].into(), [260.063, 404.027].into());
                pb.cubic_to([255.275, 412.405].into(), [240.858, 411.522].into(), [224.954, 412.405].into());
                pb.cubic_to([210.592, 413.203].into(), [193.836, 392.059].into(), [192.639, 390.463].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(244,198,168, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([193.337, 389.841].into());
                pb.cubic_to([192.163, 388.276].into(), [197.641, 354.234].into(), [198.815, 349.148].into());
                pb.cubic_to([199.989, 344.061].into(), [197.641, 320.584].into(), [197.641, 320.584].into());
                pb.cubic_to([224.367, 329.139].into(), [201.163, 327.236].into(), [225.813, 323.714].into());
                pb.cubic_to([250.465, 320.193].into(), [273.159, 351.886].into(), [274.724, 360.496].into());
                pb.cubic_to([276.289, 369.104].into(), [267.29, 379.668].into(), [267.29, 379.668].into());
                pb.cubic_to([268.464, 382.407].into(), [264.16, 394.928].into(), [259.464, 403.145].into());
                pb.cubic_to([254.769, 411.362].into(), [240.629, 410.496].into(), [225.031, 411.362].into());
                pb.cubic_to([210.945, 412.144].into(), [194.511, 391.407].into(), [193.337, 389.841].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(249,226,211, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([225.875, 324.39].into());
                pb.cubic_to([250.042, 320.938].into(), [272.292, 352.01].into(), [273.827, 360.45].into());
                pb.cubic_to([275.361, 368.889].into(), [266.538, 379.246].into(), [266.538, 379.246].into());
                pb.cubic_to([267.689, 381.932].into(), [263.468, 394.207].into(), [258.865, 402.263].into());
                pb.cubic_to([254.262, 410.318].into(), [240.4, 409.469].into(), [225.108, 410.318].into());
                pb.cubic_to([211.298, 411.086].into(), [195.186, 390.754].into(), [194.035, 389.22].into());
                pb.cubic_to([192.885, 387.686].into(), [198.255, 354.312].into(), [199.406, 349.325].into());
                pb.cubic_to([200.557, 344.338].into(), [198.255, 321.322].into(), [198.255, 321.322].into());
                pb.cubic_to([222.71, 329.569].into(), [201.708, 327.843].into(), [225.875, 324.39].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([270.374, 356.997].into());
                pb.cubic_to([270.374, 356.997].into(), [243.712, 349.709].into(), [232.588, 351.243].into());
                pb.cubic_to([232.588, 351.243].into(), [217.435, 357.572].into(), [208.996, 336.666].into());
                pb.cubic_to([208.996, 336.666].into(), [205.544, 329.761].into(), [203.626, 327.843].into());
                pb.cubic_to([201.708, 325.925].into(), [270.374, 356.997].into(), [270.374, 356.997].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([274.018, 359.107].into());
                pb.cubic_to([274.018, 359.107].into(), [246.206, 347.407].into(), [236.616, 347.791].into());
                pb.cubic_to([236.616, 347.791].into(), [220.888, 352.202].into(), [212.832, 338.2].into());
                pb.cubic_to([212.832, 338.2].into(), [204.776, 329.377].into(), [201.708, 327.843].into());
                pb.cubic_to([201.708, 327.843].into(), [201.324, 326.309].into(), [207.462, 330.145].into());
                pb.line_to([217.435, 325.158].into());
                pb.cubic_to([217.435, 325.158].into(), [231.629, 315.951].into(), [240.835, 331.295].into());
                pb.cubic_to([240.835, 331.295].into(), [244.672, 342.036].into(), [244.672, 343.954].into());
                pb.cubic_to([244.672, 345.872].into(), [265.003, 351.243].into(), [266.538, 351.627].into());
                pb.cubic_to([268.072, 352.01].into(), [274.402, 356.038].into(), [274.018, 359.107].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([228.56, 324.665].into());
                pb.cubic_to([221.97, 324.665].into(), [213.94, 328.371].into(), [213.94, 334.364].into());
                pb.cubic_to([213.94, 340.356].into(), [221.97, 346.364].into(), [228.56, 346.364].into());
                pb.cubic_to([235.152, 346.364].into(), [240.496, 341.507].into(), [240.496, 335.515].into());
                pb.cubic_to([240.496, 329.522].into(), [235.152, 324.665].into(), [228.56, 324.665].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(153,204,50, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([225.086, 340.665].into());
                pb.cubic_to([220.438, 339.973].into(), [215.558, 338.531].into(), [215.627, 338.738].into());
                pb.cubic_to([217.104, 343.168].into(), [223.204, 346.364].into(), [228.56, 346.364].into());
                pb.cubic_to([232.68, 346.364].into(), [236.313, 344.468].into(), [238.457, 341.581].into());
                pb.cubic_to([238.457, 341.581].into(), [233.359, 341.897].into(), [225.086, 340.665].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(101,153,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([236.616, 340.886].into());
                pb.cubic_to([236.616, 340.886].into(), [232.396, 343.954].into(), [232.396, 341.845].into());
                pb.cubic_to([232.396, 341.845].into(), [235.849, 337.625].into(), [236.616, 340.886].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([227.026, 333.093].into());
                pb.cubic_to([224.629, 333.093].into(), [222.686, 335.036].into(), [222.686, 337.433].into());
                pb.cubic_to([222.686, 339.83].into(), [224.629, 341.773].into(), [227.026, 341.773].into());
                pb.cubic_to([229.423, 341.773].into(), [231.366, 339.83].into(), [231.366, 337.433].into());
                pb.cubic_to([231.366, 335.036].into(), [229.423, 333.093].into(), [227.026, 333.093].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([127.288, 345.872].into());
                pb.cubic_to([127.288, 345.872].into(), [124.219, 366.204].into(), [126.521, 370.423].into());
                pb.cubic_to([126.521, 370.423].into(), [136.878, 380.013].into(), [136.494, 383.466].into());
                pb.cubic_to([136.494, 383.466].into(), [136.111, 400.728].into(), [134.96, 401.495].into());
                pb.cubic_to([133.809, 402.263].into(), [126.521, 408.017].into(), [120.766, 401.879].into());
                pb.cubic_to([120.766, 401.879].into(), [110.793, 384.617].into(), [111.56, 378.479].into());
                pb.line_to([111.56, 376.561].into());
                pb.cubic_to([111.56, 376.561].into(), [104.271, 376.945].into(), [102.737, 375.027].into());
                pb.cubic_to([102.737, 375.027].into(), [101.586, 370.04].into(), [100.435, 369.656].into());
                pb.cubic_to([100.435, 369.656].into(), [97.7501, 367.354].into(), [99.6681, 364.669].into());
                pb.cubic_to([99.6681, 364.669].into(), [97.7501, 362.368].into(), [98.1337, 358.532].into());
                pb.line_to([105.422, 354.695].into());
                pb.cubic_to([105.422, 354.695].into(), [107.34, 340.886].into(), [117.698, 335.899].into());
                pb.cubic_to([122.335, 333.665].into(), [125.37, 340.118].into(), [127.288, 345.872].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,114,38, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([126.329, 347.637].into());
                pb.cubic_to([126.329, 347.637].into(), [123.567, 365.935].into(), [125.638, 369.733].into());
                pb.cubic_to([125.638, 369.733].into(), [134.96, 378.364].into(), [134.615, 381.471].into());
                pb.cubic_to([134.615, 381.471].into(), [134.269, 397.007].into(), [133.234, 397.698].into());
                pb.cubic_to([132.198, 398.388].into(), [125.638, 403.567].into(), [120.46, 398.043].into());
                pb.cubic_to([120.46, 398.043].into(), [111.483, 382.507].into(), [112.174, 376.983].into());
                pb.line_to([112.174, 375.257].into());
                pb.cubic_to([112.174, 375.257].into(), [105.614, 375.602].into(), [104.233, 373.876].into());
                pb.cubic_to([104.233, 373.876].into(), [103.197, 369.388].into(), [102.162, 369.042].into());
                pb.cubic_to([102.162, 369.042].into(), [99.7449, 366.971].into(), [101.471, 364.554].into());
                pb.cubic_to([101.471, 364.554].into(), [99.7449, 362.483].into(), [100.09, 359.03].into());
                pb.line_to([106.65, 355.578].into());
                pb.cubic_to([106.65, 355.578].into(), [108.376, 343.149].into(), [117.698, 338.661].into());
                pb.cubic_to([121.871, 336.652].into(), [124.603, 342.458].into(), [126.329, 347.637].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([134.528, 400.546].into());
                pb.cubic_to([133.483, 401.371].into(), [126.3, 406.904].into(), [120.69, 400.92].into());
                pb.cubic_to([120.69, 400.92].into(), [110.965, 384.089].into(), [111.713, 378.105].into());
                pb.line_to([111.713, 376.235].into());
                pb.cubic_to([111.713, 376.235].into(), [104.607, 376.609].into(), [103.111, 374.739].into());
                pb.cubic_to([103.111, 374.739].into(), [101.989, 369.877].into(), [100.867, 369.503].into());
                pb.cubic_to([100.867, 369.503].into(), [98.2488, 367.259].into(), [100.119, 364.64].into());
                pb.cubic_to([100.119, 364.64].into(), [98.2488, 362.396].into(), [98.6228, 358.656].into());
                pb.line_to([105.729, 354.916].into());
                pb.cubic_to([105.729, 354.916].into(), [107.599, 341.451].into(), [117.698, 336.589].into());
                pb.cubic_to([122.218, 334.412].into(), [125.178, 340.703].into(), [127.048, 346.314].into());
                pb.cubic_to([127.048, 346.314].into(), [124.056, 366.137].into(), [126.3, 370.251].into());
                pb.cubic_to([126.3, 370.251].into(), [136.398, 379.601].into(), [136.024, 382.967].into());
                pb.cubic_to([136.024, 382.967].into(), [135.65, 399.798].into(), [134.528, 400.546].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(235,149,92, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([134.097, 399.597].into());
                pb.cubic_to([133.157, 400.479].into(), [126.079, 405.792].into(), [120.613, 399.961].into());
                pb.cubic_to([120.613, 399.961].into(), [111.138, 383.562].into(), [111.867, 377.731].into());
                pb.line_to([111.867, 375.909].into());
                pb.cubic_to([111.867, 375.909].into(), [104.943, 376.273].into(), [103.485, 374.451].into());
                pb.cubic_to([103.485, 374.451].into(), [102.392, 369.714].into(), [101.298, 369.349].into());
                pb.cubic_to([101.298, 369.349].into(), [98.7475, 367.163].into(), [100.57, 364.612].into());
                pb.cubic_to([100.57, 364.612].into(), [98.7475, 362.425].into(), [99.1119, 358.781].into());
                pb.line_to([106.036, 355.137].into());
                pb.cubic_to([106.036, 355.137].into(), [107.858, 342.017].into(), [117.698, 337.28].into());
                pb.cubic_to([122.103, 335.158].into(), [124.986, 341.288].into(), [126.808, 346.755].into());
                pb.cubic_to([126.808, 346.755].into(), [123.893, 366.069].into(), [126.079, 370.078].into());
                pb.cubic_to([126.079, 370.078].into(), [135.919, 379.189].into(), [135.555, 382.469].into());
                pb.cubic_to([135.555, 382.469].into(), [135.19, 398.868].into(), [134.097, 399.597].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(242,184,146, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([133.665, 398.647].into());
                pb.cubic_to([132.831, 399.587].into(), [125.859, 404.679].into(), [120.536, 399.002].into());
                pb.cubic_to([120.536, 399.002].into(), [111.311, 383.034].into(), [112.02, 377.357].into());
                pb.line_to([112.02, 375.583].into());
                pb.cubic_to([112.02, 375.583].into(), [105.278, 375.938].into(), [103.859, 374.163].into());
                pb.cubic_to([103.859, 374.163].into(), [102.795, 369.551].into(), [101.73, 369.196].into());
                pb.cubic_to([101.73, 369.196].into(), [99.2462, 367.067].into(), [101.02, 364.583].into());
                pb.cubic_to([101.02, 364.583].into(), [99.2462, 362.454].into(), [99.601, 358.906].into());
                pb.line_to([106.343, 355.357].into());
                pb.cubic_to([106.343, 355.357].into(), [108.117, 342.583].into(), [117.698, 337.97].into());
                pb.cubic_to([121.987, 335.904].into(), [124.794, 341.873].into(), [126.569, 347.196].into());
                pb.cubic_to([126.569, 347.196].into(), [123.73, 366.002].into(), [125.859, 369.905].into());
                pb.cubic_to([125.859, 369.905].into(), [135.439, 378.776].into(), [135.085, 381.97].into());
                pb.cubic_to([135.085, 381.97].into(), [134.73, 397.938].into(), [133.665, 398.647].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(248,220,200, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([126.329, 347.733].into());
                pb.cubic_to([126.329, 347.733].into(), [123.567, 365.935].into(), [125.638, 369.733].into());
                pb.cubic_to([125.638, 369.733].into(), [134.96, 378.364].into(), [134.615, 381.471].into());
                pb.cubic_to([134.615, 381.471].into(), [134.269, 397.007].into(), [133.234, 397.698].into());
                pb.cubic_to([132.505, 398.695].into(), [125.638, 403.567].into(), [120.46, 398.043].into());
                pb.cubic_to([120.46, 398.043].into(), [111.483, 382.507].into(), [112.174, 376.983].into());
                pb.line_to([112.174, 375.257].into());
                pb.cubic_to([112.174, 375.257].into(), [105.614, 375.602].into(), [104.233, 373.876].into());
                pb.cubic_to([104.233, 373.876].into(), [103.197, 369.388].into(), [102.162, 369.042].into());
                pb.cubic_to([102.162, 369.042].into(), [99.7449, 366.971].into(), [101.471, 364.554].into());
                pb.cubic_to([101.471, 364.554].into(), [99.7449, 362.483].into(), [100.09, 359.03].into());
                pb.line_to([106.65, 355.578].into());
                pb.cubic_to([106.65, 355.578].into(), [108.376, 343.149].into(), [117.698, 338.661].into());
                pb.cubic_to([121.871, 336.652].into(), [124.603, 342.554].into(), [126.329, 347.733].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([123.356, 353.736].into());
                pb.cubic_to([123.356, 353.736].into(), [102.641, 363.518].into(), [101.778, 364.286].into());
                pb.cubic_to([101.778, 364.286].into(), [110.505, 356.422].into(), [111.272, 356.422].into());
                pb.cubic_to([112.039, 356.422].into(), [123.356, 353.736].into(), [123.356, 353.736].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([106.957, 359.682].into());
                pb.cubic_to([106.957, 359.682].into(), [124.603, 356.23].into(), [124.603, 352.01].into());
                pb.cubic_to([124.603, 349.218].into(), [124.37, 336.348].into(), [119.232, 337.817].into());
                pb.cubic_to([111.176, 340.118].into(), [114.629, 353.928].into(), [106.957, 359.682].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([115.012, 356.038].into());
                pb.cubic_to([115.012, 356.038].into(), [123.622, 354.624].into(), [124.603, 352.01].into());
                pb.cubic_to([125.178, 350.476].into(), [125.814, 342.508].into(), [120.575, 341.461].into());
                pb.cubic_to([116.209, 340.587].into(), [114.071, 350.389].into(), [115.012, 356.038].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(153,204,50, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([197.483, 315.233].into());
                pb.cubic_to([197.006, 316.903].into(), [198.264, 316.778].into(), [199.981, 317.294].into());
                pb.cubic_to([201.899, 317.869].into(), [213.599, 321.513].into(), [214.367, 324.007].into());
                pb.cubic_to([215.134, 326.5].into(), [227.793, 322.281].into(), [227.793, 322.281].into());
                pb.cubic_to([229.519, 321.513].into(), [233.739, 319.02].into(), [233.739, 319.02].into());
                pb.cubic_to([238.342, 317.869].into(), [244.672, 317.486].into(), [244.672, 317.486].into());
                pb.cubic_to([246.973, 316.527].into(), [250.234, 313.841].into(), [250.234, 313.841].into());
                pb.cubic_to([264.235, 304.059].into(), [276.128, 310.964].into(), [276.128, 310.964].into());
                pb.cubic_to([295.309, 317.294].into(), [289.554, 333.789].into(), [289.554, 333.789].into());
                pb.cubic_to([286.677, 342.42].into(), [289.746, 345.681].into(), [289.746, 345.681].into());
                pb.cubic_to([289.938, 349.325].into(), [296.843, 343.187].into(), [296.843, 343.187].into());
                pb.cubic_to([299.336, 339.159].into(), [300.104, 334.364].into(), [300.104, 334.364].into());
                pb.cubic_to([307.776, 323.623].into(), [304.515, 340.694].into(), [304.515, 340.694].into());
                pb.cubic_to([304.707, 341.653].into(), [302.022, 345.105].into(), [302.022, 346.256].into());
                pb.cubic_to([302.022, 347.407].into(), [300.295, 350.668].into(), [300.295, 350.668].into());
                pb.cubic_to([297.418, 353.928].into(), [299.72, 360.641].into(), [299.72, 360.641].into());
                pb.cubic_to([301.446, 373.876].into(), [299.336, 372.15].into(), [299.336, 372.15].into());
                pb.cubic_to([298.186, 373.876].into(), [289.363, 364.286].into(), [289.363, 364.286].into());
                pb.cubic_to([287.253, 361.025].into(), [281.499, 359.491].into(), [281.499, 359.491].into());
                pb.cubic_to([278.813, 357.764].into(), [275.553, 359.107].into(), [275.553, 359.107].into());
                pb.cubic_to([273.059, 359.491].into(), [267.689, 352.777].into(), [267.689, 352.777].into());
                pb.cubic_to([270.374, 352.969].into(), [272.676, 348.75].into(), [274.977, 348.558].into());
                pb.cubic_to([277.279, 348.366].into(), [279.005, 350.859].into(), [280.54, 351.435].into());
                pb.cubic_to([282.074, 352.01].into(), [284.759, 346.448].into(), [284.759, 346.448].into());
                pb.cubic_to([285.143, 343.954].into(), [279.772, 339.351].into(), [279.772, 339.351].into());
                pb.cubic_to([279.389, 334.94].into(), [277.854, 336.474].into(), [277.854, 336.474].into());
                pb.cubic_to([274.977, 337.05].into(), [273.827, 333.405].into(), [272.868, 328.994].into());
                pb.cubic_to([271.909, 324.582].into(), [267.881, 324.199].into(), [267.881, 324.199].into());
                pb.cubic_to([266.346, 317.102].into(), [265.194, 319.979].into(), [265.194, 319.979].into());
                pb.cubic_to([265.003, 325.35].into(), [259.249, 319.787].into(), [259.249, 319.787].into());
                pb.cubic_to([258.098, 317.869].into(), [253.686, 319.979].into(), [253.686, 319.979].into());
                pb.cubic_to([247.165, 321.897].into(), [249.467, 323.815].into(), [249.467, 323.815].into());
                pb.cubic_to([251.193, 325.925].into(), [261.934, 323.815].into(), [261.934, 323.815].into());
                pb.cubic_to([264.044, 325.35].into(), [256.372, 329.186].into(), [256.372, 329.186].into());
                pb.cubic_to([255.796, 330.912].into(), [256.755, 335.131].into(), [256.755, 335.131].into());
                pb.cubic_to([257.906, 338.2].into(), [264.427, 343.571].into(), [264.427, 343.571].into());
                pb.cubic_to([273.443, 344.722].into(), [270.758, 346.256].into(), [270.758, 346.256].into());
                pb.cubic_to([264.812, 351.243].into(), [259.249, 343.954].into(), [259.249, 343.954].into());
                pb.cubic_to([257.139, 338.009].into(), [240.452, 323.623].into(), [240.452, 323.623].into());
                pb.cubic_to([235.849, 320.363].into(), [238.342, 326.884].into(), [234.506, 323.623].into());
                pb.cubic_to([230.67, 320.363].into(), [210.914, 328.994].into(), [210.914, 328.994].into());
                pb.cubic_to([199.826, 330.138].into(), [197.206, 315.041].into(), [193.822, 318.033].into());
                pb.cubic_to([193.822, 318.033].into(), [199.018, 309.862].into(), [197.483, 315.233].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([384.305, 474.764].into());
                pb.cubic_to([384.305, 474.764].into(), [359.755, 467.092].into(), [357.069, 449.063].into());
                pb.cubic_to([357.069, 449.063].into(), [354.768, 427.197].into(), [374.332, 410.318].into());
                pb.cubic_to([374.332, 410.318].into(), [374.715, 404.181].into(), [376.633, 401.112].into());
                pb.cubic_to([376.633, 401.112].into(), [375.099, 396.509].into(), [393.128, 403.797].into());
                pb.line_to([419.214, 411.853].into());
                pb.cubic_to([419.214, 411.853].into(), [425.351, 414.155].into(), [430.338, 422.594].into());
                pb.cubic_to([435.325, 431.033].into(), [449.902, 449.063].into(), [446.45, 473.23].into());
                pb.cubic_to([446.45, 473.23].into(), [447.6, 483.971].into(), [441.846, 484.354].into());
                pb.cubic_to([441.846, 484.354].into(), [433.791, 485.889].into(), [426.886, 478.6].into());
                pb.cubic_to([426.886, 478.6].into(), [420.364, 475.532].into(), [418.063, 475.915].into());
                pb.line_to([384.305, 474.764].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([436.688, 475.714].into());
                pb.cubic_to([436.688, 475.714].into(), [438.702, 484.278].into(), [434.06, 479.636].into());
                pb.cubic_to([434.06, 479.636].into(), [427.309, 474.151].into(), [420.134, 474.151].into());
                pb.cubic_to([420.134, 474.151].into(), [406.209, 472.041].into(), [401.99, 459.382].into());
                pb.cubic_to([401.99, 459.382].into(), [398.192, 433.642].into(), [405.787, 428.156].into());
                pb.cubic_to([405.787, 428.156].into(), [410.429, 420.983].into(), [417.18, 427.312].into());
                pb.cubic_to([423.933, 433.642].into(), [438.798, 462.633].into(), [436.688, 475.714].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([436.329, 475.371].into());
                pb.cubic_to([436.329, 475.371].into(), [438.333, 483.756].into(), [433.776, 479.199].into());
                pb.cubic_to([433.776, 479.199].into(), [427.147, 473.813].into(), [420.104, 473.813].into());
                pb.cubic_to([420.104, 473.813].into(), [406.432, 471.742].into(), [402.289, 459.313].into());
                pb.cubic_to([402.289, 459.313].into(), [398.56, 434.041].into(), [406.017, 428.655].into());
                pb.cubic_to([406.017, 428.655].into(), [410.575, 421.612].into(), [417.203, 427.826].into());
                pb.cubic_to([423.833, 434.041].into(), [438.401, 462.527].into(), [436.329, 475.371].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(50,50,50, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([435.97, 475.027].into());
                pb.cubic_to([435.97, 475.027].into(), [437.965, 483.234].into(), [433.492, 478.762].into());
                pb.cubic_to([433.492, 478.762].into(), [426.986, 473.475].into(), [420.073, 473.475].into());
                pb.cubic_to([420.073, 473.475].into(), [406.654, 471.442].into(), [402.588, 459.244].into());
                pb.cubic_to([402.588, 459.244].into(), [398.928, 434.44].into(), [406.248, 429.154].into());
                pb.cubic_to([406.248, 429.154].into(), [410.721, 422.241].into(), [417.226, 428.34].into());
                pb.cubic_to([423.733, 434.44].into(), [438.004, 462.422].into(), [435.97, 475.027].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(102,102,102, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([435.612, 474.684].into());
                pb.cubic_to([435.612, 474.684].into(), [437.597, 482.713].into(), [433.208, 478.324].into());
                pb.cubic_to([433.208, 478.324].into(), [426.825, 473.138].into(), [420.042, 473.138].into());
                pb.cubic_to([420.042, 473.138].into(), [406.877, 471.143].into(), [402.887, 459.175].into());
                pb.cubic_to([402.887, 459.175].into(), [399.297, 434.839].into(), [406.478, 429.652].into());
                pb.cubic_to([406.478, 429.652].into(), [410.866, 422.87].into(), [417.249, 428.854].into());
                pb.cubic_to([423.634, 434.839].into(), [437.607, 462.316].into(), [435.612, 474.684].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(153,153,153, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([435.253, 474.341].into());
                pb.cubic_to([435.253, 474.341].into(), [437.229, 482.191].into(), [432.925, 477.887].into());
                pb.cubic_to([432.925, 477.887].into(), [426.663, 472.8].into(), [420.011, 472.8].into());
                pb.cubic_to([420.011, 472.8].into(), [407.099, 470.844].into(), [403.186, 459.105].into());
                pb.cubic_to([403.186, 459.105].into(), [399.665, 435.237].into(), [406.708, 430.151].into());
                pb.cubic_to([406.708, 430.151].into(), [411.012, 423.499].into(), [417.273, 429.368].into());
                pb.cubic_to([423.533, 435.237].into(), [437.21, 462.211].into(), [435.253, 474.341].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([434.893, 473.997].into());
                pb.cubic_to([434.893, 473.997].into(), [436.859, 481.669].into(), [432.64, 477.45].into());
                pb.cubic_to([432.64, 477.45].into(), [426.502, 472.463].into(), [419.981, 472.463].into());
                pb.cubic_to([419.981, 472.463].into(), [407.322, 470.545].into(), [403.486, 459.036].into());
                pb.cubic_to([403.486, 459.036].into(), [400.033, 435.637].into(), [406.938, 430.65].into());
                pb.cubic_to([406.938, 430.65].into(), [411.158, 424.128].into(), [417.296, 429.882].into());
                pb.cubic_to([423.433, 435.637].into(), [436.812, 462.105].into(), [434.893, 473.997].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([232.012, 279.125].into());
                pb.cubic_to([232.012, 279.125].into(), [212.449, 297.538].into(), [204.776, 298.305].into());
                pb.cubic_to([204.776, 298.305].into(), [171.786, 302.141].into(), [157.593, 284.879].into());
                pb.cubic_to([157.593, 284.879].into(), [174.471, 304.443].into(), [200.94, 299.072].into());
                pb.cubic_to([200.94, 299.072].into(), [180.226, 303.292].into(), [168.334, 300.223].into());
                pb.cubic_to([168.334, 300.223].into(), [152.222, 300.223].into(), [143.016, 286.797].into());
                pb.line_to([140.33, 282.194].into());
                pb.cubic_to([140.33, 282.194].into(), [144.167, 296.387].into(), [161.812, 302.141].into());
                pb.cubic_to([161.812, 302.141].into(), [183.678, 306.745].into(), [194.035, 302.141].into());
                pb.cubic_to([194.035, 302.141].into(), [173.321, 308.663].into(), [163.73, 306.745].into());
                pb.cubic_to([163.73, 306.745].into(), [134.576, 309.046].into(), [122.301, 283.728].into());
                pb.cubic_to([122.301, 283.728].into(), [126.137, 297.538].into(), [140.33, 304.443].into());
                pb.cubic_to([140.33, 304.443].into(), [153.373, 312.882].into(), [172.937, 310.197].into());
                pb.cubic_to([172.937, 310.197].into(), [186.747, 307.128].into(), [191.734, 304.827].into());
                pb.cubic_to([196.721, 302.525].into(), [195.57, 305.21].into(), [187.514, 309.813].into());
                pb.cubic_to([187.514, 309.813].into(), [182.144, 319.404].into(), [168.717, 319.02].into());
                pb.cubic_to([168.717, 319.02].into(), [127.671, 315.568].into(), [117.698, 304.059].into());
                pb.cubic_to([117.698, 304.059].into(), [130.74, 314.8].into(), [140.714, 317.486].into());
                pb.cubic_to([140.714, 317.486].into(), [162.196, 325.158].into(), [170.252, 324.39].into());
                pb.cubic_to([170.252, 324.39].into(), [194.035, 323.431].into(), [201.324, 327.268].into());
                pb.cubic_to([201.324, 327.268].into(), [190.583, 322.472].into(), [193.652, 319.404].into());
                pb.cubic_to([196.721, 316.335].into(), [203.242, 309.046].into(), [203.242, 307.895].into());
                pb.cubic_to([203.242, 306.745].into(), [226.45, 285.55].into(), [229.903, 281.331].into());
                pb.line_to([232.012, 279.125].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(153,38,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([364.74, 93.076].into());
                pb.cubic_to([364.74, 93.076].into(), [349.876, 128.08].into(), [337.888, 137.19].into());
                pb.cubic_to([337.888, 137.19].into(), [362.822, 121.846].into(), [366.179, 104.584].into());
                pb.cubic_to([366.179, 104.584].into(), [366.179, 94.994].into(), [364.74, 93.076].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([409.814, 85.883].into());
                pb.cubic_to([409.814, 85.883].into(), [384.4, 138.629].into(), [366.658, 161.645].into());
                pb.cubic_to([366.658, 161.645].into(), [408.376, 125.682].into(), [413.171, 100.268].into());
                pb.line_to([413.65, 94.994].into());
                pb.line_to([410.773, 97.391].into());
                pb.cubic_to([410.773, 97.391].into(), [410.294, 88.76].into(), [409.814, 85.883].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([463.999, 132.395].into());
                pb.cubic_to([463.999, 132.395].into(), [404.06, 189.457].into(), [402.622, 191.854].into());
                pb.cubic_to([402.622, 191.854].into(), [460.642, 128.559].into(), [463.519, 121.367].into());
                pb.cubic_to([463.519, 121.367].into(), [461.601, 129.998].into(), [463.999, 132.395].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([283.224, 90.678].into());
                pb.cubic_to([283.224, 90.678].into(), [301.925, 140.547].into(), [320.146, 118.969].into());
                pb.cubic_to([320.146, 118.969].into(), [334.531, 109.379].into(), [334.052, 106.502].into());
                pb.cubic_to([334.052, 106.502].into(), [330.216, 112.735].into(), [312.954, 112.256].into());
                pb.cubic_to([312.954, 112.256].into(), [294.732, 115.133].into(), [283.224, 90.678].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([465.917, 212.953].into());
                pb.cubic_to([465.917, 212.953].into(), [422.761, 240.285].into(), [415.568, 241.723].into());
                pb.cubic_to([404.245, 243.987].into(), [463.04, 213.912].into(), [467.835, 203.842].into());
                pb.cubic_to([467.835, 203.842].into(), [469.753, 206.24].into(), [465.917, 212.953].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([321.394, 110.721].into());
                pb.cubic_to([321.394, 110.721].into(), [340.958, 112.639].into(), [347.479, 119.16].into());
                pb.line_to([351.699, 115.707].into());
                pb.line_to([368.577, 152.534].into());
                pb.line_to([372.03, 147.547].into());
                pb.cubic_to([372.03, 147.547].into(), [385.84, 161.74].into(), [385.073, 169.412].into());
                pb.cubic_to([384.305, 177.085].into(), [397.348, 163.658].into(), [397.348, 163.658].into());
                pb.cubic_to([397.348, 163.658].into(), [396.581, 174.783].into(), [403.486, 168.262].into());
                pb.cubic_to([403.486, 168.262].into(), [401.184, 183.222].into(), [409.24, 175.55].into());
                pb.cubic_to([409.24, 175.55].into(), [399.135, 204.471].into(), [420.748, 179.77].into());
                pb.cubic_to([426.118, 173.632].into(), [421.899, 180.153].into(), [421.899, 180.153].into());
                pb.cubic_to([421.899, 180.153].into(), [396.964, 226.186].into(), [417.679, 212.376].into());
                pb.cubic_to([417.679, 212.376].into(), [419.597, 234.242].into(), [418.446, 238.462].into());
                pb.cubic_to([417.296, 242.681].into(), [415.377, 264.164].into(), [410.774, 269.151].into());
                pb.cubic_to([406.171, 274.138].into(), [411.158, 275.672].into(), [416.528, 270.686].into());
                pb.cubic_to([416.528, 270.686].into(), [405.787, 293.702].into(), [418.446, 282.194].into());
                pb.cubic_to([418.446, 282.194].into(), [414.994, 296.771].into(), [410.774, 299.456].into());
                pb.cubic_to([410.774, 299.456].into(), [405.404, 315.951].into(), [419.981, 305.594].into());
                pb.cubic_to([419.981, 305.594].into(), [415.761, 317.486].into(), [412.692, 320.554].into());
                pb.cubic_to([412.692, 320.554].into(), [401.568, 347.023].into(), [408.473, 342.42].into());
                pb.line_to([412.692, 338.968].into());
                pb.cubic_to([412.692, 338.968].into(), [406.171, 352.394].into(), [412.309, 348.174].into());
                pb.cubic_to([418.446, 343.954].into(), [418.446, 344.338].into(), [418.446, 344.338].into());
                pb.cubic_to([418.446, 344.338].into(), [398.115, 376.177].into(), [417.679, 359.299].into());
                pb.cubic_to([417.679, 359.299].into(), [409.855, 372.646].into(), [406.555, 379.246].into());
                pb.cubic_to([406.555, 379.246].into(), [388.525, 398.81].into(), [402.335, 392.673].into());
                pb.line_to([406.938, 391.138].into());
                pb.cubic_to([406.938, 391.138].into(), [398.499, 400.728].into(), [390.827, 402.263].into());
                pb.cubic_to([383.155, 403.797].into(), [393.128, 409.935].into(), [399.266, 408.017].into());
                pb.cubic_to([405.404, 406.099].into(), [420.364, 398.81].into(), [420.364, 398.81].into());
                pb.cubic_to([420.364, 398.81].into(), [432.64, 380.781].into(), [436.476, 380.397].into());
                pb.cubic_to([436.476, 380.397].into(), [417.296, 387.686].into(), [423.05, 380.013].into());
                pb.cubic_to([423.05, 380.013].into(), [436.859, 366.587].into(), [429.955, 366.971].into());
                pb.cubic_to([429.955, 366.971].into(), [424.2, 360.066].into(), [428.804, 351.627].into());
                pb.cubic_to([428.804, 351.627].into(), [411.101, 369.264].into(), [425.351, 344.722].into());
                pb.line_to([431.873, 328.994].into());
                pb.cubic_to([431.873, 328.994].into(), [408.473, 352.777].into(), [419.214, 331.679].into());
                pb.cubic_to([419.214, 331.679].into(), [435.709, 309.046].into(), [437.627, 308.663].into());
                pb.cubic_to([439.545, 308.279].into(), [443.764, 299.84].into(), [443.764, 299.84].into());
                pb.line_to([439.545, 301.758].into());
                pb.line_to([444.532, 293.318].into());
                pb.cubic_to([444.532, 293.318].into(), [433.791, 304.827].into(), [439.545, 292.168].into());
                pb.line_to([444.915, 278.358].into());
                pb.cubic_to([444.915, 278.358].into(), [425.351, 299.456].into(), [438.394, 271.069].into());
                pb.cubic_to([438.394, 271.069].into(), [422.666, 276.056].into(), [431.105, 259.561].into());
                pb.cubic_to([431.105, 259.561].into(), [429.571, 244.216].into(), [429.955, 239.229].into());
                pb.cubic_to([430.338, 234.242].into(), [431.489, 207.006].into(), [427.269, 199.334].into());
                pb.cubic_to([423.05, 191.662].into(), [433.023, 173.248].into(), [434.941, 169.412].into());
                pb.cubic_to([436.859, 165.576].into(), [440.312, 155.219].into(), [431.873, 164.042].into());
                pb.cubic_to([423.433, 172.865].into(), [427.653, 167.494].into(), [429.571, 159.055].into());
                pb.cubic_to([431.489, 150.616].into(), [437.243, 135.655].into(), [436.476, 130.284].into());
                pb.cubic_to([436.476, 130.284].into(), [435.325, 129.134].into(), [432.256, 132.586].into());
                pb.cubic_to([432.256, 132.586].into(), [418.063, 154.452].into(), [419.597, 140.642].into());
                pb.cubic_to([419.597, 140.642].into(), [418.446, 132.97].into(), [415.377, 124.53].into());
                pb.cubic_to([415.377, 124.53].into(), [412.309, 114.173].into(), [412.309, 122.612].into());
                pb.cubic_to([412.309, 122.612].into(), [409.24, 138.724].into(), [406.555, 131.435].into());
                pb.cubic_to([403.869, 124.147].into(), [400.417, 118.393].into(), [397.732, 116.091].into());
                pb.cubic_to([395.046, 113.789].into(), [390.059, 135.655].into(), [388.909, 125.681].into());
                pb.cubic_to([388.909, 125.681].into(), [377.4, 137.573].into(), [372.797, 121.845].into());
                pb.line_to([361.673, 106.117].into());
                pb.cubic_to([361.673, 106.117].into(), [361.289, 118.009].into(), [360.138, 112.255].into());
                pb.cubic_to([360.138, 112.255].into(), [331.368, 106.501].into(), [321.394, 110.721].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([288.404, 452.899].into());
                pb.cubic_to([288.404, 452.899].into(), [277.279, 460.571].into(), [273.443, 460.187].into());
                pb.cubic_to([269.607, 459.804].into(), [299.912, 468.627].into(), [339.423, 442.158].into());
                pb.cubic_to([339.423, 442.158].into(), [344.027, 439.473].into(), [347.479, 439.856].into());
                pb.cubic_to([347.479, 439.856].into(), [350.548, 437.555].into(), [347.863, 434.102].into());
                pb.cubic_to([347.863, 434.102].into(), [339.423, 424.896].into(), [350.164, 414.155].into());
                pb.cubic_to([350.164, 414.155].into(), [367.81, 407.633].into(), [362.44, 416.073].into());
                pb.cubic_to([362.44, 416.073].into(), [372.797, 412.237].into(), [375.099, 408.4].into());
                pb.cubic_to([377.4, 404.564].into(), [376.25, 408.4].into(), [376.25, 408.4].into());
                pb.cubic_to([376.25, 408.4].into(), [370.112, 415.305].into(), [364.358, 420.292].into());
                pb.cubic_to([364.358, 420.292].into(), [359.371, 422.21].into(), [356.686, 430.266].into());
                pb.cubic_to([354.0, 438.322].into(), [351.699, 447.912].into(), [355.918, 450.981].into());
                pb.cubic_to([355.918, 450.981].into(), [352.082, 446.761].into(), [352.85, 450.597].into());
                pb.cubic_to([353.617, 454.433].into(), [357.069, 457.886].into(), [358.604, 458.269].into());
                pb.cubic_to([360.138, 458.653].into(), [375.866, 473.805].into(), [382.387, 474.189].into());
                pb.cubic_to([382.387, 474.189].into(), [373.564, 472.846].into(), [370.687, 473.805].into());
                pb.cubic_to([367.81, 474.764].into(), [342.3, 485.697].into(), [336.546, 486.848].into());
                pb.cubic_to([336.546, 486.848].into(), [320.435, 493.177].into(), [331.943, 491.259].into());
                pb.cubic_to([331.943, 491.259].into(), [366.276, 487.615].into(), [383.73, 474.956].into());
                pb.cubic_to([383.73, 474.956].into(), [376.825, 483.012].into(), [359.179, 489.725].into());
                pb.cubic_to([359.179, 489.725].into(), [337.889, 501.809].into(), [304.132, 497.014].into());
                pb.cubic_to([304.132, 497.014].into(), [287.061, 493.945].into(), [279.581, 492.219].into());
                pb.cubic_to([279.581, 492.219].into(), [277.087, 492.794].into(), [276.512, 493.177].into());
                pb.cubic_to([275.936, 493.561].into(), [264.619, 502.192].into(), [238.15, 495.479].into());
                pb.cubic_to([238.15, 495.479].into(), [221.847, 491.068].into(), [213.599, 486.464].into());
                pb.cubic_to([213.599, 486.464].into(), [199.022, 485.314].into(), [195.57, 482.245].into());
                pb.cubic_to([195.57, 482.245].into(), [177.732, 468.243].into(), [175.814, 467.476].into());
                pb.cubic_to([173.896, 466.709].into(), [162.963, 459.42].into(), [162.196, 459.036].into());
                pb.cubic_to([162.196, 459.036].into(), [185.788, 465.366].into(), [188.089, 467.668].into());
                pb.cubic_to([190.391, 469.969].into(), [207.078, 472.463].into(), [209.38, 471.12].into());
                pb.cubic_to([211.681, 469.777].into(), [219.737, 470.353].into(), [210.53, 469.777].into());
                pb.cubic_to([210.53, 469.777].into(), [283.033, 455.584].into(), [283.8, 453.666].into());
                pb.cubic_to([284.568, 451.748].into(), [288.404, 452.899].into(), [288.404, 452.899].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([356.877, 461.722].into());
                pb.cubic_to([356.877, 461.722].into(), [347.095, 468.819].into(), [345.177, 468.819].into());
                pb.cubic_to([343.259, 468.819].into(), [331.368, 478.6].into(), [327.34, 478.217].into());
                pb.cubic_to([323.312, 477.833].into(), [311.612, 487.423].into(), [285.335, 479.56].into());
                pb.cubic_to([285.335, 479.56].into(), [284.759, 481.478].into(), [288.212, 482.245].into());
                pb.cubic_to([288.212, 482.245].into(), [294.35, 484.354].into(), [294.733, 484.93].into());
                pb.cubic_to([294.733, 484.93].into(), [314.105, 488.958].into(), [321.01, 485.505].into());
                pb.cubic_to([321.01, 485.505].into(), [329.833, 483.012].into(), [335.779, 477.066].into());
                pb.cubic_to([335.779, 477.066].into(), [346.52, 473.997].into(), [349.589, 474.956].into());
                pb.cubic_to([349.589, 474.956].into(), [358.028, 472.846].into(), [358.412, 471.12].into());
                pb.cubic_to([358.412, 471.12].into(), [363.974, 468.243].into(), [362.248, 465.75].into());
                pb.cubic_to([362.248, 465.75].into(), [362.632, 464.215].into(), [356.877, 461.722].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,114,38, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([344.918, 463.744].into());
                pb.cubic_to([345.691, 463.138].into(), [346.669, 463.044].into(), [347.249, 462.268].into());
                pb.cubic_to([347.473, 461.967].into(), [347.196, 461.655].into(), [346.894, 461.562].into());
                pb.cubic_to([345.894, 461.258].into(), [344.881, 461.804].into(), [343.786, 461.24].into());
                pb.cubic_to([343.4, 461.042].into(), [342.785, 461.216].into(), [342.254, 461.359].into());
                pb.cubic_to([340.689, 461.782].into(), [338.935, 461.806].into(), [337.313, 461.146].into());
                pb.cubic_to([335.41, 462.229].into(), [333.147, 461.669].into(), [331.151, 462.629].into());
                pb.cubic_to([331.095, 462.655].into(), [330.882, 462.323].into(), [330.811, 462.349].into());
                pb.cubic_to([327.89, 463.447].into(), [324.301, 463.176].into(), [321.969, 465.366].into());
                pb.cubic_to([319.641, 465.761].into(), [317.38, 466.204].into(), [315.052, 466.856].into());
                pb.cubic_to([313.308, 467.345].into(), [311.957, 468.293].into(), [310.403, 469.091].into());
                pb.cubic_to([309.083, 469.77].into(), [307.686, 470.27].into(), [306.214, 470.627].into());
                pb.cubic_to([304.428, 471.061].into(), [302.672, 470.953].into(), [300.856, 471.452].into());
                pb.cubic_to([300.767, 471.476].into(), [300.583, 471.146].into(), [300.505, 471.172].into());
                pb.cubic_to([300.194, 471.276].into(), [299.916, 471.835].into(), [299.752, 471.784].into());
                pb.cubic_to([298.14, 471.283].into(), [296.713, 472.215].into(), [295.117, 471.887].into());
                pb.cubic_to([293.987, 473.061].into(), [292.33, 472.826].into(), [290.847, 473.25].into());
                pb.cubic_to([288.005, 474.063].into(), [284.98, 472.845].into(), [282.074, 473.805].into());
                pb.cubic_to([286.019, 475.572].into(), [290.513, 474.39].into(), [294.409, 476.375].into());
                pb.cubic_to([296.642, 477.512].into(), [299.195, 476.455].into(), [301.659, 477.184].into());
                pb.cubic_to([302.126, 477.322].into(), [302.789, 477.516].into(), [303.173, 476.874].into());
                pb.cubic_to([303.301, 477.004].into(), [303.476, 477.233].into(), [303.531, 477.206].into());
                pb.cubic_to([305.881, 476.096].into(), [308.101, 474.875].into(), [310.481, 473.852].into());
                pb.cubic_to([310.808, 473.712].into(), [311.318, 473.935].into(), [311.56, 473.741].into());
                pb.cubic_to([313.018, 472.575].into(), [314.881, 472.674].into(), [316.215, 471.504].into());
                pb.cubic_to([317.844, 471.985].into(), [319.563, 471.621].into(), [321.221, 472.219].into());
                pb.cubic_to([321.295, 472.245].into(), [321.519, 471.918].into(), [321.551, 471.939].into());
                pb.cubic_to([322.635, 472.656].into(), [323.742, 472.397].into(), [324.598, 472.105].into());
                pb.cubic_to([324.922, 471.995].into(), [325.558, 471.758].into(), [325.85, 471.687].into());
                pb.cubic_to([326.93, 471.422].into(), [327.751, 470.962].into(), [328.882, 470.786].into());
                pb.cubic_to([328.991, 470.769].into(), [329.169, 471.095].into(), [329.238, 471.068].into());
                pb.cubic_to([330.315, 470.648].into(), [331.314, 470.702].into(), [331.943, 469.586].into());
                pb.cubic_to([332.072, 469.715].into(), [332.231, 469.943].into(), [332.309, 469.918].into());
                pb.cubic_to([333.294, 469.593].into(), [333.917, 468.869].into(), [334.973, 468.638].into());
                pb.cubic_to([335.438, 468.536].into(), [336.025, 467.936].into(), [336.577, 467.767].into());
                pb.cubic_to([338.871, 467.066].into(), [340.638, 465.6].into(), [342.743, 464.742].into());
                pb.cubic_to([343.47, 464.444].into(), [344.31, 464.22].into(), [344.918, 463.744].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,114,38, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([271.424, 477.391].into());
                pb.cubic_to([269.009, 479.045].into(), [266.738, 480.106].into(), [264.397, 481.819].into());
                pb.cubic_to([264.223, 481.946].into(), [263.878, 481.783].into(), [263.684, 481.9].into());
                pb.cubic_to([262.718, 482.484].into(), [261.867, 483.042].into(), [260.925, 483.709].into());
                pb.cubic_to([260.408, 484.076].into(), [259.621, 484.065].into(), [259.133, 484.312].into());
                pb.cubic_to([256.694, 485.551].into(), [254.172, 486.087].into(), [251.768, 487.232].into());
                pb.cubic_to([252.422, 487.843].into(), [253.498, 487.609].into(), [254.07, 488.382].into());
                pb.cubic_to([254.257, 488.114].into(), [254.485, 487.841].into(), [254.824, 488.025].into());
                pb.cubic_to([256.433, 488.892].into(), [258.207, 489.038].into(), [259.814, 488.952].into());
                pb.cubic_to([261.449, 488.864].into(), [263.098, 488.571].into(), [264.8, 488.311].into());
                pb.cubic_to([265.095, 488.265].into(), [265.286, 487.764].into(), [265.595, 487.671].into());
                pb.cubic_to([267.732, 487.035].into(), [270.023, 487.539].into(), [272.055, 486.735].into());
                pb.cubic_to([273.581, 486.132].into(), [275.087, 485.342].into(), [276.275, 484.12].into());
                pb.cubic_to([276.517, 483.87].into(), [276.205, 483.582].into(), [275.936, 483.396].into());
                pb.cubic_to([276.309, 483.5].into(), [276.57, 483.302].into(), [276.677, 483.002].into());
                pb.cubic_to([276.757, 482.773].into(), [276.757, 482.483].into(), [276.677, 482.254].into());
                pb.cubic_to([276.569, 481.955].into(), [276.302, 481.858].into(), [275.943, 481.809].into());
                pb.cubic_to([274.594, 481.627].into(), [276.293, 482.951].into(), [275.622, 482.521].into());
                pb.cubic_to([274.401, 481.74].into(), [275.116, 480.392].into(), [274.402, 479.176].into());
                pb.cubic_to([274.133, 479.362].into(), [273.913, 479.571].into(), [274.018, 479.943].into());
                pb.cubic_to([274.243, 479.443].into(), [273.665, 479.164].into(), [273.504, 478.861].into());
                pb.cubic_to([273.135, 478.166].into(), [272.273, 476.809].into(), [271.424, 477.391].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,114,38, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([240.258, 470.344].into());
                pb.cubic_to([237.233, 471.106].into(), [234.308, 470.995].into(), [231.416, 472.219].into());
                pb.cubic_to([231.352, 472.246].into(), [231.138, 471.913].into(), [231.076, 471.939].into());
                pb.cubic_to([229.766, 472.509].into(), [228.886, 473.435].into(), [227.854, 474.438].into());
                pb.cubic_to([226.979, 475.29].into(), [225.389, 474.919].into(), [224.167, 475.386].into());
                pb.cubic_to([223.856, 475.505].into(), [223.661, 475.996].into(), [223.373, 476.033].into());
                pb.cubic_to([222.204, 476.184].into(), [221.315, 477.094].into(), [220.312, 477.641].into());
                pb.cubic_to([222.553, 478.404].into(), [224.865, 478.374].into(), [227.226, 478.742].into());
                pb.cubic_to([227.334, 478.76].into(), [227.473, 478.452].into(), [227.601, 478.452].into());
                pb.cubic_to([227.731, 478.452].into(), [227.856, 478.664].into(), [227.985, 478.792].into());
                pb.cubic_to([228.172, 478.524].into(), [228.461, 478.211].into(), [228.708, 478.455].into());
                pb.cubic_to([229.233, 478.973].into(), [229.766, 478.79].into(), [230.284, 478.752].into());
                pb.cubic_to([230.422, 478.742].into(), [230.542, 478.452].into(), [230.67, 478.452].into());
                pb.cubic_to([230.8, 478.452].into(), [230.926, 478.75].into(), [231.053, 478.75].into());
                pb.cubic_to([231.184, 478.749].into(), [231.31, 478.452].into(), [231.437, 478.452].into());
                pb.cubic_to([231.567, 478.452].into(), [231.692, 478.664].into(), [231.821, 478.792].into());
                pb.cubic_to([232.484, 478.042].into(), [233.333, 478.574].into(), [234.121, 478.402].into());
                pb.cubic_to([235.117, 478.184].into(), [235.373, 477.083].into(), [236.403, 476.798].into());
                pb.cubic_to([240.925, 475.547].into(), [244.892, 473.49].into(), [249.076, 471.488].into());
                pb.cubic_to([249.371, 471.347].into(), [249.572, 471.11].into(), [249.467, 470.737].into());
                pb.cubic_to([249.723, 470.737].into(), [250.023, 470.821].into(), [250.205, 470.694].into());
                pb.cubic_to([251.22, 469.992].into(), [252.218, 469.467].into(), [252.886, 468.414].into());
                pb.cubic_to([253.094, 468.089].into(), [252.778, 467.698].into(), [252.555, 467.748].into());
                pb.cubic_to([248.307, 468.702].into(), [244.465, 469.285].into(), [240.258, 470.344].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,114,38, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([226.966, 427.944].into());
                pb.cubic_to([225.439, 429.113].into(), [224.879, 431.061].into(), [223.798, 432.78].into());
                pb.cubic_to([223.592, 433.106].into(), [223.855, 433.407].into(), [224.159, 433.492].into());
                pb.cubic_to([224.696, 433.645].into(), [225.217, 433.186].into(), [225.609, 432.992].into());
                pb.cubic_to([227.283, 432.166].into(), [228.755, 430.975].into(), [230.67, 430.841].into());
                pb.cubic_to([232.578, 428.699].into(), [236.664, 428.33].into(), [236.67, 425.087].into());
                pb.cubic_to([236.671, 424.263].into(), [235.302, 425.144].into(), [234.89, 424.32].into());
                pb.cubic_to([232.539, 425.282].into(), [230.248, 425.183].into(), [227.965, 426.59].into());
                pb.cubic_to([227.374, 426.956].into(), [227.69, 427.39].into(), [226.966, 427.944].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,114,38, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([200.557, 478.366].into());
                pb.cubic_to([200.686, 478.366].into(), [207.429, 478.142].into(), [207.413, 478.033].into());
                pb.cubic_to([207.37, 477.736].into(), [199.956, 476.73].into(), [199.607, 476.893].into());
                pb.cubic_to([199.45, 476.966].into(), [192.246, 474.636].into(), [192.117, 474.764].into());
                pb.cubic_to([192.374, 474.894].into(), [200.302, 478.366].into(), [200.557, 478.366].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,114,38, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([225.697, 469.104].into());
                pb.cubic_to([225.697, 469.104].into(), [201.132, 467.284].into(), [196.912, 466.133].into());
                pb.cubic_to([192.693, 464.982].into(), [174.855, 457.694].into(), [171.978, 455.776].into());
                pb.cubic_to([171.978, 455.776].into(), [159.127, 450.597].into(), [142.824, 431.417].into());
                pb.cubic_to([142.824, 431.417].into(), [150.112, 434.677].into(), [152.222, 437.363].into());
                pb.cubic_to([152.222, 437.363].into(), [165.265, 449.446].into(), [165.073, 446.953].into());
                pb.cubic_to([165.073, 446.953].into(), [176.773, 455.2].into(), [176.198, 453.091].into());
                pb.cubic_to([176.198, 453.091].into(), [199.598, 463.832].into(), [197.68, 460.763].into());
                pb.cubic_to([197.68, 460.763].into(), [218.394, 465.174].into(), [217.435, 463.256].into());
                pb.cubic_to([217.435, 463.256].into(), [235.465, 459.036].into(), [232.78, 458.845].into());
                pb.cubic_to([232.78, 458.845].into(), [227.217, 457.694].into(), [233.355, 454.241].into());
                pb.cubic_to([233.355, 454.241].into(), [230.094, 450.022].into(), [224.916, 453.858].into());
                pb.cubic_to([219.737, 457.694].into(), [222.614, 455.584].into(), [217.819, 454.625].into());
                pb.cubic_to([217.819, 454.625].into(), [215.326, 453.858].into(), [210.914, 457.694].into());
                pb.cubic_to([210.914, 457.694].into(), [205.544, 462.105].into(), [197.104, 458.653].into());
                pb.cubic_to([197.104, 458.653].into(), [167.758, 446.569].into(), [165.84, 445.994].into());
                pb.cubic_to([165.84, 445.994].into(), [162.388, 443.309].into(), [160.086, 439.856].into());
                pb.cubic_to([160.086, 439.856].into(), [154.524, 435.637].into(), [151.647, 434.294].into());
                pb.cubic_to([151.647, 434.294].into(), [139.371, 423.169].into(), [138.221, 421.827].into());
                pb.cubic_to([138.221, 421.827].into(), [134.96, 416.84].into(), [134.193, 416.456].into());
                pb.cubic_to([134.193, 416.456].into(), [140.33, 420.1].into(), [142.248, 422.018].into());
                pb.cubic_to([142.248, 422.018].into(), [155.675, 431.609].into(), [160.853, 432.376].into());
                pb.cubic_to([160.853, 432.376].into(), [165.073, 435.253].into(), [165.84, 436.596].into());
                pb.cubic_to([165.84, 436.596].into(), [179.65, 445.418].into(), [183.678, 445.418].into());
                pb.cubic_to([183.678, 445.418].into(), [192.501, 440.432].into(), [194.803, 447.145].into());
                pb.cubic_to([194.803, 447.145].into(), [200.365, 448.871].into(), [205.735, 447.72].into());
                pb.cubic_to([205.735, 447.72].into(), [208.804, 450.214].into(), [208.037, 452.323].into());
                pb.cubic_to([208.037, 452.323].into(), [209.571, 454.05].into(), [210.53, 450.405].into());
                pb.cubic_to([210.53, 450.405].into(), [213.791, 446.953].into(), [218.394, 448.871].into());
                pb.cubic_to([218.394, 448.871].into(), [222.231, 449.063].into(), [220.312, 446.761].into());
                pb.cubic_to([220.312, 446.761].into(), [216.093, 443.117].into(), [204.776, 442.925].into());
                pb.cubic_to([204.776, 442.925].into(), [192.885, 442.35].into(), [177.157, 435.061].into());
                pb.cubic_to([177.157, 435.061].into(), [148.578, 425.087].into(), [139.755, 415.113].into());
                pb.cubic_to([139.755, 415.113].into(), [133.617, 406.674].into(), [128.439, 405.523].into());
                pb.cubic_to([128.439, 405.523].into(), [122.876, 404.756].into(), [117.122, 397.659].into());
                pb.cubic_to([117.122, 397.659].into(), [126.521, 403.222].into(), [135.152, 403.222].into());
                pb.cubic_to([135.152, 403.222].into(), [138.988, 405.523].into(), [135.344, 402.071].into());
                pb.cubic_to([135.344, 402.071].into(), [131.891, 394.782].into(), [133.426, 389.604].into());
                pb.cubic_to([133.426, 389.604].into(), [132.85, 384.617].into(), [132.083, 383.082].into());
                pb.cubic_to([132.083, 383.082].into(), [124.603, 370.807].into(), [124.603, 368.505].into());
                pb.cubic_to([124.603, 366.204].into(), [125.753, 356.805].into(), [126.137, 356.23].into());
                pb.cubic_to([126.521, 355.654].into(), [125.178, 357.764].into(), [128.822, 355.463].into());
                pb.cubic_to([132.467, 353.161].into(), [135.152, 351.627].into(), [135.919, 348.941].into());
                pb.cubic_to([136.686, 346.256].into(), [134.001, 354.12].into(), [133.809, 355.846].into());
                pb.cubic_to([133.617, 357.572].into(), [129.589, 364.477].into(), [130.357, 366.779].into());
                pb.cubic_to([130.357, 366.779].into(), [131.316, 365.82].into(), [132.083, 364.477].into());
                pb.cubic_to([132.083, 364.477].into(), [131.507, 365.053].into(), [132.083, 368.505].into());
                pb.cubic_to([132.083, 368.505].into(), [132.85, 373.492].into(), [134.193, 376.561].into());
                pb.cubic_to([135.535, 379.63].into(), [137.453, 383.274].into(), [137.837, 384.041].into());
                pb.cubic_to([138.221, 384.809].into(), [138.221, 390.371].into(), [139.563, 387.877].into());
                pb.line_to([142.824, 385.384].into());
                pb.cubic_to([142.824, 385.384].into(), [140.139, 387.877].into(), [142.248, 389.987].into());
                pb.cubic_to([142.248, 389.987].into(), [141.289, 395.358].into(), [143.016, 397.851].into());
                pb.cubic_to([143.016, 397.851].into(), [149.729, 405.907].into(), [151.263, 406.866].into());
                pb.cubic_to([152.798, 407.825].into(), [151.455, 407.441].into(), [151.455, 407.441].into());
                pb.cubic_to([151.455, 407.441].into(), [157.209, 411.469].into(), [151.647, 409.935].into());
                pb.cubic_to([151.647, 409.935].into(), [147.811, 408.4].into(), [144.934, 408.4].into());
                pb.cubic_to([144.934, 408.4].into(), [137.645, 406.482].into(), [141.481, 410.51].into());
                pb.cubic_to([145.317, 414.538].into(), [154.908, 419.717].into(), [158.552, 419.525].into());
                pb.line_to([159.319, 417.991].into());
                pb.line_to([170.06, 420.292].into());
                pb.line_to([168.909, 419.525].into());
                pb.cubic_to([168.909, 419.525].into(), [168.717, 419.717].into(), [172.745, 420.1].into());
                pb.cubic_to([176.773, 420.484].into(), [182.335, 419.141].into(), [183.678, 420.868].into());
                pb.cubic_to([185.021, 422.594].into(), [188.281, 423.553].into(), [187.898, 422.21].into());
                pb.cubic_to([187.514, 420.868].into(), [187.322, 418.95].into(), [187.322, 418.95].into());
                pb.cubic_to([187.322, 418.95].into(), [192.117, 424.512].into(), [191.542, 422.402].into());
                pb.cubic_to([190.967, 420.292].into(), [183.103, 415.305].into(), [181.76, 409.359].into());
                pb.line_to([191.734, 417.223].into());
                pb.line_to([195.186, 420.1].into());
                pb.cubic_to([195.186, 420.1].into(), [198.639, 417.991].into(), [198.83, 419.525].into());
                pb.cubic_to([199.022, 421.059].into(), [203.434, 426.622].into(), [204.585, 426.43].into());
                pb.cubic_to([205.735, 426.238].into(), [207.653, 428.923].into(), [207.462, 426.43].into());
                pb.cubic_to([207.27, 423.936].into(), [214.558, 418.758].into(), [214.558, 418.758].into());
                pb.cubic_to([214.558, 418.758].into(), [217.627, 420.484].into(), [218.97, 419.141].into());
                pb.cubic_to([220.312, 417.799].into(), [224.34, 438.13].into(), [224.34, 438.13].into());
                pb.line_to([248.316, 448.296].into());
                pb.line_to([290.13, 451.556].into());
                pb.line_to([273.827, 458.078].into());
                pb.line_to([225.697, 469.104].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([195.791, 300.364].into());
                pb.cubic_to([189.976, 300.415].into(), [182.554, 299.573].into(), [173.614, 296.738].into());
                pb.line_to([174.183, 294.91].into());
                pb.cubic_to([185.855, 298.611].into(), [194.823, 298.827].into(), [200.856, 298.147].into());
                pb.cubic_to([206.889, 297.466].into(), [209.907, 295.929].into(), [209.907, 295.929].into());
                pb.line_to([209.967, 295.869].into());
                pb.line_to([210.057, 295.869].into());
                pb.cubic_to([213.681, 294.747].into(), [219.363, 290.137].into(), [223.932, 285.829].into());
                pb.cubic_to([228.501, 281.522].into(), [232.054, 277.528].into(), [232.054, 277.528].into());
                pb.line_to([233.492, 278.816].into());
                pb.cubic_to([233.492, 278.816].into(), [229.888, 282.866].into(), [225.251, 287.238].into());
                pb.cubic_to([220.662, 291.564].into(), [215.184, 296.211].into(), [210.776, 297.637].into());
                pb.cubic_to([210.776, 297.637].into(), [210.632, 297.694].into(), [210.626, 297.697].into());
                pb.cubic_to([210.425, 297.796].into(), [207.165, 299.346].into(), [201.066, 300.035].into());
                pb.cubic_to([199.493, 300.212].into(), [197.73, 300.347].into(), [195.791, 300.364].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(76,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([180.687, 303.841].into());
                pb.cubic_to([176.336, 303.995].into(), [172.016, 303.715].into(), [168.219, 302.702].into());
                pb.cubic_to([168.172, 302.689].into(), [168.117, 302.685].into(), [168.07, 302.672].into());
                pb.cubic_to([167.617, 302.623].into(), [150.067, 300.673].into(), [141.816, 287.118].into());
                pb.line_to([143.465, 286.099].into());
                pb.cubic_to([151.218, 298.837].into(), [168.429, 300.814].into(), [168.429, 300.814].into());
                pb.line_to([168.519, 300.814].into());
                pb.line_to([168.579, 300.844].into());
                pb.cubic_to([175.686, 302.782].into(), [185.36, 301.917].into(), [193.184, 300.514].into());
                pb.cubic_to([201.007, 299.111].into(), [206.97, 297.188].into(), [206.97, 297.188].into());
                pb.line_to([207.569, 299.016].into());
                pb.cubic_to([207.569, 299.016].into(), [201.466, 300.976].into(), [193.513, 302.402].into());
                pb.cubic_to([189.537, 303.115].into(), [185.092, 303.685].into(), [180.687, 303.841].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(76,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([163.364, 309.625].into());
                pb.cubic_to([157.3, 309.384].into(), [149.203, 308.256].into(), [141.097, 304.74].into());
                pb.line_to([141.067, 304.74].into());
                pb.cubic_to([141.067, 304.74].into(), [129.13, 298.939].into(), [123.745, 288.766].into());
                pb.line_to([125.453, 287.897].into());
                pb.cubic_to([130.41, 297.26].into(), [141.807, 302.967].into(), [141.876, 303.002].into());
                pb.cubic_to([141.885, 303.006].into(), [141.897, 302.998].into(), [141.906, 303.002].into());
                pb.cubic_to([157.526, 309.766].into(), [173.164, 307.317].into(), [173.164, 307.317].into());
                pb.line_to([173.194, 307.317].into());
                pb.cubic_to([187.192, 305.236].into(), [203.433, 298.386].into(), [203.433, 298.386].into());
                pb.line_to([204.183, 300.155].into());
                pb.cubic_to([204.183, 300.155].into(), [187.853, 307.096].into(), [173.464, 309.235].into());
                pb.cubic_to([173.464, 309.235].into(), [169.428, 309.866].into(), [163.364, 309.625].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(76,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([169.838, 322.662].into());
                pb.cubic_to([169.838, 322.662].into(), [149.185, 321.94].into(), [132.436, 314.15].into());
                pb.line_to([133.245, 312.382].into());
                pb.cubic_to([149.416, 319.904].into(), [169.662, 320.737].into(), [169.838, 320.743].into());
                pb.cubic_to([169.859, 320.743].into(), [169.877, 320.744].into(), [169.898, 320.743].into());
                pb.cubic_to([181.795, 320.343].into(), [188.239, 310.254].into(), [188.239, 310.254].into());
                pb.line_to([188.239, 310.224].into());
                pb.line_to([188.269, 310.224].into());
                pb.cubic_to([188.554, 309.824].into(), [188.865, 309.577].into(), [189.378, 309.145].into());
                pb.cubic_to([189.89, 308.714].into(), [190.56, 308.18].into(), [191.326, 307.587].into());
                pb.cubic_to([192.857, 306.4].into(), [194.781, 304.946].into(), [196.69, 303.541].into());
                pb.cubic_to([200.509, 300.731].into(), [204.212, 298.087].into(), [204.212, 298.087].into());
                pb.line_to([205.321, 299.675].into());
                pb.cubic_to([205.321, 299.675].into(), [201.634, 302.3].into(), [197.829, 305.1].into());
                pb.cubic_to([195.926, 306.5].into(), [194.002, 307.947].into(), [192.494, 309.115].into());
                pb.cubic_to([191.741, 309.7].into(), [191.085, 310.211].into(), [190.606, 310.614].into());
                pb.cubic_to([190.128, 311.017].into(), [189.781, 311.397].into(), [189.827, 311.333].into());
                pb.cubic_to([189.722, 311.498].into(), [182.795, 322.265].into(), [169.898, 322.662].into());
                pb.line_to([169.868, 322.662].into());
                pb.line_to([169.838, 322.662].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(76,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([203.525, 307.505].into());
                pb.cubic_to([205.004, 306.102].into(), [230.862, 278.358].into(), [230.862, 278.358].into());
                pb.cubic_to([264.619, 243.257].into(), [237.767, 276.056].into(), [237.767, 276.056].into());
                pb.cubic_to([230.478, 280.659].into(), [221.655, 298.689].into(), [221.655, 298.689].into());
                pb.cubic_to([220.504, 301.374].into(), [235.081, 291.784].into(), [235.081, 291.784].into());
                pb.cubic_to([238.917, 291.017].into(), [251.96, 272.604].into(), [251.96, 272.604].into());
                pb.cubic_to([245.439, 274.905].into(), [250.042, 268.0].into(), [250.042, 268.0].into());
                pb.cubic_to([252.727, 266.082].into(), [272.292, 251.121].into(), [272.292, 251.121].into());
                pb.cubic_to([275.745, 247.285].into(), [279.581, 245.75].into(), [279.581, 245.75].into());
                pb.cubic_to([293.007, 250.737].into(), [286.869, 238.078].into(), [286.869, 238.078].into());
                pb.cubic_to([289.171, 231.557].into(), [294.541, 242.681].into(), [294.541, 242.681].into());
                pb.cubic_to([305.282, 258.794].into(), [289.554, 256.491].into(), [289.554, 256.491].into());
                pb.cubic_to([260.783, 253.806].into(), [254.262, 269.151].into(), [254.262, 269.151].into());
                pb.cubic_to([251.96, 271.453].into(), [260.399, 269.151].into(), [260.399, 269.151].into());
                pb.cubic_to([268.456, 267.233].into(), [253.494, 281.043].into(), [253.494, 281.043].into());
                pb.cubic_to([255.796, 281.043].into(), [264.619, 274.522].into(), [264.619, 274.522].into());
                pb.cubic_to([274.594, 265.699].into(), [276.512, 267.617].into(), [276.512, 267.617].into());
                pb.cubic_to([293.774, 276.056].into(), [303.748, 268.768].into(), [303.748, 268.768].into());
                pb.cubic_to([305.666, 267.233].into(), [300.295, 260.712].into(), [301.83, 255.724].into());
                pb.cubic_to([303.364, 250.737].into(), [307.968, 238.845].into(), [307.968, 238.845].into());
                pb.cubic_to([305.666, 237.311].into(), [306.05, 226.953].into(), [306.05, 226.953].into());
                pb.cubic_to([322.161, 204.704].into(), [312.954, 206.622].into(), [312.954, 206.622].into());
                pb.cubic_to([297.994, 207.006].into(), [312.187, 199.717].into(), [312.187, 199.717].into());
                pb.cubic_to([315.256, 197.799].into(), [323.695, 190.894].into(), [323.695, 190.894].into());
                pb.cubic_to([321.01, 192.045].into(), [319.476, 187.058].into(), [319.476, 187.058].into());
                pb.cubic_to([324.079, 183.222].into(), [321.394, 178.619].into(), [321.394, 178.619].into());
                pb.cubic_to([315.64, 177.468].into(), [314.489, 173.632].into(), [314.489, 173.632].into());
                pb.cubic_to([321.01, 165.96].into(), [311.42, 165.576].into(), [311.42, 165.576].into());
                pb.cubic_to([314.873, 161.357].into(), [310.269, 149.848].into(), [310.269, 149.848].into());
                pb.cubic_to([305.666, 149.848].into(), [299.528, 144.478].into(), [299.528, 144.478].into());
                pb.cubic_to([301.83, 139.875].into(), [291.856, 134.504].into(), [291.856, 134.504].into());
                pb.cubic_to([283.8, 132.97].into(), [286.486, 126.448].into(), [286.486, 126.448].into());
                pb.cubic_to([278.813, 120.694].into(), [276.512, 105.35].into(), [276.512, 105.35].into());
                pb.cubic_to([275.745, 95.376].into(), [273.443, 92.307].into(), [278.43, 94.225].into());
                pb.cubic_to([283.417, 96.143].into(), [282.65, 108.035].into(), [282.65, 108.035].into());
                pb.cubic_to([278.046, 122.996].into(), [319.092, 138.34].into(), [319.092, 138.34].into());
                pb.cubic_to([322.928, 139.875].into(), [323.695, 144.862].into(), [323.695, 144.862].into());
                pb.cubic_to([325.613, 144.478].into(), [334.053, 137.189].into(), [334.053, 137.189].into());
                pb.cubic_to([341.341, 126.448].into(), [341.725, 135.271].into(), [341.725, 135.271].into());
                pb.cubic_to([342.876, 138.724].into(), [341.341, 144.478].into(), [341.341, 144.478].into());
                pb.cubic_to([347.095, 165.193].into(), [333.669, 171.33].into(), [333.669, 171.33].into());
                pb.cubic_to([324.079, 203.553].into(), [337.505, 195.498].into(), [337.505, 195.498].into());
                pb.cubic_to([340.191, 190.127].into(), [350.548, 185.14].into(), [350.548, 185.14].into());
                pb.line_to([354.0, 187.442].into());
                pb.cubic_to([352.466, 192.045].into(), [360.522, 197.799].into(), [360.522, 197.799].into());
                pb.cubic_to([363.207, 191.662].into(), [368.961, 199.334].into(), [368.961, 199.334].into());
                pb.cubic_to([372.414, 222.734].into(), [384.305, 208.924].into(), [384.305, 208.924].into());
                pb.cubic_to([388.141, 207.773].into(), [389.292, 214.294].into(), [389.292, 214.294].into());
                pb.cubic_to([392.745, 224.268].into(), [389.292, 237.311].into(), [389.292, 237.311].into());
                pb.cubic_to([392.745, 237.694].into(), [401.951, 231.94].into(), [401.951, 231.94].into());
                pb.cubic_to([404.637, 235.393].into(), [395.814, 251.504].into(), [399.65, 249.203].into());
                pb.cubic_to([403.486, 246.901].into(), [407.705, 245.367].into(), [407.705, 245.367].into());
                pb.cubic_to([408.473, 247.285].into(), [398.882, 259.176].into(), [398.882, 259.176].into());
                pb.cubic_to([394.663, 261.863].into(), [389.676, 281.427].into(), [389.676, 281.427].into());
                pb.cubic_to([396.581, 277.974].into(), [386.991, 292.551].into(), [386.991, 292.551].into());
                pb.cubic_to([386.991, 295.62].into(), [392.745, 306.361].into(), [392.745, 306.361].into());
                pb.cubic_to([391.977, 312.882].into(), [392.745, 312.499].into(), [392.745, 312.499].into());
                pb.cubic_to([395.43, 311.348].into(), [403.102, 309.813].into(), [396.581, 315.951].into());
                pb.cubic_to([390.059, 322.089].into(), [397.348, 326.692].into(), [397.348, 326.692].into());
                pb.cubic_to([401.568, 329.377].into(), [388.525, 328.994].into(), [388.525, 328.994].into());
                pb.cubic_to([383.538, 333.213].into(), [383.922, 337.05].into(), [383.922, 337.05].into());
                pb.cubic_to([391.594, 335.131].into(), [377.784, 348.941].into(), [375.482, 352.394].into());
                pb.cubic_to([373.181, 355.846].into(), [382.387, 360.833].into(), [382.387, 360.833].into());
                pb.cubic_to([395.046, 364.286].into(), [383.922, 367.354].into(), [383.922, 367.354].into());
                pb.cubic_to([365.125, 366.971].into(), [375.482, 377.328].into(), [375.482, 377.328].into());
                pb.cubic_to([381.236, 376.945].into(), [379.702, 379.246].into(), [379.702, 379.246].into());
                pb.cubic_to([374.715, 380.397].into(), [365.509, 386.535].into(), [365.509, 386.535].into());
                pb.cubic_to([361.673, 389.987].into(), [365.125, 389.22].into(), [365.125, 389.22].into());
                pb.cubic_to([381.236, 388.069].into(), [353.617, 398.81].into(), [353.617, 398.81].into());
                pb.cubic_to([361.289, 398.81].into(), [344.027, 408.784].into(), [344.027, 408.784].into());
                pb.cubic_to([342.109, 410.318].into(), [339.04, 417.607].into(), [339.04, 417.607].into());
                pb.cubic_to([333.286, 422.594].into(), [328.682, 429.115].into(), [328.682, 429.115].into());
                pb.cubic_to([328.299, 433.335].into(), [323.695, 437.938].into(), [323.695, 437.938].into());
                pb.cubic_to([312.571, 450.981].into(), [307.2, 450.597].into(), [307.2, 450.597].into());
                pb.cubic_to([293.007, 454.05].into(), [288.02, 453.282].into(), [288.02, 453.282].into());
                pb.line_to([237.383, 449.063].into());
                pb.cubic_to([212.065, 436.787].into(), [219.545, 416.648].into(), [219.545, 416.648].into());
                pb.cubic_to([225.683, 408.592].into(), [234.506, 412.237].into(), [234.506, 412.237].into());
                pb.cubic_to([238.917, 418.182].into(), [250.042, 416.073].into(), [250.042, 416.073].into());
                pb.cubic_to([269.607, 413.004].into(), [267.113, 416.456].into(), [267.113, 416.456].into());
                pb.cubic_to([264.812, 420.868].into(), [249.275, 426.814].into(), [249.083, 427.389].into());
                pb.cubic_to([248.891, 427.964].into(), [240.452, 431.225].into(), [240.452, 431.225].into());
                pb.cubic_to([237.575, 432.376].into(), [233.355, 441.199].into(), [233.355, 441.199].into());
                pb.cubic_to([230.286, 444.459].into(), [245.439, 438.897].into(), [245.439, 438.897].into());
                pb.cubic_to([244.288, 437.938].into(), [251.385, 434.102].into(), [251.385, 434.102].into());
                pb.cubic_to([268.072, 435.061].into(), [278.238, 424.704].into(), [278.238, 424.704].into());
                pb.cubic_to([288.595, 408.784].into(), [288.787, 416.648].into(), [288.787, 416.648].into());
                pb.cubic_to([291.472, 425.663].into(), [280.156, 445.994].into(), [280.156, 445.994].into());
                pb.cubic_to([280.54, 447.912].into(), [288.404, 441.582].into(), [288.404, 441.582].into());
                pb.cubic_to([289.746, 443.5].into(), [290.513, 437.938].into(), [290.513, 437.938].into());
                pb.cubic_to([290.705, 435.637].into(), [294.35, 427.964].into(), [294.35, 427.964].into());
                pb.cubic_to([297.035, 415.497].into(), [300.487, 422.594].into(), [300.487, 422.594].into());
                pb.line_to([304.899, 413.579].into());
                pb.cubic_to([306.241, 411.086].into(), [300.487, 403.797].into(), [300.487, 403.797].into());
                pb.cubic_to([300.295, 401.112].into(), [301.063, 401.304].into(), [295.692, 394.015].into());
                pb.cubic_to([290.322, 386.727].into(), [293.582, 382.507].into(), [293.582, 382.507].into());
                pb.cubic_to([292.24, 376.177].into(), [300.679, 376.561].into(), [300.679, 376.561].into());
                pb.cubic_to([303.173, 374.451].into(), [306.433, 374.451].into(), [306.433, 374.451].into());
                pb.cubic_to([308.159, 372.533].into(), [310.461, 373.109].into(), [310.461, 373.109].into());
                pb.cubic_to([311.995, 376.753].into(), [317.941, 374.835].into(), [317.941, 374.835].into());
                pb.cubic_to([319.284, 377.136].into(), [327.148, 377.52].into(), [327.148, 377.52].into());
                pb.cubic_to([328.107, 380.013].into(), [328.491, 381.548].into(), [331.751, 382.123].into());
                pb.cubic_to([335.012, 382.699].into(), [311.42, 423.936].into(), [311.42, 423.936].into());
                pb.cubic_to([317.558, 424.704].into(), [309.694, 436.596].into(), [309.694, 436.596].into());
                pb.cubic_to([307.584, 442.925].into(), [318.517, 428.923].into(), [320.627, 427.581].into());
                pb.cubic_to([322.736, 426.238].into(), [323.695, 424.128].into(), [322.161, 424.32].into());
                pb.cubic_to([320.627, 424.512].into(), [318.9, 422.402].into(), [320.243, 422.21].into());
                pb.cubic_to([321.586, 422.018].into(), [334.053, 407.633].into(), [337.313, 397.851].into());
                pb.cubic_to([340.574, 388.069].into(), [346.328, 384.233].into(), [352.274, 378.479].into());
                pb.cubic_to([358.22, 372.725].into(), [357.453, 349.517].into(), [357.453, 349.517].into());
                pb.cubic_to([357.069, 341.077].into(), [362.823, 330.912].into(), [362.823, 330.912].into());
                pb.cubic_to([364.741, 327.268].into(), [360.714, 309.813].into(), [360.714, 309.813].into());
                pb.cubic_to([358.795, 307.704].into(), [360.138, 306.936].into(), [360.138, 306.936].into());
                pb.cubic_to([361.097, 305.786].into(), [367.618, 293.127].into(), [367.618, 293.127].into());
                pb.cubic_to([365.892, 293.318].into(), [369.345, 289.866].into(), [369.345, 289.866].into());
                pb.cubic_to([374.332, 284.112].into(), [368.194, 286.989].into(), [368.194, 286.989].into());
                pb.cubic_to([362.44, 288.523].into(), [369.153, 279.125].into(), [369.153, 279.125].into());
                pb.cubic_to([370.304, 277.399].into(), [361.673, 281.81].into(), [361.673, 281.81].into());
                pb.cubic_to([352.85, 282.386].into(), [363.974, 275.481].into(), [363.974, 275.481].into());
                pb.cubic_to([372.222, 268.576].into(), [361.289, 272.795].into(), [361.289, 272.795].into());
                pb.cubic_to([356.877, 274.522].into(), [359.946, 268.0].into(), [359.946, 268.0].into());
                pb.cubic_to([363.015, 266.466].into(), [379.51, 259.753].into(), [379.51, 259.753].into());
                pb.cubic_to([379.894, 256.108].into(), [377.017, 251.312].into(), [377.017, 251.312].into());
                pb.cubic_to([377.4, 247.476].into(), [375.291, 244.216].into(), [375.291, 244.216].into());
                pb.cubic_to([374.14, 236.352].into(), [373.564, 235.585].into(), [373.564, 235.585].into());
                pb.cubic_to([369.536, 235.393].into(), [362.44, 222.158].into(), [362.44, 222.158].into());
                pb.cubic_to([360.714, 219.665].into(), [350.932, 208.157].into(), [350.932, 208.157].into());
                pb.cubic_to([349.014, 201.444].into(), [331.751, 208.348].into(), [331.751, 208.348].into());
                pb.cubic_to([325.422, 205.088].into(), [327.34, 208.348].into(), [327.34, 208.348].into());
                pb.cubic_to([326.956, 210.458].into(), [331.559, 216.212].into(), [331.559, 216.212].into());
                pb.cubic_to([338.273, 218.706].into(), [335.779, 229.063].into(), [335.779, 229.063].into());
                pb.cubic_to([339.615, 230.406].into(), [328.874, 233.091].into(), [329.066, 234.242].into());
                pb.cubic_to([329.258, 235.393].into(), [334.82, 236.735].into(), [334.82, 236.735].into());
                pb.cubic_to([342.492, 238.653].into(), [338.273, 240.955].into(), [338.273, 240.955].into());
                pb.cubic_to([337.697, 244.791].into(), [340.574, 250.162].into(), [340.574, 250.162].into());
                pb.cubic_to([351.699, 250.929].into(), [340.574, 266.466].into(), [340.574, 266.466].into());
                pb.cubic_to([330.217, 273.754].into(), [329.258, 279.317].into(), [329.258, 279.317].into());
                pb.cubic_to([341.341, 287.181].into(), [333.477, 299.072].into(), [333.669, 302.525].into());
                pb.cubic_to([333.861, 305.977].into(), [335.012, 326.692].into(), [335.012, 326.692].into());
                pb.cubic_to([333.094, 332.638].into(), [330.217, 345.681].into(), [330.217, 345.681].into());
                pb.cubic_to([332.327, 350.668].into(), [339.423, 362.751].into(), [339.423, 362.751].into());
                pb.cubic_to([342.109, 366.779].into(), [350.548, 371.382].into(), [348.438, 374.259].into());
                pb.cubic_to([346.328, 377.136].into(), [338.848, 375.41].into(), [338.848, 375.41].into());
                pb.cubic_to([331.368, 376.753].into(), [331.943, 371.766].into(), [331.943, 371.766].into());
                pb.cubic_to([330.409, 370.807].into(), [329.641, 366.012].into(), [329.641, 366.012].into());
                pb.cubic_to([328.95, 358.404].into(), [320.435, 352.394].into(), [320.435, 352.394].into());
                pb.cubic_to([309.694, 346.448].into(), [318.517, 342.612].into(), [318.517, 342.612].into());
                pb.cubic_to([324.271, 336.282].into(), [314.873, 336.091].into(), [314.873, 336.091].into());
                pb.cubic_to([304.323, 337.817].into(), [312.187, 328.035].into(), [312.187, 328.035].into());
                pb.cubic_to([322.545, 315.759].into(), [319.668, 313.074].into(), [319.668, 313.074].into());
                pb.cubic_to([309.886, 312.115].into(), [321.969, 303.292].into(), [321.969, 303.292].into());
                pb.cubic_to([321.969, 303.292].into(), [321.202, 305.21].into(), [321.394, 303.484].into());
                pb.cubic_to([321.586, 301.758].into(), [324.463, 297.73].into(), [325.23, 295.812].into());
                pb.cubic_to([325.997, 293.894].into(), [322.161, 293.702].into(), [322.161, 293.702].into());
                pb.cubic_to([322.736, 284.495].into(), [307.968, 288.523].into(), [307.968, 288.523].into());
                pb.cubic_to([307.968, 288.523].into(), [307.968, 288.523].into(), [306.433, 288.331].into());
                pb.cubic_to([304.899, 288.14].into(), [294.158, 288.907].into(), [288.595, 291.017].into());
                pb.cubic_to([283.033, 293.127].into(), [276.512, 293.127].into(), [276.512, 293.127].into());
                pb.cubic_to([276.512, 293.127].into(), [272.676, 291.4].into(), [265.386, 291.592].into());
                pb.cubic_to([258.098, 291.784].into(), [250.426, 289.099].into(), [250.426, 289.099].into());
                pb.cubic_to([246.206, 289.482].into(), [254.453, 293.702].into(), [254.645, 293.51].into());
                pb.cubic_to([254.837, 293.318].into(), [260.208, 298.689].into(), [252.535, 298.113].into());
                pb.cubic_to([231.632, 296.545].into(), [221.271, 306.361].into(), [221.271, 306.361].into());
                pb.cubic_to([219.353, 307.704].into(), [216.86, 310.389].into(), [216.86, 310.389].into());
                pb.cubic_to([207.27, 312.307].into(), [218.203, 298.497].into(), [218.203, 298.497].into());
                pb.cubic_to([219.353, 297.154].into(), [218.011, 296.195].into(), [218.011, 296.195].into());
                pb.cubic_to([217.244, 297.73].into(), [209.763, 302.909].into(), [209.763, 302.909].into());
                pb.cubic_to([207.067, 303.842].into(), [205.76, 305.121].into(), [203.525, 307.505].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([180.609, 318.636].into());
                pb.cubic_to([180.609, 318.636].into(), [191.734, 313.266].into(), [194.227, 310.581].into());
                pb.cubic_to([196.721, 307.895].into(), [210.147, 296.963].into(), [210.147, 296.963].into());
                pb.cubic_to([210.147, 296.963].into(), [204.968, 298.881].into(), [202.475, 300.607].into());
                pb.cubic_to([199.981, 302.333].into(), [189.624, 310.197].into(), [189.624, 310.197].into());
                pb.cubic_to([189.624, 310.197].into(), [185.98, 315.951].into(), [180.609, 318.636].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(76,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([124.978, 348.555].into());
                pb.cubic_to([125.301, 348.697].into(), [124.798, 351.298].into(), [124.603, 351.818].into());
                pb.cubic_to([123.622, 354.433].into(), [115.012, 355.846].into(), [115.012, 355.846].into());
                pb.cubic_to([114.795, 354.537].into(), [114.742, 353.007].into(), [114.844, 351.436].into());
                pb.cubic_to([114.844, 351.436].into(), [119.512, 346.143].into(), [124.978, 348.555].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(153,204,50, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([124.978, 348.747].into());
                pb.cubic_to([124.547, 348.595].into(), [124.963, 351.369].into(), [124.794, 351.818].into());
                pb.cubic_to([123.814, 354.433].into(), [115.012, 355.942].into(), [115.012, 355.942].into());
                pb.cubic_to([114.795, 354.633].into(), [114.742, 353.103].into(), [114.844, 351.532].into());
                pb.cubic_to([114.844, 351.532].into(), [118.937, 346.622].into(), [124.978, 348.747].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(101,153,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([120.766, 348.61].into());
                pb.cubic_to([120.167, 348.61].into(), [119.682, 349.703].into(), [119.682, 351.051].into());
                pb.cubic_to([119.682, 352.399].into(), [120.167, 353.492].into(), [120.766, 353.492].into());
                pb.cubic_to([121.366, 353.492].into(), [121.852, 352.399].into(), [121.852, 351.051].into());
                pb.cubic_to([121.852, 349.703].into(), [121.366, 348.61].into(), [120.766, 348.61].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([77.0353, 254.573].into());
                pb.cubic_to([77.0353, 254.573].into(), [71.6648, 244.983].into(), [95.4485, 250.737].into());
                pb.cubic_to([95.4485, 250.737].into(), [108.875, 251.888].into(), [111.176, 254.189].into());
                pb.cubic_to([112.327, 253.422].into(), [120.35, 250.609].into(), [123.068, 249.97].into());
                pb.cubic_to([129.589, 248.435].into(), [137.645, 258.027].into(), [137.645, 258.027].into());
                pb.cubic_to([137.645, 258.027].into(), [142.057, 268.096].into(), [144.742, 268.096].into());
                pb.cubic_to([147.427, 268.096].into(), [144.358, 266.562].into(), [144.358, 266.562].into());
                pb.cubic_to([144.358, 266.562].into(), [138.029, 256.875].into(), [138.412, 255.34].into());
                pb.cubic_to([138.412, 255.34].into(), [133.426, 236.16].into(), [118.081, 235.393].into());
                pb.cubic_to([118.081, 235.393].into(), [102.593, 234.482].into(), [103.888, 228.871].into());
                pb.cubic_to([103.888, 228.871].into(), [112.327, 231.173].into(), [114.629, 228.871].into());
                pb.cubic_to([114.629, 228.871].into(), [124.986, 229.255].into(), [117.314, 223.117].into());
                pb.line_to([110.793, 211.993].into());
                pb.cubic_to([110.793, 211.993].into(), [110.927, 208.235].into(), [101.203, 211.609].into());
                pb.cubic_to([91.8042, 214.87].into(), [81.9263, 227.241].into(), [81.9263, 227.241].into());
                pb.cubic_to([81.9263, 227.241].into(), [66.63, 241.195].into(), [77.0353, 254.573].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([75.8845, 250.737].into());
                pb.cubic_to([75.8845, 250.737].into(), [73.9665, 241.53].into(), [109.258, 251.504].into());
                pb.cubic_to([109.258, 251.504].into(), [113.478, 251.504].into(), [115.78, 250.737].into());
                pb.cubic_to([118.081, 249.97].into(), [129.589, 247.285].into(), [131.507, 248.435].into());
                pb.cubic_to([131.507, 248.435].into(), [124.603, 235.393].into(), [113.478, 236.927].into());
                pb.cubic_to([113.478, 236.927].into(), [100.819, 235.393].into(), [101.203, 230.789].into());
                pb.cubic_to([101.203, 230.789].into(), [105.039, 223.885].into(), [109.642, 221.583].into());
                pb.cubic_to([109.642, 221.583].into(), [112.327, 219.281].into(), [111.944, 216.212].into());
                pb.cubic_to([111.56, 213.144].into(), [108.875, 211.609].into(), [106.957, 210.842].into());
                pb.cubic_to([105.039, 210.075].into(), [101.97, 213.144].into(), [100.435, 213.144].into());
                pb.cubic_to([98.9009, 213.144].into(), [90.8452, 219.281].into(), [86.6255, 223.885].into());
                pb.cubic_to([82.4058, 228.488].into(), [74.3501, 239.996].into(), [74.7337, 242.681].into());
                pb.cubic_to([75.1173, 245.367].into(), [75.8845, 250.737].into(), [75.8845, 250.737].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(229,153,153, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([78.9534, 234.002].into());
                pb.cubic_to([81.4468, 230.214].into(), [84.5157, 226.186].into(), [86.6255, 223.885].into());
                pb.cubic_to([90.8452, 219.281].into(), [98.9009, 213.144].into(), [100.435, 213.144].into());
                pb.cubic_to([101.97, 213.144].into(), [105.039, 210.075].into(), [106.957, 210.842].into());
                pb.cubic_to([108.875, 211.609].into(), [111.56, 213.144].into(), [111.944, 216.212].into());
                pb.cubic_to([112.327, 219.281].into(), [109.642, 221.583].into(), [109.642, 221.583].into());
                pb.cubic_to([106.702, 223.053].into(), [104.074, 226.402].into(), [102.56, 228.63].into());
                pb.cubic_to([102.56, 228.63].into(), [102.737, 226.186].into(), [97.7501, 226.953].into());
                pb.cubic_to([92.7632, 227.721].into(), [87.7763, 230.406].into(), [86.2419, 233.475].into());
                pb.cubic_to([84.7075, 236.544].into(), [82.4058, 238.845].into(), [83.9403, 235.393].into());
                pb.cubic_to([85.4747, 231.94].into(), [87.7763, 228.488].into(), [89.3108, 228.104].into());
                pb.cubic_to([90.8452, 227.721].into(), [90.4616, 226.57].into(), [88.1599, 226.953].into());
                pb.cubic_to([85.8583, 227.337].into(), [83.173, 227.721].into(), [78.9534, 232.708].into());
                pb.line_to([78.9534, 234.002].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(178,101,101, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([76.4599, 254.189].into());
                pb.cubic_to([76.4599, 254.189].into(), [78.1862, 267.233].into(), [79.337, 271.069].into());
                pb.cubic_to([79.337, 271.069].into(), [78.5698, 277.59].into(), [80.8714, 281.618].into());
                pb.cubic_to([83.173, 285.646].into(), [85.0911, 291.592].into(), [87.9681, 296.771].into());
                pb.cubic_to([90.8452, 301.949].into(), [91.037, 305.786].into(), [94.873, 307.32].into());
                pb.cubic_to([98.7091, 308.854].into(), [104.463, 317.102].into(), [107.148, 318.061].into());
                pb.cubic_to([109.834, 319.02].into(), [109.642, 318.253].into(), [109.642, 318.253].into());
                pb.cubic_to([109.642, 318.253].into(), [116.163, 332.446].into(), [129.206, 328.61].into());
                pb.cubic_to([129.206, 328.61].into(), [113.67, 331.295].into(), [128.822, 340.31].into());
                pb.cubic_to([128.822, 340.31].into(), [124.219, 339.255].into(), [127.384, 345.968].into());
                pb.cubic_to([129.495, 350.445].into(), [129.014, 343.954].into(), [118.465, 332.638].into());
                pb.cubic_to([118.465, 332.638].into(), [113.67, 324.39].into(), [108.683, 321.513].into());
                pb.cubic_to([103.696, 318.636].into(), [92.1878, 311.923].into(), [91.037, 308.279].into());
                pb.cubic_to([89.8862, 304.635].into(), [86.8173, 299.072].into(), [84.8993, 297.538].into());
                pb.cubic_to([82.9812, 296.004].into(), [80.296, 291.976].into(), [79.9124, 288.715].into());
                pb.cubic_to([79.9124, 288.715].into(), [78.7616, 284.879].into(), [77.4189, 283.728].into());
                pb.cubic_to([76.0763, 282.577].into(), [75.8845, 279.509].into(), [75.8845, 277.59].into());
                pb.cubic_to([75.8845, 275.672].into(), [73.9665, 272.987].into(), [74.1583, 270.686].into());
                pb.cubic_to([74.1583, 270.686].into(), [74.9255, 252.463].into(), [74.5419, 250.545].into());
                pb.line_to([76.4599, 254.189].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(153,38,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([68.2124, 249.778].into());
                pb.cubic_to([68.2124, 249.778].into(), [66.2943, 251.121].into(), [62.0747, 245.367].into());
                pb.cubic_to([62.0747, 245.367].into(), [69.0755, 213.719].into(), [69.0755, 212.376].into());
                pb.cubic_to([69.0755, 212.376].into(), [70.1304, 214.39].into(), [68.8837, 221.295].into());
                pb.cubic_to([67.637, 228.2].into(), [66.7739, 240.38].into(), [66.7739, 240.38].into());
                pb.line_to([68.2124, 249.778].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([88.9271, 307.895].into());
                pb.cubic_to([88.9271, 307.895].into(), [72.0484, 304.827].into(), [72.4321, 276.823].into());
                pb.line_to([71.6648, 253.039].into());
                pb.cubic_to([71.6648, 253.039].into(), [70.514, 277.59].into(), [69.3632, 279.125].into());
                pb.cubic_to([68.2124, 280.659].into(), [72.0484, 291.4].into(), [68.9796, 285.646].into());
                pb.cubic_to([68.9796, 285.646].into(), [55.5534, 272.22].into(), [63.2255, 251.888].into());
                pb.cubic_to([63.2255, 251.888].into(), [64.664, 248.723].into(), [61.787, 253.135].into());
                pb.cubic_to([61.787, 253.135].into(), [57.3755, 265.219].into(), [58.4304, 271.357].into());
                pb.cubic_to([58.4304, 271.357].into(), [58.6222, 273.467].into(), [60.4443, 276.152].into());
                pb.cubic_to([60.4443, 276.152].into(), [68.6919, 287.372].into(), [71.2812, 289.578].into());
                pb.cubic_to([71.2812, 289.578].into(), [73.0075, 303.388].into(), [87.7763, 308.375].into());
                pb.cubic_to([87.7763, 308.375].into(), [93.2427, 310.581].into(), [88.9271, 307.895].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(153,38,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([222.614, 371.382].into());
                pb.cubic_to([223.247, 371.722].into(), [223.238, 372.652].into(), [223.795, 372.818].into());
                pb.cubic_to([224.897, 373.148].into(), [225.054, 374.171].into(), [225.551, 374.923].into());
                pb.cubic_to([226.388, 376.188].into(), [226.573, 377.658].into(), [227.131, 379.088].into());
                pb.cubic_to([227.392, 379.759].into(), [227.418, 380.675].into(), [227.118, 381.308].into());
                pb.cubic_to([225.992, 383.687].into(), [225.319, 386.036].into(), [223.936, 388.363].into());
                pb.cubic_to([223.679, 388.794].into(), [223.427, 389.556].into(), [223.235, 390.129].into());
                pb.cubic_to([222.791, 391.456].into(), [221.585, 392.407].into(), [220.76, 393.673].into());
                pb.cubic_to([220.484, 394.096].into(), [220.988, 394.983].into(), [220.301, 395.063].into());
                pb.cubic_to([219.441, 395.164].into(), [218.051, 395.72].into(), [217.828, 394.736].into());
                pb.cubic_to([217.264, 392.255].into(), [218.233, 389.836].into(), [219.162, 387.494].into());
                pb.cubic_to([218.412, 386.83].into(), [218.732, 385.947].into(), [218.878, 385.211].into());
                pb.cubic_to([219.559, 381.753].into(), [218.41, 378.539].into(), [217.68, 375.207].into());
                pb.cubic_to([217.658, 375.107].into(), [217.986, 374.917].into(), [217.959, 374.858].into());
                pb.cubic_to([216.787, 372.282].into(), [215.395, 369.937].into(), [213.65, 367.654].into());
                pb.cubic_to([212.923, 366.702].into(), [212.087, 365.824].into(), [211.61, 364.804].into());
                pb.cubic_to([211.257, 364.05].into(), [210.866, 363.123].into(), [211.106, 362.176].into());
                pb.cubic_to([207.812, 359.51].into(), [205.654, 355.822].into(), [203.15, 352.134].into());
                pb.cubic_to([202.707, 351.482].into(), [202.986, 350.322].into(), [203.514, 350.064].into());
                pb.cubic_to([204.294, 349.683].into(), [205.211, 350.665].into(), [205.662, 351.476].into());
                pb.cubic_to([206.035, 352.145].into(), [206.373, 352.769].into(), [206.844, 353.385].into());
                pb.cubic_to([206.972, 353.553].into(), [206.8, 353.955].into(), [206.929, 354.071].into());
                pb.cubic_to([209.454, 356.322].into(), [211.055, 359.138].into(), [213.408, 361.409].into());
                pb.cubic_to([215.278, 361.724].into(), [216.752, 362.681].into(), [218.428, 363.653].into());
                pb.cubic_to([218.723, 363.824].into(), [219.226, 363.586].into(), [219.504, 363.773].into());
                pb.cubic_to([221.185, 364.901].into(), [221.183, 366.854].into(), [221.285, 368.686].into());
                pb.cubic_to([221.333, 369.533].into(), [221.521, 370.796].into(), [222.614, 371.382].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([214.135, 375.665].into());
                pb.cubic_to([214.254, 375.739].into(), [214.106, 376.145].into(), [214.21, 376.352].into());
                pb.cubic_to([214.366, 376.663].into(), [214.752, 376.843].into(), [214.907, 377.154].into());
                pb.cubic_to([215.012, 377.361].into(), [214.856, 377.725].into(), [214.986, 377.861].into());
                pb.cubic_to([217.223, 380.208].into(), [217.47, 383.108].into(), [216.476, 385.959].into());
                pb.cubic_to([217.458, 386.554].into(), [217.517, 387.764].into(), [217.109, 388.577].into());
                pb.cubic_to([216.291, 390.207].into(), [216.106, 392.054].into(), [215.171, 393.534].into());
                pb.cubic_to([214.402, 394.751].into(), [212.889, 395.944].into(), [211.574, 394.694].into());
                pb.cubic_to([211.17, 394.311].into(), [210.862, 393.556].into(), [211.129, 392.873].into());
                pb.cubic_to([211.19, 392.717].into(), [211.464, 392.577].into(), [211.438, 392.498].into());
                pb.cubic_to([211.335, 392.187].into(), [210.811, 391.972].into(), [210.806, 391.712].into());
                pb.cubic_to([210.777, 390.277].into(), [209.862, 388.828].into(), [210.466, 387.553].into());
                pb.cubic_to([211.207, 385.991].into(), [211.992, 384.21].into(), [212.64, 382.507].into());
                pb.cubic_to([211.457, 380.478].into(), [212.448, 378.129].into(), [210.766, 376.329].into());
                pb.cubic_to([210.636, 376.189].into(), [210.645, 375.819].into(), [210.762, 375.625].into());
                pb.cubic_to([211.042, 375.159].into(), [211.431, 374.77].into(), [211.897, 374.49].into());
                pb.cubic_to([212.091, 374.373].into(), [212.425, 374.372].into(), [212.616, 374.491].into());
                pb.cubic_to([213.171, 374.838].into(), [213.552, 375.305].into(), [214.135, 375.665].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([274.373, 385.554].into());
                pb.cubic_to([275.705, 383.835].into(), [275.983, 381.155].into(), [274.018, 379.822].into());
                pb.cubic_to([274.546, 376.648].into(), [277.76, 378.546].into(), [279.772, 379.054].into());
                pb.cubic_to([279.668, 379.427].into(), [279.886, 379.756].into(), [280.157, 379.761].into());
                pb.cubic_to([281.171, 379.776].into(), [281.823, 380.765].into(), [282.841, 380.589].into());
                pb.cubic_to([283.258, 382.082].into(), [284.828, 382.755].into(), [285.446, 384.079].into());
                pb.cubic_to([287.101, 387.622].into(), [286.535, 391.72].into(), [284.056, 394.833].into());
                pb.cubic_to([283.863, 395.077].into(), [284.071, 395.573].into(), [283.952, 395.92].into());
                pb.cubic_to([283.227, 398.04].into(), [281.244, 398.342].into(), [279.389, 399.002].into());
                pb.cubic_to([278.26, 402.718].into(), [277.626, 406.584].into(), [275.936, 410.127].into());
                pb.cubic_to([274.389, 410.366].into(), [273.719, 412.034].into(), [272.437, 412.725].into());
                pb.cubic_to([271.159, 413.414].into(), [270.614, 411.9].into(), [270.653, 410.897].into());
                pb.cubic_to([270.66, 410.7].into(), [271.093, 410.485].into(), [270.93, 410.135].into());
                pb.cubic_to([270.857, 409.978].into(), [270.608, 409.872].into(), [270.608, 409.743].into());
                pb.cubic_to([270.609, 409.614].into(), [270.821, 409.488].into(), [270.95, 409.359].into());
                pb.cubic_to([270.069, 408.573].into(), [268.704, 408.116].into(), [268.422, 407.017].into());
                pb.cubic_to([267.507, 403.46].into(), [269.974, 400.463].into(), [271.574, 397.393].into());
                pb.cubic_to([272.141, 396.304].into(), [271.435, 395.085].into(), [270.706, 393.927].into());
                pb.cubic_to([270.286, 393.26].into(), [270.389, 392.18].into(), [270.654, 391.359].into());
                pb.cubic_to([271.375, 389.123].into(), [272.901, 387.455].into(), [274.373, 385.554].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([238.736, 367.921].into());
                pb.cubic_to([237.31, 366.146].into(), [234.038, 363.682].into(), [236.835, 361.833].into());
                pb.cubic_to([237.021, 361.71].into(), [237.376, 361.706].into(), [237.542, 361.834].into());
                pb.cubic_to([239.48, 363.335].into(), [241.401, 364.201].into(), [243.737, 364.759].into());
                pb.cubic_to([243.856, 364.787].into(), [244.119, 364.339].into(), [244.473, 364.494].into());
                pb.cubic_to([246.02, 365.168].into(), [247.947, 365.112].into(), [249.083, 366.395].into());
                pb.cubic_to([252.696, 366.181].into(), [256.114, 367.251].into(), [259.367, 368.505].into());
                pb.cubic_to([260.48, 368.935].into(), [261.698, 369.471].into(), [262.85, 369.952].into());
                pb.cubic_to([264.169, 370.505].into(), [265.324, 371.395].into(), [266.39, 372.489].into());
                pb.cubic_to([266.518, 372.619].into(), [266.857, 372.533].into(), [267.113, 372.533].into());
                pb.cubic_to([267.075, 373.361].into(), [267.998, 373.483].into(), [268.235, 374.079].into());
                pb.cubic_to([268.323, 374.302].into(), [268.179, 374.681].into(), [268.306, 374.779].into());
                pb.cubic_to([270.357, 376.342].into(), [271.239, 378.278].into(), [270.118, 380.557].into());
                pb.cubic_to([269.845, 381.112].into(), [269.606, 381.704].into(), [269.063, 382.161].into());
                pb.cubic_to([268.023, 383.034].into(), [266.966, 382.215].into(), [265.962, 382.507].into());
                pb.cubic_to([265.809, 381.905].into(), [265.11, 382.07].into(), [264.74, 381.88].into());
                pb.cubic_to([263.916, 381.459].into(), [262.638, 382.02].into(), [261.814, 381.6].into());
                pb.cubic_to([260.508, 380.933].into(), [259.318, 380.771].into(), [257.954, 380.41].into());
                pb.cubic_to([257.655, 380.331].into(), [256.909, 380.423].into(), [256.755, 379.822].into());
                pb.cubic_to([256.627, 379.95].into(), [256.485, 380.175].into(), [256.383, 380.153].into());
                pb.cubic_to([254.553, 379.774].into(), [253.345, 379.568].into(), [252.097, 377.946].into());
                pb.cubic_to([251.998, 377.818].into(), [251.575, 377.99].into(), [251.422, 377.86].into());
                pb.cubic_to([250.504, 377.086].into(), [250.116, 375.902].into(), [249.06, 375.258].into());
                pb.cubic_to([248.867, 375.14].into(), [248.53, 375.301].into(), [248.344, 375.177].into());
                pb.cubic_to([247.724, 374.764].into(), [247.372, 374.149].into(), [246.756, 373.72].into());
                pb.cubic_to([246.441, 373.501].into(), [246.057, 373.812].into(), [246.088, 374.058].into());
                pb.cubic_to([246.323, 375.925].into(), [246.949, 377.639].into(), [246.398, 379.438].into());
                pb.cubic_to([248.39, 381.855].into(), [250.803, 383.724].into(), [252.535, 386.343].into());
                pb.cubic_to([252.55, 388.42].into(), [253.213, 390.478].into(), [253.105, 392.47].into());
                pb.cubic_to([253.096, 392.655].into(), [252.819, 393.358].into(), [252.698, 393.691].into());
                pb.cubic_to([252.399, 394.51].into(), [253.268, 395.532].into(), [252.459, 396.227].into());
                pb.cubic_to([251.112, 397.38].into(), [249.873, 396.54].into(), [249.083, 395.166].into());
                pb.cubic_to([247.32, 394.792].into(), [245.339, 394.127].into(), [243.826, 395.311].into());
                pb.cubic_to([242.86, 396.066].into(), [242.306, 396.934].into(), [241.539, 397.947].into());
                pb.cubic_to([240.595, 399.196].into(), [240.916, 400.573].into(), [240.983, 402.073].into());
                pb.cubic_to([240.989, 402.196].into(), [240.687, 402.326].into(), [240.687, 402.454].into());
                pb.cubic_to([240.688, 402.584].into(), [240.899, 402.71].into(), [241.027, 402.838].into());
                pb.cubic_to([240.35, 403.438].into(), [240.086, 404.453].into(), [239.109, 404.756].into());
                pb.cubic_to([239.402, 405.803].into(), [238.753, 406.651].into(), [237.918, 406.941].into());
                pb.cubic_to([236.005, 407.603].into(), [234.397, 405.77].into(), [232.582, 405.7].into());
                pb.cubic_to([232.089, 405.682].into(), [231.641, 406.677].into(), [231.019, 406.989].into());
                pb.cubic_to([230.605, 407.196].into(), [229.929, 407.228].into(), [229.582, 406.972].into());
                pb.cubic_to([228.923, 406.489].into(), [228.358, 406.38].into(), [227.631, 406.183].into());
                pb.cubic_to([226.08, 405.765].into(), [224.854, 404.716].into(), [223.435, 403.896].into());
                pb.cubic_to([222.011, 403.074].into(), [221.095, 401.696].into(), [220.059, 400.43].into());
                pb.cubic_to([219.157, 399.325].into(), [219.026, 397.01].into(), [220.388, 396.531].into());
                pb.cubic_to([222.156, 395.907].into(), [223.406, 398.499].into(), [225.292, 398.187].into());
                pb.cubic_to([225.591, 398.138].into(), [225.788, 397.84].into(), [225.683, 397.468].into());
                pb.cubic_to([226.056, 397.363].into(), [226.265, 397.583].into(), [226.45, 397.851].into());
                pb.cubic_to([227.273, 396.874].into(), [228.389, 396.551].into(), [229.289, 395.714].into());
                pb.cubic_to([230.219, 394.847].into(), [231.894, 395.247].into(), [232.867, 394.291].into());
                pb.cubic_to([234.333, 392.851].into(), [233.797, 390.28].into(), [235.657, 389.028].into());
                pb.cubic_to([235.095, 387.769].into(), [234.513, 386.544].into(), [234.191, 385.176].into());
                pb.cubic_to([233.921, 384.019].into(), [234.874, 382.871].into(), [236.036, 382.959].into());
                pb.cubic_to([237.242, 383.049].into(), [237.493, 383.777].into(), [237.958, 384.809].into());
                pb.cubic_to([238.214, 384.553].into(), [238.664, 384.268].into(), [238.625, 384.061].into());
                pb.cubic_to([238.187, 381.771].into(), [237.202, 379.86].into(), [236.762, 377.529].into());
                pb.cubic_to([236.706, 377.225].into(), [236.413, 377.031].into(), [236.04, 377.136].into());
                pb.cubic_to([235.592, 373.157].into(), [231.706, 370.862].into(), [229.265, 367.826].into());
                pb.cubic_to([228.878, 367.345].into(), [228.875, 366.147].into(), [229.267, 365.761].into());
                pb.cubic_to([230.612, 364.43].into(), [232.492, 365.913].into(), [234.122, 366.395].into());
                pb.cubic_to([234.327, 367.552].into(), [235.15, 368.455].into(), [236.428, 368.402].into());
                pb.cubic_to([236.673, 368.392].into(), [236.899, 368.912].into(), [237.209, 369.037].into());
                pb.cubic_to([237.543, 369.169].into(), [238.025, 368.954].into(), [238.299, 369.144].into());
                pb.cubic_to([239.957, 370.29].into(), [241.307, 371.351].into(), [242.974, 372.491].into());
                pb.cubic_to([243.158, 372.617].into(), [243.488, 372.464].into(), [243.695, 372.568].into());
                pb.cubic_to([244.007, 372.723].into(), [244.186, 373.094].into(), [244.496, 373.272].into());
                pb.cubic_to([244.83, 373.463].into(), [245.062, 373.185].into(), [245.247, 372.917].into());
                pb.cubic_to([244.627, 372.582].into(), [244.624, 371.664].into(), [244.065, 371.471].into());
                pb.cubic_to([243.322, 371.214].into(), [242.784, 370.722].into(), [242.138, 370.293].into());
                pb.cubic_to([241.858, 370.108].into(), [241.226, 370.346].into(), [241.126, 370.174].into());
                pb.cubic_to([240.553, 369.188].into(), [239.417, 368.768].into(), [238.736, 367.921].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([185.596, 415.305].into());
                pb.cubic_to([185.596, 415.305].into(), [176.737, 418.06].into(), [166.032, 393.44].into());
                pb.cubic_to([166.032, 393.44].into(), [163.73, 388.453].into(), [161.429, 386.535].into());
                pb.cubic_to([159.127, 384.617].into(), [148.386, 381.164].into(), [146.468, 377.328].into());
                pb.line_to([136.494, 361.984].into());
                pb.cubic_to([136.494, 361.984].into(), [150.688, 377.328].into(), [153.757, 379.63].into());
                pb.cubic_to([153.757, 379.63].into(), [161.429, 387.686].into(), [158.36, 381.164].into());
                pb.cubic_to([158.36, 381.164].into(), [144.934, 370.807].into(), [146.085, 361.984].into());
                pb.cubic_to([146.085, 361.984].into(), [140.714, 348.174].into(), [139.947, 346.256].into());
                pb.cubic_to([139.947, 346.256].into(), [155.291, 376.945].into(), [157.593, 378.095].into());
                pb.cubic_to([159.894, 379.246].into(), [161.045, 379.246].into(), [159.894, 375.794].into());
                pb.cubic_to([158.744, 372.341].into(), [158.36, 356.613].into(), [155.675, 354.695].into());
                pb.cubic_to([155.675, 354.695].into(), [163.347, 374.259].into(), [162.58, 377.328].into());
                pb.cubic_to([162.58, 377.328].into(), [165.649, 380.781].into(), [167.95, 375.794].into());
                pb.line_to([166.799, 360.45].into());
                pb.line_to([171.019, 348.941].into());
                pb.cubic_to([171.019, 348.941].into(), [168.717, 359.682].into(), [170.252, 374.643].into());
                pb.cubic_to([170.252, 374.643].into(), [168.334, 384.617].into(), [172.17, 379.246].into());
                pb.cubic_to([176.006, 373.876].into(), [185.212, 368.122].into(), [185.212, 363.518].into());
                pb.cubic_to([185.212, 363.518].into(), [180.226, 380.397].into(), [171.403, 385.0].into());
                pb.line_to([167.567, 379.246].into());
                pb.line_to([166.416, 381.164].into());
                pb.cubic_to([166.416, 381.164].into(), [162.963, 381.932].into(), [167.183, 388.453].into());
                pb.cubic_to([171.403, 394.974].into(), [171.019, 395.741].into(), [171.019, 395.741].into());
                pb.cubic_to([171.019, 395.741].into(), [177.157, 388.836].into(), [178.691, 388.836].into());
                pb.cubic_to([178.691, 388.836].into(), [191.35, 396.125].into(), [192.501, 372.725].into());
                pb.cubic_to([192.501, 372.725].into(), [199.022, 386.535].into(), [190.199, 393.056].into());
                pb.cubic_to([190.199, 393.056].into(), [176.006, 394.974].into(), [177.157, 399.961].into());
                pb.line_to([184.062, 411.853].into());
                pb.cubic_to([187.514, 416.84].into(), [185.98, 414.155].into(), [185.98, 414.155].into());
                pb.line_to([185.596, 415.305].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([166.416, 399.577].into());
                pb.cubic_to([166.416, 399.577].into(), [154.14, 399.577].into(), [151.071, 394.591].into());
                pb.line_to([144.167, 385.384].into());
                pb.cubic_to([144.167, 385.384].into(), [160.662, 394.974].into(), [164.498, 396.125].into());
                pb.cubic_to([168.334, 397.276].into(), [166.416, 399.577].into(), [166.416, 399.577].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([128.055, 393.44].into());
                pb.cubic_to([128.055, 393.44].into(), [126.137, 392.289].into(), [125.753, 389.604].into());
                pb.cubic_to([125.37, 386.918].into(), [123.068, 386.535].into(), [123.835, 383.85].into());
                pb.cubic_to([124.603, 381.164].into(), [126.521, 378.863].into(), [126.521, 382.699].into());
                pb.cubic_to([126.521, 386.535].into(), [128.055, 388.453].into(), [128.822, 389.604].into());
                pb.cubic_to([129.589, 390.754].into(), [131.124, 394.974].into(), [128.055, 393.44].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([119.616, 334.748].into());
                pb.cubic_to([119.616, 334.748].into(), [111.56, 338.584].into(), [108.491, 342.036].into());
                pb.cubic_to([105.422, 345.489].into(), [105.856, 340.535].into(), [101.203, 340.886].into());
                pb.cubic_to([95.5952, 341.309].into(), [96.5993, 356.613].into(), [96.5993, 356.613].into());
                pb.line_to([92.7632, 349.325].into());
                pb.cubic_to([92.7632, 349.325].into(), [91.6124, 335.515].into(), [99.2845, 337.817].into());
                pb.cubic_to([103.031, 338.941].into(), [104.271, 337.433].into(), [102.737, 336.666].into());
                pb.cubic_to([101.203, 335.899].into(), [108.107, 335.515].into(), [105.422, 333.981].into());
                pb.cubic_to([102.737, 332.446].into(), [116.547, 337.433].into(), [114.245, 327.459].into());
                pb.line_to([119.616, 334.748].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([107.532, 320.938].into());
                pb.cubic_to([107.532, 320.938].into(), [92.7632, 316.718].into(), [89.3108, 325.925].into());
                pb.cubic_to([89.3108, 325.925].into(), [84.7075, 323.623].into(), [86.8173, 320.746].into());
                pb.cubic_to([88.9271, 317.869].into(), [90.078, 317.486].into(), [90.078, 317.486].into());
                pb.cubic_to([90.078, 317.486].into(), [95.2567, 316.335].into(), [94.6812, 315.568].into());
                pb.cubic_to([94.1058, 314.8].into(), [91.8042, 311.54].into(), [91.8042, 311.54].into());
                pb.cubic_to([91.8042, 311.54].into(), [101.586, 317.294].into(), [107.532, 320.938].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([326.573, 245.942].into());
                pb.cubic_to([326.163, 243.895].into(), [324.56, 243.127].into(), [322.736, 242.489].into());
                pb.cubic_to([320.898, 243.408].into(), [318.406, 246.387].into(), [316.599, 244.408].into());
                pb.cubic_to([316.144, 244.868].into(), [315.397, 244.925].into(), [315.067, 245.56].into());
                pb.cubic_to([314.621, 246.421].into(), [314.882, 247.425].into(), [314.554, 248.19].into());
                pb.cubic_to([314.031, 249.41].into(), [313.352, 250.72].into(), [313.53, 252.08].into());
                pb.cubic_to([315.262, 252.762].into(), [315.832, 254.59].into(), [315.378, 256.281].into());
                pb.cubic_to([315.312, 256.528].into(), [314.9, 256.717].into(), [315.092, 257.051].into());
                pb.cubic_to([315.271, 257.361].into(), [315.575, 257.579].into(), [315.832, 257.835].into());
                pb.cubic_to([315.702, 257.705].into(), [315.563, 257.482].into(), [315.457, 257.501].into());
                pb.cubic_to([314.872, 257.603].into(), [314.99, 258.214].into(), [315.115, 258.585].into());
                pb.cubic_to([315.676, 260.259].into(), [317.608, 260.512].into(), [318.9, 259.369].into());
                pb.cubic_to([319.146, 259.911].into(), [319.634, 259.725].into(), [320.051, 259.753].into());
                pb.cubic_to([320.003, 260.308].into(), [320.395, 260.813].into(), [320.584, 261.216].into());
                pb.cubic_to([321.081, 262.269].into(), [322.643, 261.209].into(), [323.408, 261.795].into());
                pb.cubic_to([324.44, 262.587].into(), [325.459, 263.257].into(), [326.493, 262.679].into());
                pb.cubic_to([328.228, 261.707].into(), [329.867, 260.545].into(), [331.017, 258.875].into());
                pb.cubic_to([331.568, 258.075].into(), [331.798, 256.847].into(), [331.743, 255.928].into());
                pb.cubic_to([331.706, 255.308].into(), [330.382, 255.645].into(), [330.053, 254.754].into());
                pb.cubic_to([329.434, 253.078].into(), [331.19, 252.58].into(), [331.915, 251.297].into());
                pb.cubic_to([332.105, 250.962].into(), [331.852, 250.671].into(), [331.55, 250.577].into());
                pb.cubic_to([331.156, 250.454].into(), [330.404, 250.635].into(), [330.536, 250.201].into());
                pb.cubic_to([331.468, 247.139].into(), [328.825, 246.489].into(), [326.573, 245.942].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([317.365, 227.145].into());
                pb.cubic_to([317.358, 228.812].into(), [315.823, 230.496].into(), [316.982, 232.132].into());
                pb.cubic_to([317.112, 232.004].into(), [317.237, 231.792].into(), [317.366, 231.792].into());
                pb.cubic_to([317.495, 231.792].into(), [317.621, 232.004].into(), [317.75, 232.132].into());
                pb.cubic_to([319.183, 230.007].into(), [322.686, 229.117].into(), [322.549, 226.388].into());
                pb.cubic_to([322.528, 225.959].into(), [321.486, 225.079].into(), [322.353, 224.46].into());
                pb.cubic_to([320.614, 223.167].into(), [320.561, 220.894].into(), [319.668, 219.089].into());
                pb.cubic_to([318.48, 219.364].into(), [317.318, 219.712].into(), [316.215, 220.24].into());
                pb.cubic_to([316.553, 221.665].into(), [316.44, 223.28].into(), [317.227, 224.546].into());
                pb.cubic_to([317.643, 225.216].into(), [317.368, 226.25].into(), [317.365, 227.145].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([157.976, 235.776].into());
                pb.cubic_to([157.976, 235.776].into(), [141.809, 226.056].into(), [155.291, 240.763].into());
                pb.cubic_to([163.73, 249.97].into(), [173.321, 255.34].into(), [173.321, 255.34].into());
                pb.cubic_to([173.321, 255.34].into(), [183.294, 259.561].into(), [186.747, 260.712].into());
                pb.cubic_to([190.199, 261.863].into(), [204.776, 266.849].into(), [207.845, 267.233].into());
                pb.cubic_to([210.914, 267.617].into(), [220.121, 271.453].into(), [226.642, 267.617].into());
                pb.cubic_to([233.163, 263.781].into(), [240.835, 259.561].into(), [240.835, 259.561].into());
                pb.cubic_to([240.835, 259.561].into(), [225.108, 267.617].into(), [221.655, 265.315].into());
                pb.cubic_to([218.203, 263.013].into(), [211.298, 263.397].into(), [205.544, 260.328].into());
                pb.cubic_to([205.544, 260.328].into(), [191.35, 256.108].into(), [188.281, 254.189].into());
                pb.cubic_to([185.212, 252.271].into(), [175.239, 241.147].into(), [173.704, 241.914].into());
                pb.cubic_to([172.17, 242.681].into(), [174.088, 243.065].into(), [175.239, 245.75].into());
                pb.cubic_to([176.389, 248.435].into(), [174.471, 249.97].into(), [166.799, 243.832].into());
                pb.cubic_to([159.127, 237.694].into(), [157.976, 235.776].into(), [157.976, 235.776].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([165.078, 241.499].into());
                pb.cubic_to([165.078, 241.499].into(), [166.43, 254.004].into(), [174.561, 252.408].into());
                pb.cubic_to([174.561, 252.408].into(), [182.45, 256.407].into(), [185.06, 258.294].into());
                pb.cubic_to([185.06, 258.294].into(), [192.865, 259.926].into(), [194.122, 260.518].into());
                pb.cubic_to([211.843, 268.861].into(), [225.959, 264.528].into(), [226.484, 265.602].into());
                pb.cubic_to([227.007, 266.675].into(), [245.828, 259.85].into(), [249.289, 255.931].into());
                pb.cubic_to([249.664, 255.506].into(), [239.477, 261.299].into(), [230.177, 263.112].into());
                pb.cubic_to([222.243, 264.66].into(), [201.526, 262.875].into(), [191.067, 257.566].into());
                pb.cubic_to([188.216, 256.119].into(), [179.638, 250.572].into(), [177.21, 250.679].into());
                pb.cubic_to([174.783, 250.786].into(), [165.078, 241.499].into(), [165.078, 241.499].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([161.429, 216.98].into());
                pb.cubic_to([161.429, 216.98].into(), [146.852, 219.281].into(), [162.963, 220.816].into());
                pb.cubic_to([162.963, 220.816].into(), [180.226, 222.734].into(), [184.062, 227.721].into());
                pb.cubic_to([184.062, 227.721].into(), [197.104, 236.544].into(), [199.79, 236.927].into());
                pb.cubic_to([202.475, 237.311].into(), [231.245, 244.216].into(), [231.629, 246.517].into());
                pb.cubic_to([232.012, 248.819].into(), [237.383, 248.819].into(), [238.917, 248.052].into());
                pb.cubic_to([240.452, 247.285].into(), [239.685, 246.134].into(), [236.999, 245.367].into());
                pb.cubic_to([234.314, 244.599].into(), [204.393, 228.871].into(), [198.255, 227.721].into());
                pb.cubic_to([192.117, 226.57].into(), [180.993, 219.281].into(), [176.389, 218.13].into());
                pb.cubic_to([171.786, 216.98].into(), [161.429, 216.98].into(), [161.429, 216.98].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([180.149, 224.074].into());
                pb.cubic_to([180.149, 224.074].into(), [171.919, 224.869].into(), [180.167, 225.655].into());
                pb.cubic_to([180.167, 225.655].into(), [188.622, 228.939].into(), [190.586, 231.492].into());
                pb.cubic_to([190.586, 231.492].into(), [197.264, 236.01].into(), [198.639, 236.206].into());
                pb.cubic_to([200.014, 236.403].into(), [213.402, 239.938].into(), [213.598, 241.116].into());
                pb.cubic_to([213.795, 242.295].into(), [246.465, 254.36].into(), [250.704, 251.301].into());
                pb.cubic_to([253.495, 249.286].into(), [244.0, 250.894].into(), [234.761, 246.665].into());
                pb.cubic_to([233.462, 246.07].into(), [200.996, 232.081].into(), [197.853, 231.492].into());
                pb.cubic_to([194.711, 230.903].into(), [189.015, 227.171].into(), [186.658, 226.582].into());
                pb.cubic_to([184.301, 225.992].into(), [180.149, 224.074].into(), [180.149, 224.074].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([172.553, 221.967].into());
                pb.cubic_to([172.553, 221.967].into(), [177.54, 222.35].into(), [176.389, 220.816].into());
                pb.cubic_to([175.239, 219.281].into(), [172.937, 220.048].into(), [172.937, 220.048].into());
                pb.line_to([172.553, 221.967].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([165.649, 220.432].into());
                pb.cubic_to([165.649, 220.432].into(), [170.635, 220.816].into(), [169.485, 219.281].into());
                pb.cubic_to([168.334, 217.747].into(), [166.032, 218.514].into(), [166.032, 218.514].into());
                pb.line_to([165.649, 220.432].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([155.675, 218.898].into());
                pb.cubic_to([155.675, 218.898].into(), [160.662, 219.281].into(), [159.511, 217.747].into());
                pb.cubic_to([158.36, 216.212].into(), [156.058, 216.98].into(), [156.058, 216.98].into());
                pb.line_to([155.675, 218.898].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([148.386, 218.13].into());
                pb.cubic_to([148.386, 218.13].into(), [153.373, 218.514].into(), [152.222, 216.98].into());
                pb.cubic_to([151.071, 215.445].into(), [148.77, 216.212].into(), [148.77, 216.212].into());
                pb.line_to([148.386, 218.13].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([185.212, 256.108].into());
                pb.cubic_to([185.212, 256.108].into(), [189.432, 256.108].into(), [188.281, 254.573].into());
                pb.cubic_to([187.13, 253.039].into(), [184.062, 253.422].into(), [184.062, 253.422].into());
                pb.line_to([185.212, 256.108].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([175.622, 250.737].into());
                pb.cubic_to([175.622, 250.737].into(), [181.862, 252.79].into(), [179.458, 249.586].into());
                pb.cubic_to([178.308, 248.052].into(), [176.006, 248.819].into(), [176.006, 248.819].into());
                pb.line_to([175.622, 250.737].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([164.881, 246.134].into());
                pb.cubic_to([164.881, 246.134].into(), [169.868, 246.517].into(), [168.717, 244.983].into());
                pb.cubic_to([167.567, 243.448].into(), [165.265, 244.216].into(), [165.265, 244.216].into());
                pb.line_to([164.881, 246.134].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([157.593, 240.38].into());
                pb.cubic_to([157.593, 240.38].into(), [162.58, 240.763].into(), [161.429, 239.229].into());
                pb.cubic_to([160.278, 237.694].into(), [157.976, 238.462].into(), [157.976, 238.462].into());
                pb.line_to([157.593, 240.38].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([151.071, 235.776].into());
                pb.cubic_to([151.071, 235.776].into(), [156.058, 236.16].into(), [154.908, 234.626].into());
                pb.cubic_to([153.757, 233.091].into(), [151.455, 233.858].into(), [151.455, 233.858].into());
                pb.line_to([151.071, 235.776].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([188.552, 229.642].into());
                pb.cubic_to([188.552, 229.642].into(), [195.189, 230.152].into(), [193.658, 228.11].into());
                pb.cubic_to([192.126, 226.067].into(), [189.062, 227.089].into(), [189.062, 227.089].into());
                pb.line_to([188.552, 229.642].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([198.526, 234.245].into());
                pb.cubic_to([198.526, 234.245].into(), [205.163, 234.755].into(), [203.631, 232.713].into());
                pb.cubic_to([202.1, 230.671].into(), [199.036, 231.692].into(), [199.036, 231.692].into());
                pb.line_to([198.526, 234.245].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([208.883, 238.464].into());
                pb.cubic_to([208.883, 238.464].into(), [215.52, 238.975].into(), [213.989, 236.933].into());
                pb.cubic_to([212.457, 234.89].into(), [209.393, 235.912].into(), [209.393, 235.912].into());
                pb.line_to([208.883, 238.464].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([218.857, 243.068].into());
                pb.cubic_to([218.857, 243.068].into(), [225.494, 243.578].into(), [223.962, 241.536].into());
                pb.cubic_to([222.431, 239.494].into(), [219.367, 240.515].into(), [219.367, 240.515].into());
                pb.line_to([218.857, 243.068].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([192.388, 260.33].into());
                pb.cubic_to([192.388, 260.33].into(), [199.025, 260.84].into(), [197.494, 258.799].into());
                pb.cubic_to([195.962, 256.756].into(), [192.131, 257.01].into(), [192.131, 257.01].into());
                pb.line_to([192.388, 260.33].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([201.978, 263.399].into());
                pb.cubic_to([201.978, 263.399].into(), [208.615, 263.909].into(), [207.084, 261.867].into());
                pb.cubic_to([205.552, 259.825].into(), [201.337, 260.079].into(), [201.337, 260.079].into());
                pb.line_to([201.978, 263.399].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([180.226, 225.035].into());
                pb.cubic_to([180.226, 225.035].into(), [185.212, 225.419].into(), [184.062, 223.885].into());
                pb.cubic_to([182.911, 222.35].into(), [180.609, 223.117].into(), [180.609, 223.117].into());
                pb.line_to([180.226, 225.035].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([110.026, 320.171].into());
                pb.cubic_to([110.026, 320.171].into(), [105.806, 311.731].into(), [105.422, 308.663].into());
                pb.cubic_to([105.422, 308.663].into(), [106.189, 317.102].into(), [107.34, 319.02].into());
                pb.cubic_to([108.491, 320.938].into(), [110.026, 320.171].into(), [110.026, 320.171].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(153,38,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([92.3796, 306.745].into());
                pb.cubic_to([92.3796, 306.745].into(), [89.3108, 292.935].into(), [89.6944, 290.249].into());
                pb.cubic_to([89.6944, 290.249].into(), [88.5435, 301.374].into(), [88.9271, 302.525].into());
                pb.cubic_to([89.3108, 303.676].into(), [92.3796, 306.745].into(), [92.3796, 306.745].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(153,38,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([112.327, 378.287].into());
                pb.line_to([112.135, 375.218].into());
                pb.line_to([110.026, 375.027].into());
                pb.cubic_to([110.026, 375.027].into(), [123.644, 362.943].into(), [124.219, 355.654].into());
                pb.cubic_to([124.219, 355.654].into(), [124.986, 363.518].into(), [112.327, 378.287].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([116.148, 377.074].into());
                pb.cubic_to([115.735, 377.473].into(), [115.945, 378.188].into(), [115.553, 378.437].into());
                pb.cubic_to([114.777, 378.932].into(), [116.798, 378.986].into(), [116.579, 379.673].into());
                pb.cubic_to([116.212, 380.83].into(), [116.391, 380.85].into(), [116.274, 382.073].into());
                pb.cubic_to([116.22, 382.647].into(), [116.784, 384.124].into(), [117.153, 384.546].into());
                pb.cubic_to([118.54, 386.13].into(), [117.27, 388.942].into(), [118.843, 390.429].into());
                pb.cubic_to([119.134, 390.707].into(), [119.495, 391.236].into(), [119.768, 391.637].into());
                pb.cubic_to([120.4, 392.56].into(), [121.536, 393.028].into(), [122.447, 393.822].into());
                pb.cubic_to([122.752, 394.087].into(), [122.559, 394.88].into(), [123.105, 394.792].into());
                pb.cubic_to([123.789, 394.682].into(), [124.979, 394.806].into(), [124.936, 394.0].into());
                pb.cubic_to([124.828, 391.967].into(), [123.553, 390.317].into(), [122.326, 388.718].into());
                pb.cubic_to([122.758, 388.042].into(), [122.319, 387.433].into(), [122.047, 386.899].into());
                pb.cubic_to([120.766, 384.387].into(), [120.948, 381.662].into(), [120.781, 378.938].into());
                pb.cubic_to([120.776, 378.857].into(), [120.482, 378.782].into(), [120.489, 378.731].into());
                pb.cubic_to([120.828, 376.492].into(), [121.388, 374.383].into(), [122.231, 372.245].into());
                pb.cubic_to([122.582, 371.354].into(), [123.034, 370.495].into(), [123.177, 369.606].into());
                pb.cubic_to([123.284, 368.948].into(), [123.383, 368.149].into(), [122.991, 367.473].into());
                pb.cubic_to([124.943, 364.702].into(), [123.688, 362.159].into(), [124.809, 358.773].into());
                pb.cubic_to([125.007, 358.174].into(), [126.63, 356.338].into(), [126.186, 356.493].into());
                pb.cubic_to([123.776, 357.328].into(), [123.668, 357.71].into(), [123.499, 358.432].into());
                pb.cubic_to([123.359, 359.029].into(), [123.042, 360.35].into(), [122.815, 360.927].into());
                pb.cubic_to([122.754, 361.084].into(), [122.59, 362.891].into(), [122.515, 363.008].into());
                pb.cubic_to([121.064, 365.293].into(), [122.366, 365.124].into(), [121.052, 367.385].into());
                pb.cubic_to([119.683, 368.037].into(), [118.756, 369.096].into(), [117.679, 370.21].into());
                pb.cubic_to([117.49, 370.406].into(), [118.586, 371.1].into(), [118.412, 371.305].into());
                pb.cubic_to([117.365, 372.541].into(), [116.259, 373.276].into(), [116.581, 374.708].into());
                pb.cubic_to([116.73, 375.37].into(), [116.861, 376.384].into(), [116.148, 377.074].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([112.711, 375.41].into());
                pb.cubic_to([112.711, 375.41].into(), [113.094, 368.889].into(), [115.396, 367.354].into());
                pb.cubic_to([117.698, 365.82].into(), [116.547, 366.587].into(), [113.478, 367.738].into());
                pb.cubic_to([110.409, 368.889].into(), [111.56, 369.656].into(), [111.56, 369.656].into());
                pb.cubic_to([111.56, 369.656].into(), [108.875, 369.272].into(), [111.176, 367.354].into());
                pb.cubic_to([113.478, 365.436].into(), [116.93, 363.135].into(), [115.396, 363.135].into());
                pb.cubic_to([113.862, 363.135].into(), [106.573, 366.971].into(), [106.573, 369.656].into());
                pb.cubic_to([106.573, 372.341].into(), [105.614, 376.273].into(), [105.614, 376.273].into());
                pb.cubic_to([105.614, 376.273].into(), [106.669, 377.041].into(), [111.272, 376.945].into());
                pb.cubic_to([111.272, 376.945].into(), [112.615, 376.273].into(), [112.711, 375.41].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([111.944, 357.572].into());
                pb.cubic_to([111.944, 357.572].into(), [103.773, 360.249].into(), [86.0501, 356.997].into());
                pb.cubic_to([86.0501, 356.997].into(), [94.711, 358.99].into(), [112.711, 356.805].into());
                pb.cubic_to([122.589, 355.606].into(), [111.944, 357.572].into(), [111.944, 357.572].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([111.944, 357.572].into());
                pb.cubic_to([111.944, 357.572].into(), [103.773, 360.249].into(), [86.0501, 356.997].into());
                pb.cubic_to([86.0501, 356.997].into(), [94.711, 358.99].into(), [112.711, 356.805].into());
                pb.cubic_to([122.589, 355.606].into(), [111.944, 357.572].into(), [111.944, 357.572].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([113.956, 357.641].into());
                pb.cubic_to([113.956, 357.641].into(), [106.048, 361.014].into(), [88.1091, 359.306].into());
                pb.cubic_to([88.1091, 359.306].into(), [96.911, 360.543].into(), [114.654, 356.81].into());
                pb.cubic_to([124.392, 354.762].into(), [113.956, 357.641].into(), [113.956, 357.641].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([113.956, 357.641].into());
                pb.cubic_to([113.956, 357.641].into(), [106.048, 361.014].into(), [88.1091, 359.306].into());
                pb.cubic_to([88.1091, 359.306].into(), [96.911, 360.543].into(), [114.654, 356.81].into());
                pb.cubic_to([124.392, 354.762].into(), [113.956, 357.641].into(), [113.956, 357.641].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([115.67, 357.551].into());
                pb.cubic_to([115.67, 357.551].into(), [108.035, 361.503].into(), [90.0195, 361.134].into());
                pb.cubic_to([90.0195, 361.134].into(), [98.8885, 361.714].into(), [116.305, 356.671].into());
                pb.cubic_to([125.863, 353.904].into(), [115.67, 357.551].into(), [115.67, 357.551].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([115.67, 357.551].into());
                pb.cubic_to([115.67, 357.551].into(), [108.035, 361.503].into(), [90.0195, 361.134].into());
                pb.cubic_to([90.0195, 361.134].into(), [98.8885, 361.714].into(), [116.305, 356.671].into());
                pb.cubic_to([125.863, 353.904].into(), [115.67, 357.551].into(), [115.67, 357.551].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([116.888, 357.338].into());
                pb.cubic_to([116.888, 357.338].into(), [110.344, 361.468].into(), [94.1615, 362.521].into());
                pb.cubic_to([94.1615, 362.521].into(), [102.159, 362.358].into(), [117.389, 356.499].into());
                pb.cubic_to([125.748, 353.284].into(), [116.888, 357.338].into(), [116.888, 357.338].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([116.888, 357.338].into());
                pb.cubic_to([116.888, 357.338].into(), [110.344, 361.468].into(), [94.1615, 362.521].into());
                pb.cubic_to([94.1615, 362.521].into(), [102.159, 362.358].into(), [117.389, 356.499].into());
                pb.cubic_to([125.748, 353.284].into(), [116.888, 357.338].into(), [116.888, 357.338].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([227.448, 347.253].into());
                pb.cubic_to([227.448, 347.253].into(), [226.556, 346.635].into(), [226.761, 347.767].into());
                pb.cubic_to([226.967, 348.9].into(), [254.019, 361.53].into(), [257.485, 361.291].into());
                pb.cubic_to([257.485, 361.291].into(), [228.477, 348.626].into(), [227.448, 347.253].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([227.448, 347.253].into());
                pb.cubic_to([227.448, 347.253].into(), [226.556, 346.635].into(), [226.761, 347.767].into());
                pb.cubic_to([226.967, 348.9].into(), [254.019, 361.53].into(), [257.485, 361.291].into());
                pb.cubic_to([257.485, 361.291].into(), [228.477, 348.626].into(), [227.448, 347.253].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([224.193, 346.64].into());
                pb.cubic_to([224.193, 346.64].into(), [223.353, 345.954].into(), [223.469, 347.099].into());
                pb.cubic_to([223.585, 348.244].into(), [249.562, 362.96].into(), [253.035, 362.993].into());
                pb.cubic_to([253.035, 362.993].into(), [225.111, 348.089].into(), [224.193, 346.64].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([224.193, 346.64].into());
                pb.cubic_to([224.193, 346.64].into(), [223.353, 345.954].into(), [223.469, 347.099].into());
                pb.cubic_to([223.585, 348.244].into(), [249.562, 362.96].into(), [253.035, 362.993].into());
                pb.cubic_to([253.035, 362.993].into(), [225.111, 348.089].into(), [224.193, 346.64].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([221.041, 345.321].into());
                pb.cubic_to([221.041, 345.321].into(), [220.247, 344.581].into(), [220.288, 345.731].into());
                pb.cubic_to([220.328, 346.881].into(), [239.333, 361.743].into(), [248.743, 363.54].into());
                pb.cubic_to([248.743, 363.54].into(), [231.451, 355.747].into(), [221.041, 345.321].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([221.041, 345.321].into());
                pb.cubic_to([221.041, 345.321].into(), [220.247, 344.581].into(), [220.288, 345.731].into());
                pb.cubic_to([220.328, 346.881].into(), [239.333, 361.743].into(), [248.743, 363.54].into());
                pb.cubic_to([248.743, 363.54].into(), [231.451, 355.747].into(), [221.041, 345.321].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([218.283, 343.534].into());
                pb.cubic_to([218.283, 343.534].into(), [217.569, 342.869].into(), [217.605, 343.904].into());
                pb.cubic_to([217.642, 344.939].into(), [234.745, 358.315].into(), [243.214, 359.932].into());
                pb.cubic_to([243.214, 359.932].into(), [227.653, 352.917].into(), [218.283, 343.534].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([218.283, 343.534].into());
                pb.cubic_to([218.283, 343.534].into(), [217.569, 342.869].into(), [217.605, 343.904].into());
                pb.cubic_to([217.642, 344.939].into(), [234.745, 358.315].into(), [243.214, 359.932].into());
                pb.cubic_to([243.214, 359.932].into(), [227.653, 352.917].into(), [218.283, 343.534].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([187.898, 201.635].into());
                pb.cubic_to([187.898, 201.635].into(), [173.321, 203.937].into(), [189.432, 205.471].into());
                pb.cubic_to([189.432, 205.471].into(), [206.694, 207.389].into(), [210.53, 212.376].into());
                pb.cubic_to([210.53, 212.376].into(), [223.573, 221.199].into(), [226.258, 221.583].into());
                pb.cubic_to([228.944, 221.967].into(), [244.672, 225.419].into(), [245.055, 227.721].into());
                pb.cubic_to([245.439, 230.022].into(), [251.193, 232.324].into(), [252.727, 231.557].into());
                pb.cubic_to([254.262, 230.789].into(), [254.262, 221.967].into(), [251.576, 221.199].into());
                pb.cubic_to([248.891, 220.432].into(), [230.862, 213.527].into(), [224.724, 212.376].into());
                pb.cubic_to([218.586, 211.226].into(), [207.462, 203.937].into(), [202.858, 202.786].into());
                pb.cubic_to([198.255, 201.635].into(), [187.898, 201.635].into(), [187.898, 201.635].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([257.906, 237.503].into());
                pb.cubic_to([257.906, 237.503].into(), [255.029, 235.968].into(), [253.878, 233.475].into());
                pb.cubic_to([253.878, 233.475].into(), [247.74, 223.309].into(), [234.122, 220.24].into());
                pb.cubic_to([234.122, 220.24].into(), [212.065, 211.609].into(), [204.585, 209.691].into());
                pb.cubic_to([204.585, 209.691].into(), [191.734, 204.896].into(), [184.637, 205.663].into());
                pb.cubic_to([184.637, 205.663].into(), [177.924, 205.471].into(), [183.87, 203.937].into());
                pb.cubic_to([183.87, 203.937].into(), [203.242, 205.855].into(), [206.503, 207.581].into());
                pb.cubic_to([206.503, 207.581].into(), [221.463, 212.568].into(), [224.34, 215.062].into());
                pb.cubic_to([227.217, 217.555].into(), [244.672, 222.35].into(), [246.781, 224.268].into());
                pb.cubic_to([248.891, 226.186].into(), [258.29, 234.242].into(), [257.906, 237.503].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([201.594, 207.284].into());
                pb.cubic_to([201.594, 207.284].into(), [206.609, 207.501].into(), [205.503, 206.015].into());
                pb.cubic_to([204.398, 204.529].into(), [202.05, 205.367].into(), [202.05, 205.367].into());
                pb.line_to([201.594, 207.284].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([194.688, 205.987].into());
                pb.cubic_to([194.688, 205.987].into(), [199.701, 206.204].into(), [198.596, 204.719].into());
                pb.cubic_to([197.491, 203.232].into(), [195.143, 204.069].into(), [195.143, 204.069].into());
                pb.line_to([194.688, 205.987].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([184.686, 204.791].into());
                pb.cubic_to([184.686, 204.791].into(), [189.701, 205.008].into(), [188.595, 203.522].into());
                pb.cubic_to([187.489, 202.036].into(), [185.141, 202.873].into(), [185.141, 202.873].into());
                pb.line_to([184.686, 204.791].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([177.365, 204.269].into());
                pb.cubic_to([177.365, 204.269].into(), [182.38, 204.486].into(), [181.274, 203.0].into());
                pb.cubic_to([180.168, 201.514].into(), [177.82, 202.352].into(), [177.82, 202.352].into());
                pb.line_to([177.365, 204.269].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([217.45, 214.379].into());
                pb.cubic_to([217.45, 214.379].into(), [224.125, 214.667].into(), [222.652, 212.69].into());
                pb.cubic_to([221.181, 210.712].into(), [218.056, 211.827].into(), [218.056, 211.827].into());
                pb.line_to([217.45, 214.379].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([227.342, 218.622].into());
                pb.cubic_to([227.342, 218.622].into(), [233.057, 221.788].into(), [232.545, 216.934].into());
                pb.cubic_to([232.286, 214.482].into(), [227.948, 216.07].into(), [227.948, 216.07].into());
                pb.line_to([227.342, 218.622].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([236.1, 221.321].into());
                pb.cubic_to([236.1, 221.321].into(), [242.965, 224.87].into(), [241.302, 219.632].into());
                pb.cubic_to([240.556, 217.283].into(), [236.705, 218.769].into(), [236.705, 218.769].into());
                pb.line_to([236.1, 221.321].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([245.224, 225.948].into());
                pb.cubic_to([245.224, 225.948].into(), [249.404, 230.649].into(), [250.427, 224.26].into());
                pb.cubic_to([250.816, 221.826].into(), [245.83, 223.396].into(), [245.83, 223.396].into());
                pb.line_to([245.224, 225.948].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([209.22, 210.079].into());
                pb.cubic_to([209.22, 210.079].into(), [214.234, 210.296].into(), [213.129, 208.81].into());
                pb.cubic_to([212.024, 207.324].into(), [209.675, 208.161].into(), [209.675, 208.161].into());
                pb.line_to([209.22, 210.079].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([243.361, 326.497].into());
                pb.cubic_to([243.361, 326.497].into(), [242.665, 325.86].into(), [242.664, 326.887].into());
                pb.cubic_to([242.664, 327.913].into(), [259.432, 340.633].into(), [267.912, 341.961].into());
                pb.cubic_to([267.912, 341.961].into(), [252.473, 335.507].into(), [243.361, 326.497].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([243.361, 326.497].into());
                pb.cubic_to([243.361, 326.497].into(), [242.665, 325.86].into(), [242.664, 326.887].into());
                pb.cubic_to([242.664, 327.913].into(), [259.432, 340.633].into(), [267.912, 341.961].into());
                pb.cubic_to([267.912, 341.961].into(), [252.473, 335.507].into(), [243.361, 326.497].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([246.206, 265.315].into());
                pb.cubic_to([246.206, 265.315].into(), [267.305, 243.832].into(), [276.128, 240.38].into());
                pb.cubic_to([276.128, 240.38].into(), [284.951, 229.639].into(), [281.115, 204.704].into());
                pb.cubic_to([281.115, 204.704].into(), [278.046, 197.416].into(), [274.977, 217.363].into());
                pb.cubic_to([274.977, 217.363].into(), [278.046, 241.53].into(), [267.305, 226.186].into());
                pb.cubic_to([267.305, 226.186].into(), [259.249, 235.68].into(), [265.386, 235.393].into());
                pb.cubic_to([265.386, 235.393].into(), [268.456, 233.475].into(), [268.84, 235.009].into());
                pb.cubic_to([269.223, 236.544].into(), [261.55, 249.586].into(), [245.055, 263.397].into());
                pb.cubic_to([228.56, 277.207].into(), [246.206, 265.315].into(), [246.206, 265.315].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([190.199, 228.104].into());
                pb.cubic_to([190.199, 228.104].into(), [190.008, 229.83].into(), [191.734, 229.063].into());
                pb.cubic_to([193.46, 228.296].into(), [283.8, 222.35].into(), [314.105, 199.334].into());
                pb.cubic_to([314.105, 199.334].into(), [270.758, 221.583].into(), [190.199, 228.104].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([190.199, 228.104].into());
                pb.cubic_to([190.199, 228.104].into(), [190.008, 229.83].into(), [191.734, 229.063].into());
                pb.cubic_to([193.46, 228.296].into(), [283.8, 222.35].into(), [314.105, 199.334].into());
                pb.cubic_to([314.105, 199.334].into(), [270.758, 221.583].into(), [190.199, 228.104].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([200.173, 232.324].into());
                pb.cubic_to([200.173, 232.324].into(), [199.981, 234.05].into(), [201.708, 233.283].into());
                pb.cubic_to([202.816, 232.79].into(), [257.27, 233.01].into(), [302.076, 224.993].into());
                pb.cubic_to([327.021, 220.53].into(), [348.975, 213.515].into(), [357.069, 202.403].into());
                pb.cubic_to([357.069, 202.403].into(), [347.485, 213.381].into(), [299.658, 222.301].into());
                pb.cubic_to([276.524, 226.615].into(), [244.444, 230.448].into(), [200.173, 232.324].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([200.173, 232.324].into());
                pb.cubic_to([200.173, 232.324].into(), [199.981, 234.05].into(), [201.708, 233.283].into());
                pb.cubic_to([202.816, 232.79].into(), [257.27, 233.01].into(), [302.076, 224.993].into());
                pb.cubic_to([327.021, 220.53].into(), [348.975, 213.515].into(), [357.069, 202.403].into());
                pb.cubic_to([357.069, 202.403].into(), [347.485, 213.381].into(), [299.658, 222.301].into());
                pb.cubic_to([276.524, 226.615].into(), [244.444, 230.448].into(), [200.173, 232.324].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([211.298, 236.16].into());
                pb.cubic_to([211.298, 236.16].into(), [211.106, 237.886].into(), [212.832, 237.119].into());
                pb.cubic_to([213.821, 236.679].into(), [268.848, 240.585].into(), [319.916, 238.155].into());
                pb.cubic_to([357.968, 236.343].into(), [393.822, 231.014].into(), [403.486, 217.747].into());
                pb.cubic_to([403.486, 217.747].into(), [398.309, 231.551].into(), [318.567, 235.87].into());
                pb.cubic_to([291.967, 237.31].into(), [257.069, 237.695].into(), [211.298, 236.16].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([211.298, 236.16].into());
                pb.cubic_to([211.298, 236.16].into(), [211.106, 237.886].into(), [212.832, 237.119].into());
                pb.cubic_to([213.821, 236.679].into(), [268.848, 240.585].into(), [319.916, 238.155].into());
                pb.cubic_to([357.968, 236.343].into(), [393.822, 231.014].into(), [403.486, 217.747].into());
                pb.cubic_to([403.486, 217.747].into(), [398.309, 231.551].into(), [318.567, 235.87].into());
                pb.cubic_to([291.967, 237.31].into(), [257.069, 237.695].into(), [211.298, 236.16].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([220.888, 240.763].into());
                pb.cubic_to([220.888, 240.763].into(), [220.696, 242.489].into(), [222.422, 241.722].into());
                pb.cubic_to([223.503, 241.242].into(), [269.876, 255.583].into(), [309.945, 258.735].into());
                pb.cubic_to([333.853, 260.616].into(), [355.516, 258.513].into(), [363.974, 246.901].into());
                pb.cubic_to([363.974, 246.901].into(), [357.806, 258.226].into(), [310.703, 255.296].into());
                pb.cubic_to([289.82, 253.997].into(), [260.892, 249.895].into(), [220.888, 240.763].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([220.888, 240.763].into());
                pb.cubic_to([220.888, 240.763].into(), [220.696, 242.489].into(), [222.422, 241.722].into());
                pb.cubic_to([223.503, 241.242].into(), [269.876, 255.583].into(), [309.945, 258.735].into());
                pb.cubic_to([333.853, 260.616].into(), [355.516, 258.513].into(), [363.974, 246.901].into());
                pb.cubic_to([363.974, 246.901].into(), [357.806, 258.226].into(), [310.703, 255.296].into());
                pb.cubic_to([289.82, 253.997].into(), [260.892, 249.895].into(), [220.888, 240.763].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([165.265, 218.898].into());
                pb.cubic_to([165.265, 218.898].into(), [165.073, 220.624].into(), [166.799, 219.857].into());
                pb.cubic_to([168.526, 219.089].into(), [185.596, 216.98].into(), [187.514, 179.77].into());
                pb.cubic_to([187.514, 179.77].into(), [180.609, 220.048].into(), [165.265, 218.898].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([165.265, 218.898].into());
                pb.cubic_to([165.265, 218.898].into(), [165.073, 220.624].into(), [166.799, 219.857].into());
                pb.cubic_to([168.526, 219.089].into(), [185.596, 216.98].into(), [187.514, 179.77].into());
                pb.cubic_to([187.514, 179.77].into(), [180.609, 220.048].into(), [165.265, 218.898].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([156.826, 217.363].into());
                pb.cubic_to([156.826, 217.363].into(), [156.634, 219.089].into(), [158.36, 218.322].into());
                pb.cubic_to([160.086, 217.555].into(), [173.704, 221.967].into(), [171.019, 184.757].into());
                pb.cubic_to([171.019, 184.757].into(), [172.17, 218.514].into(), [156.826, 217.363].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([156.826, 217.363].into());
                pb.cubic_to([156.826, 217.363].into(), [156.634, 219.089].into(), [158.36, 218.322].into());
                pb.cubic_to([160.086, 217.555].into(), [173.704, 221.967].into(), [171.019, 184.757].into());
                pb.cubic_to([171.019, 184.757].into(), [172.17, 218.514].into(), [156.826, 217.363].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([149.153, 216.98].into());
                pb.cubic_to([149.153, 216.98].into(), [148.962, 218.706].into(), [150.688, 217.939].into());
                pb.cubic_to([152.414, 217.171].into(), [167.183, 216.596].into(), [155.291, 195.114].into());
                pb.cubic_to([155.291, 195.114].into(), [164.498, 218.13].into(), [149.153, 216.98].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([149.153, 216.98].into());
                pb.cubic_to([149.153, 216.98].into(), [148.962, 218.706].into(), [150.688, 217.939].into());
                pb.cubic_to([152.414, 217.171].into(), [167.183, 216.596].into(), [155.291, 195.114].into());
                pb.cubic_to([155.291, 195.114].into(), [164.498, 218.13].into(), [149.153, 216.98].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([194.54, 259.499].into());
                pb.cubic_to([194.54, 259.499].into(), [194.114, 257.581].into(), [195.6, 258.749].into());
                pb.cubic_to([207.583, 268.164].into(), [229.061, 304.417].into(), [263.134, 322.615].into());
                pb.cubic_to([272.877, 327.819].into(), [283.65, 331.546].into(), [295.524, 332.747].into());
                pb.cubic_to([295.717, 332.555].into(), [285.179, 335.804].into(), [264.995, 325.967].into());
                pb.cubic_to([247.812, 317.591].into(), [224.184, 298.655].into(), [194.54, 259.499].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([194.54, 259.499].into());
                pb.cubic_to([194.54, 259.499].into(), [194.114, 257.581].into(), [195.6, 258.749].into());
                pb.cubic_to([207.583, 268.164].into(), [229.061, 304.417].into(), [263.134, 322.615].into());
                pb.cubic_to([272.877, 327.819].into(), [283.65, 331.546].into(), [295.524, 332.747].into());
                pb.cubic_to([295.717, 332.555].into(), [285.179, 335.804].into(), [264.995, 325.967].into());
                pb.cubic_to([247.812, 317.591].into(), [224.184, 298.655].into(), [194.54, 259.499].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([205.281, 261.225].into());
                pb.cubic_to([205.281, 261.225].into(), [203.974, 262.369].into(), [205.765, 262.968].into());
                pb.cubic_to([207.557, 263.568].into(), [315.39, 333.098].into(), [353.065, 325.459].into());
                pb.cubic_to([353.065, 325.459].into(), [327.069, 332.661].into(), [205.281, 261.225].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([205.281, 261.225].into());
                pb.cubic_to([205.281, 261.225].into(), [203.974, 262.369].into(), [205.765, 262.968].into());
                pb.cubic_to([207.557, 263.568].into(), [315.39, 333.098].into(), [353.065, 325.459].into());
                pb.cubic_to([353.065, 325.459].into(), [327.069, 332.661].into(), [205.281, 261.225].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([185.294, 255.373].into());
                pb.cubic_to([185.294, 255.373].into(), [184.806, 253.839].into(), [186.447, 254.775].into());
                pb.cubic_to([193.678, 258.901].into(), [197.281, 298.288].into(), [223.031, 311.488].into());
                pb.cubic_to([227.931, 314.0].into(), [233.632, 315.563].into(), [240.312, 315.756].into());
                pb.cubic_to([240.312, 315.756].into(), [231.058, 319.957].into(), [218.76, 311.673].into());
                pb.cubic_to([208.52, 304.775].into(), [196.169, 289.22].into(), [185.294, 255.373].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([185.294, 255.373].into());
                pb.cubic_to([185.294, 255.373].into(), [184.806, 253.839].into(), [186.447, 254.775].into());
                pb.cubic_to([193.678, 258.901].into(), [197.281, 298.288].into(), [223.031, 311.488].into());
                pb.cubic_to([227.931, 314.0].into(), [233.632, 315.563].into(), [240.312, 315.756].into());
                pb.cubic_to([240.312, 315.756].into(), [231.058, 319.957].into(), [218.76, 311.673].into());
                pb.cubic_to([208.52, 304.775].into(), [196.169, 289.22].into(), [185.294, 255.373].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([166.187, 244.799].into());
                pb.cubic_to([166.187, 244.799].into(), [165.155, 243.565].into(), [167.028, 243.809].into());
                pb.cubic_to([176.854, 245.087].into(), [197.381, 284.666].into(), [239.999, 279.795].into());
                pb.cubic_to([239.999, 279.795].into(), [209.343, 293.553].into(), [166.187, 244.799].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([166.187, 244.799].into());
                pb.cubic_to([166.187, 244.799].into(), [165.155, 243.565].into(), [167.028, 243.809].into());
                pb.cubic_to([176.854, 245.087].into(), [197.381, 284.666].into(), [239.999, 279.795].into());
                pb.cubic_to([239.999, 279.795].into(), [209.343, 293.553].into(), [166.187, 244.799].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([176.965, 250.674].into());
                pb.cubic_to([176.965, 250.674].into(), [176.187, 249.265].into(), [177.98, 249.864].into());
                pb.cubic_to([187.377, 253.004].into(), [199.925, 295.788].into(), [242.685, 299.189].into());
                pb.cubic_to([242.685, 299.189].into(), [209.958, 306.807].into(), [176.965, 250.674].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([176.965, 250.674].into());
                pb.cubic_to([176.965, 250.674].into(), [176.187, 249.265].into(), [177.98, 249.864].into());
                pb.cubic_to([187.377, 253.004].into(), [199.925, 295.788].into(), [242.685, 299.189].into());
                pb.cubic_to([242.685, 299.189].into(), [209.958, 306.807].into(), [176.965, 250.674].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([159.436, 239.89].into());
                pb.cubic_to([159.436, 239.89].into(), [158.599, 238.89].into(), [160.116, 239.088].into());
                pb.cubic_to([168.075, 240.123].into(), [184.702, 272.182].into(), [219.223, 268.236].into());
                pb.cubic_to([219.223, 268.236].into(), [194.391, 279.38].into(), [159.436, 239.89].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([159.436, 239.89].into());
                pb.cubic_to([159.436, 239.89].into(), [158.599, 238.89].into(), [160.116, 239.088].into());
                pb.cubic_to([168.075, 240.123].into(), [184.702, 272.182].into(), [219.223, 268.236].into());
                pb.cubic_to([219.223, 268.236].into(), [194.391, 279.38].into(), [159.436, 239.89].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([152.148, 234.223].into());
                pb.cubic_to([152.148, 234.223].into(), [151.185, 233.221].into(), [152.71, 233.334].into());
                pb.cubic_to([156.708, 233.63].into(), [186.09, 265.353].into(), [203.801, 250.487].into());
                pb.cubic_to([203.801, 250.487].into(), [192.278, 268.442].into(), [152.148, 234.223].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([152.148, 234.223].into());
                pb.cubic_to([152.148, 234.223].into(), [151.185, 233.221].into(), [152.71, 233.334].into());
                pb.cubic_to([156.708, 233.63].into(), [186.09, 265.353].into(), [203.801, 250.487].into());
                pb.cubic_to([203.801, 250.487].into(), [192.278, 268.442].into(), [152.148, 234.223].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([218.831, 264.837].into());
                pb.cubic_to([218.831, 264.837].into(), [217.679, 266.137].into(), [219.532, 266.506].into());
                pb.cubic_to([221.385, 266.874].into(), [337.141, 322.222].into(), [373.548, 309.883].into());
                pb.cubic_to([373.548, 309.883].into(), [348.67, 320.312].into(), [218.831, 264.837].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([218.831, 264.837].into());
                pb.cubic_to([218.831, 264.837].into(), [217.679, 266.137].into(), [219.532, 266.506].into());
                pb.cubic_to([221.385, 266.874].into(), [337.141, 322.222].into(), [373.548, 309.883].into());
                pb.cubic_to([373.548, 309.883].into(), [348.67, 320.312].into(), [218.831, 264.837].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([186.747, 203.17].into());
                pb.cubic_to([186.747, 203.17].into(), [186.555, 204.896].into(), [188.281, 204.129].into());
                pb.cubic_to([190.008, 203.362].into(), [204.776, 202.786].into(), [192.885, 181.304].into());
                pb.cubic_to([192.885, 181.304].into(), [202.091, 204.321].into(), [186.747, 203.17].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([186.747, 203.17].into());
                pb.cubic_to([186.747, 203.17].into(), [186.555, 204.896].into(), [188.281, 204.129].into());
                pb.cubic_to([190.008, 203.362].into(), [204.776, 202.786].into(), [192.885, 181.304].into());
                pb.cubic_to([192.885, 181.304].into(), [202.091, 204.321].into(), [186.747, 203.17].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([196.721, 204.704].into());
                pb.cubic_to([196.721, 204.704].into(), [196.529, 206.43].into(), [198.255, 205.663].into());
                pb.cubic_to([199.981, 204.896].into(), [217.052, 202.786].into(), [218.97, 165.576].into());
                pb.cubic_to([218.97, 165.576].into(), [212.065, 205.855].into(), [196.721, 204.704].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([196.721, 204.704].into());
                pb.cubic_to([196.721, 204.704].into(), [196.529, 206.43].into(), [198.255, 205.663].into());
                pb.cubic_to([199.981, 204.896].into(), [217.052, 202.786].into(), [218.97, 165.576].into());
                pb.cubic_to([218.97, 165.576].into(), [212.065, 205.855].into(), [196.721, 204.704].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([203.242, 206.239].into());
                pb.cubic_to([203.242, 206.239].into(), [203.05, 207.965].into(), [204.776, 207.198].into());
                pb.cubic_to([206.503, 206.43].into(), [230.094, 203.17].into(), [252.727, 172.098].into());
                pb.cubic_to([252.727, 172.098].into(), [218.586, 207.389].into(), [203.242, 206.239].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([203.242, 206.239].into());
                pb.cubic_to([203.242, 206.239].into(), [203.05, 207.965].into(), [204.776, 207.198].into());
                pb.cubic_to([206.503, 206.43].into(), [230.094, 203.17].into(), [252.727, 172.098].into());
                pb.cubic_to([252.727, 172.098].into(), [218.586, 207.389].into(), [203.242, 206.239].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([210.554, 208.184].into());
                pb.cubic_to([210.554, 208.184].into(), [210.135, 209.87].into(), [211.948, 209.339].into());
                pb.cubic_to([213.76, 208.808].into(), [233.357, 210.629].into(), [269.893, 177.854].into());
                pb.cubic_to([269.893, 177.854].into(), [225.61, 211.365].into(), [210.554, 208.184].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([210.554, 208.184].into());
                pb.cubic_to([210.554, 208.184].into(), [210.135, 209.87].into(), [211.948, 209.339].into());
                pb.cubic_to([213.76, 208.808].into(), [233.357, 210.629].into(), [269.893, 177.854].into());
                pb.cubic_to([269.893, 177.854].into(), [225.61, 211.365].into(), [210.554, 208.184].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([220.528, 212.404].into());
                pb.cubic_to([220.528, 212.404].into(), [220.109, 214.09].into(), [221.922, 213.559].into());
                pb.cubic_to([223.734, 213.028].into(), [257.141, 208.711].into(), [306.719, 175.168].into());
                pb.cubic_to([306.719, 175.168].into(), [235.584, 215.584].into(), [220.528, 212.404].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([220.528, 212.404].into());
                pb.cubic_to([220.528, 212.404].into(), [220.109, 214.09].into(), [221.922, 213.559].into());
                pb.cubic_to([223.734, 213.028].into(), [257.141, 208.711].into(), [306.719, 175.168].into());
                pb.cubic_to([306.719, 175.168].into(), [235.584, 215.584].into(), [220.528, 212.404].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([181.76, 223.501].into());
                pb.cubic_to([181.76, 223.501].into(), [181.568, 225.227].into(), [183.294, 224.46].into());
                pb.cubic_to([185.021, 223.693].into(), [236.232, 221.199].into(), [265.386, 195.498].into());
                pb.cubic_to([265.386, 195.498].into(), [231.916, 219.257].into(), [181.76, 223.501].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([181.76, 223.501].into());
                pb.cubic_to([181.76, 223.501].into(), [181.568, 225.227].into(), [183.294, 224.46].into());
                pb.cubic_to([185.021, 223.693].into(), [236.232, 221.199].into(), [265.386, 195.498].into());
                pb.cubic_to([265.386, 195.498].into(), [231.916, 219.257].into(), [181.76, 223.501].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([172.17, 219.665].into());
                pb.cubic_to([172.17, 219.665].into(), [171.978, 221.391].into(), [173.704, 220.624].into());
                pb.cubic_to([175.43, 219.857].into(), [199.022, 216.596].into(), [221.655, 185.524].into());
                pb.cubic_to([221.655, 185.524].into(), [187.514, 220.816].into(), [172.17, 219.665].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([172.17, 219.665].into());
                pb.cubic_to([172.17, 219.665].into(), [171.978, 221.391].into(), [173.704, 220.624].into());
                pb.cubic_to([175.43, 219.857].into(), [199.022, 216.596].into(), [221.655, 185.524].into());
                pb.cubic_to([221.655, 185.524].into(), [187.514, 220.816].into(), [172.17, 219.665].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([230.96, 216.825].into());
                pb.cubic_to([230.96, 216.825].into(), [230.419, 218.476].into(), [232.266, 218.079].into());
                pb.cubic_to([234.113, 217.683].into(), [267.745, 215.826].into(), [319.648, 186.006].into());
                pb.cubic_to([319.648, 186.006].into(), [245.167, 218.991].into(), [230.96, 216.825].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([230.96, 216.825].into());
                pb.cubic_to([230.96, 216.825].into(), [230.419, 218.476].into(), [232.266, 218.079].into());
                pb.cubic_to([234.113, 217.683].into(), [267.745, 215.826].into(), [319.648, 186.006].into());
                pb.cubic_to([319.648, 186.006].into(), [245.167, 218.991].into(), [230.96, 216.825].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([239.016, 219.127].into());
                pb.cubic_to([239.016, 219.127].into(), [238.474, 220.777].into(), [240.321, 220.38].into());
                pb.cubic_to([242.168, 219.984].into(), [275.801, 218.128].into(), [327.704, 188.308].into());
                pb.cubic_to([327.704, 188.308].into(), [253.798, 221.676].into(), [239.016, 219.127].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([239.016, 219.127].into());
                pb.cubic_to([239.016, 219.127].into(), [238.474, 220.777].into(), [240.321, 220.38].into());
                pb.cubic_to([242.168, 219.984].into(), [275.801, 218.128].into(), [327.704, 188.308].into());
                pb.cubic_to([327.704, 188.308].into(), [253.798, 221.676].into(), [239.016, 219.127].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([248.223, 223.922].into());
                pb.cubic_to([248.223, 223.922].into(), [247.681, 225.572].into(), [249.528, 225.175].into());
                pb.cubic_to([250.7, 224.924].into(), [267.774, 223.156].into(), [302.1, 213.485].into());
                pb.cubic_to([321.847, 207.922].into(), [347.303, 199.743].into(), [378.725, 187.732].into());
                pb.cubic_to([378.725, 187.732].into(), [346.442, 198.539].into(), [313.801, 208.362].into());
                pb.cubic_to([284.642, 217.136].into(), [255.197, 225.125].into(), [248.223, 223.922].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(255,255,255, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([248.223, 223.922].into());
                pb.cubic_to([248.223, 223.922].into(), [247.681, 225.572].into(), [249.528, 225.175].into());
                pb.cubic_to([250.7, 224.924].into(), [267.774, 223.156].into(), [302.1, 213.485].into());
                pb.cubic_to([321.847, 207.922].into(), [347.303, 199.743].into(), [378.725, 187.732].into());
                pb.cubic_to([378.725, 187.732].into(), [346.442, 198.539].into(), [313.801, 208.362].into());
                pb.cubic_to([284.642, 217.136].into(), [255.197, 225.125].into(), [248.223, 223.922].into());
            });
            let _ = p;

            let p = cb.build_path(|pb| {
                pb.move_to([141.481, 217.363].into());
                pb.cubic_to([141.481, 217.363].into(), [146.468, 217.747].into(), [145.317, 216.212].into());
                pb.cubic_to([144.167, 214.678].into(), [141.865, 215.445].into(), [141.865, 215.445].into());
                pb.line_to([141.481, 217.363].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([171.019, 203.937].into());
                pb.cubic_to([171.019, 203.937].into(), [176.006, 204.321].into(), [174.855, 202.786].into());
                pb.cubic_to([173.704, 201.252].into(), [171.403, 202.019].into(), [171.403, 202.019].into());
                pb.line_to([171.019, 203.937].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([162.58, 204.321].into());
                pb.cubic_to([162.58, 204.321].into(), [167.567, 204.704].into(), [166.416, 203.17].into());
                pb.cubic_to([165.265, 201.635].into(), [162.963, 202.403].into(), [162.963, 202.403].into());
                pb.line_to([162.58, 204.321].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([71.1192, 215.655].into());
                pb.cubic_to([71.1192, 215.655].into(), [75.9574, 214.386].into(), [74.3673, 213.313].into());
                pb.cubic_to([72.7783, 212.239].into(), [70.8535, 213.718].into(), [70.8535, 213.718].into());
                pb.line_to([71.1192, 215.655].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([73.0372, 224.862].into());
                pb.cubic_to([73.0372, 224.862].into(), [77.8754, 223.593].into(), [76.2854, 222.52].into());
                pb.cubic_to([74.6963, 221.446].into(), [72.7715, 222.925].into(), [72.7715, 222.925].into());
                pb.line_to([73.0372, 224.862].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([66.1323, 229.081].into());
                pb.cubic_to([66.1323, 229.081].into(), [70.9705, 227.813].into(), [69.3805, 226.74].into());
                pb.cubic_to([67.7914, 225.665].into(), [65.8666, 227.144].into(), [65.8666, 227.144].into());
                pb.line_to([66.1323, 229.081].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(0,0,0, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([142.632, 157.137].into());
                pb.cubic_to([142.632, 157.137].into(), [141.098, 157.137].into(), [137.262, 155.219].into());
                pb.cubic_to([135.344, 155.219].into(), [124.603, 151.766].into(), [119.232, 142.176].into());
                pb.cubic_to([119.232, 142.176].into(), [131.124, 151.383].into(), [142.632, 157.137].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([226.753, 68.288].into());
                pb.cubic_to([226.888, 68.04].into(), [226.941, 67.638].into(), [227.221, 67.621].into());
                pb.cubic_to([227.852, 67.583].into(), [229.035, 67.294].into(), [228.915, 67.904].into());
                pb.cubic_to([228.102, 72.034].into(), [227.263, 76.768].into(), [223.3, 78.501].into());
                pb.cubic_to([222.687, 78.769].into(), [221.304, 78.373].into(), [221.233, 77.525].into());
                pb.cubic_to([221.111, 76.064].into(), [220.999, 74.77].into(), [221.295, 73.364].into());
                pb.cubic_to([221.583, 72.001].into(), [223.653, 71.992].into(), [224.532, 73.319].into());
                pb.cubic_to([225.43, 71.715].into(), [225.844, 69.948].into(), [226.753, 68.288].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([216.129, 63.748].into());
                pb.cubic_to([216.847, 62.393].into(), [216.725, 60.61].into(), [218.082, 60.07].into());
                pb.cubic_to([218.791, 59.788].into(), [220.566, 60.723].into(), [220.165, 61.753].into());
                pb.cubic_to([219.396, 63.73].into(), [219.024, 65.877].into(), [217.691, 67.614].into());
                pb.cubic_to([217.5, 67.865].into(), [217.73, 68.376].into(), [217.576, 68.691].into());
                pb.cubic_to([217.007, 69.861].into(), [215.909, 70.566].into(), [214.558, 70.25].into());
                pb.cubic_to([213.489, 68.137].into(), [214.59, 66.096].into(), [216.05, 64.457].into());
                pb.cubic_to([216.18, 64.311].into(), [216.021, 63.95].into(), [216.129, 63.748].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([178.15, 68.725].into());
                pb.cubic_to([178.047, 69.087].into(), [178.01, 69.531].into(), [178.168, 69.839].into());
                pb.cubic_to([178.678, 70.829].into(), [179.438, 71.905].into(), [179.115, 72.885].into());
                pb.cubic_to([178.781, 73.898].into(), [177.711, 73.724].into(), [177.088, 73.178].into());
                pb.cubic_to([175.999, 72.225].into(), [175.952, 70.473].into(), [175.29, 69.17].into());
                pb.cubic_to([175.102, 68.8].into(), [175.15, 68.25].into(), [174.728, 67.875].into());
                pb.cubic_to([174.273, 67.472].into(), [173.851, 66.01].into(), [173.943, 65.463].into());
                pb.cubic_to([173.994, 65.162].into(), [173.818, 55.661].into(), [174.031, 55.913].into());
                pb.cubic_to([174.625, 56.616].into(), [177.55, 65.951].into(), [177.616, 66.806].into());
                pb.cubic_to([177.671, 67.507].into(), [178.373, 67.953].into(), [178.15, 68.725].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([153.563, 75.239].into());
                pb.cubic_to([156.089, 77.635].into(), [158.765, 80.475].into(), [158.341, 84.035].into());
                pb.cubic_to([158.23, 84.971].into(), [156.527, 84.466].into(), [156.348, 83.654].into());
                pb.cubic_to([155.579, 80.178].into(), [153.623, 77.626].into(), [151.161, 75.332].into());
                pb.cubic_to([149.055, 73.369].into(), [147.269, 67.285].into(), [147.044, 66.798].into());
                pb.cubic_to([150.589, 71.838].into(), [152.754, 74.472].into(), [153.563, 75.239].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([140.545, 80.958].into());
                pb.cubic_to([141.047, 81.313].into(), [140.757, 81.784].into(), [140.965, 82.103].into());
                pb.cubic_to([141.879, 83.501].into(), [143.127, 84.696].into(), [143.144, 86.362].into());
                pb.cubic_to([143.147, 86.628].into(), [142.785, 86.924].into(), [142.463, 86.71].into());
                pb.cubic_to([142.198, 86.533].into(), [141.87, 86.409].into(), [141.766, 86.284].into());
                pb.cubic_to([139.819, 83.935].into(), [138.477, 81.374].into(), [137.093, 78.677].into());
                pb.cubic_to([136.917, 78.335].into(), [135.82, 74.028].into(), [136.12, 73.921].into());
                pb.cubic_to([136.35, 73.84].into(), [137.999, 77.849].into(), [138.2, 77.959].into());
                pb.cubic_to([139.412, 78.616].into(), [139.423, 80.165].into(), [140.545, 80.958].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([156.593, 62.215].into());
                pb.cubic_to([157.018, 63.049].into(), [158.53, 64.202].into(), [158.421, 65.054].into());
                pb.cubic_to([158.308, 65.944].into(), [158.757, 67.328].into(), [157.882, 66.668].into());
                pb.cubic_to([156.677, 65.759].into(), [153.369, 64.465].into(), [153.11, 58.895].into());
                pb.cubic_to([153.085, 58.348].into(), [155.937, 60.93].into(), [156.593, 62.215].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([170.444, 78.689].into());
                pb.cubic_to([170.827, 79.33].into(), [171.506, 78.876].into(), [171.946, 79.129].into());
                pb.cubic_to([172.568, 79.485].into(), [173.154, 80.02].into(), [173.434, 80.643].into());
                pb.cubic_to([174.364, 82.704].into(), [176.061, 84.449].into(), [176.198, 86.745].into());
                pb.cubic_to([174.768, 88.093].into(), [174.117, 86.136].into(), [173.512, 85.211].into());
                pb.cubic_to([172.244, 86.79].into(), [171.286, 84.993].into(), [170.039, 84.495].into());
                pb.cubic_to([169.972, 84.468].into(), [169.767, 84.801].into(), [169.696, 84.775].into());
                pb.cubic_to([168.567, 84.353].into(), [167.915, 83.317].into(), [166.958, 82.568].into());
                pb.cubic_to([166.794, 82.439].into(), [166.405, 82.612].into(), [166.264, 82.481].into());
                pb.cubic_to([165.639, 81.903].into(), [164.706, 81.591].into(), [164.437, 80.937].into());
                pb.cubic_to([163.373, 78.341].into(), [160.361, 76.332].into(), [158.552, 69.099].into());
                pb.cubic_to([158.917, 68.227].into(), [162.879, 75.469].into(), [163.346, 76.138].into());
                pb.cubic_to([164.148, 77.285].into(), [164.261, 74.545].into(), [165.485, 75.184].into());
                pb.cubic_to([165.533, 75.21].into(), [165.712, 74.982].into(), [165.84, 74.853].into());
                pb.cubic_to([166.026, 75.122].into(), [166.235, 75.341].into(), [166.608, 75.237].into());
                pb.cubic_to([166.608, 75.621].into(), [166.479, 76.154].into(), [166.672, 76.306].into());
                pb.cubic_to([167.858, 77.243].into(), [167.778, 78.267].into(), [168.526, 79.457].into());
                pb.cubic_to([168.965, 78.7].into(), [169.982, 79.389].into(), [170.444, 78.689].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([227.793, 26.519].into());
                pb.cubic_to([227.793, 26.519].into(), [234.89, 46.083].into(), [230.67, 56.824].into());
                pb.cubic_to([230.67, 56.824].into(), [241.603, 36.109].into(), [237.191, 25.368].into());
                pb.cubic_to([237.191, 25.368].into(), [236.808, 35.342].into(), [232.971, 40.137].into());
                pb.cubic_to([232.971, 40.137].into(), [229.135, 27.861].into(), [227.793, 26.519].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([213.599, 29.012].into());
                pb.cubic_to([213.599, 29.012].into(), [218.778, 37.452].into(), [211.106, 55.098].into());
                pb.cubic_to([211.106, 55.098].into(), [210.339, 35.534].into(), [203.817, 24.984].into());
                pb.cubic_to([203.817, 24.984].into(), [217.435, 44.357].into(), [213.599, 29.012].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([204.009, 30.93].into());
                pb.cubic_to([204.009, 30.93].into(), [203.817, 50.111].into(), [204.201, 52.988].into());
                pb.cubic_to([204.201, 52.988].into(), [200.557, 37.068].into(), [190.775, 27.861].into());
                pb.cubic_to([190.775, 27.861].into(), [204.585, 39.37].into(), [204.009, 30.93].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([194.803, 61.619].into());
                pb.cubic_to([194.803, 61.619].into(), [200.557, 48.576].into(), [190.967, 30.93].into());
                pb.cubic_to([190.967, 30.93].into(), [197.104, 42.63].into(), [192.501, 49.343].into());
                pb.cubic_to([192.501, 49.343].into(), [194.994, 52.604].into(), [194.803, 61.619].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([176.389, 31.314].into());
                pb.cubic_to([176.389, 31.314].into(), [175.43, 46.275].into(), [177.157, 48.384].into());
                pb.cubic_to([177.157, 48.384].into(), [177.349, 54.522].into(), [176.965, 55.481].into());
                pb.cubic_to([176.965, 55.481].into(), [180.801, 61.427].into(), [180.993, 54.33].into());
                pb.cubic_to([180.993, 54.33].into(), [182.335, 46.85].into(), [185.021, 42.439].into());
                pb.cubic_to([185.021, 42.439].into(), [188.473, 37.26].into(), [188.281, 31.122].into());
                pb.cubic_to([188.281, 31.122].into(), [178.691, 60.084].into(), [176.389, 31.314].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([172.937, 57.783].into());
                pb.cubic_to([172.937, 57.783].into(), [166.608, 47.425].into(), [164.881, 29.204].into());
                pb.cubic_to([164.881, 29.204].into(), [163.539, 35.15].into(), [167.183, 48.96].into());
                pb.cubic_to([167.183, 48.96].into(), [171.211, 63.729].into(), [172.937, 57.783].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([152.03, 38.794].into());
                pb.cubic_to([152.03, 38.794].into(), [156.826, 43.973].into(), [158.168, 48.768].into());
                pb.cubic_to([158.168, 48.768].into(), [161.621, 63.921].into(), [155.483, 55.673].into());
                pb.cubic_to([155.483, 55.673].into(), [155.675, 48.001].into(), [147.811, 40.904].into());
                pb.cubic_to([147.811, 40.904].into(), [152.414, 43.206].into(), [152.03, 38.794].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([146.468, 43.589].into());
                pb.cubic_to([146.468, 43.589].into(), [149.729, 60.276].into(), [150.496, 61.043].into());
                pb.cubic_to([150.496, 61.043].into(), [152.222, 64.304].into(), [149.537, 61.235].into());
                pb.cubic_to([149.537, 61.235].into(), [141.098, 42.822].into(), [137.262, 36.493].into());
                pb.cubic_to([137.262, 36.493].into(), [144.934, 45.316].into(), [146.468, 43.589].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([140.906, 59.509].into());
                pb.cubic_to([140.906, 59.509].into(), [152.03, 80.991].into(), [131.124, 56.248].into());
                pb.cubic_to([131.124, 56.248].into(), [141.673, 65.647].into(), [140.906, 59.509].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([126.137, 73.511].into());
                pb.cubic_to([126.137, 73.511].into(), [130.74, 91.54].into(), [133.234, 91.348].into());
                pb.cubic_to([133.234, 91.348].into(), [141.098, 99.98].into(), [134.768, 89.814].into());
                pb.cubic_to([134.768, 89.814].into(), [129.014, 80.607].into(), [129.589, 71.209].into());
                pb.cubic_to([129.589, 71.209].into(), [129.014, 80.416].into(), [126.137, 73.511].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([442.9, 84.444].into());
                pb.cubic_to([442.9, 84.444].into(), [431.392, 94.035].into(), [428.995, 97.391].into());
                pb.cubic_to([428.995, 97.391].into(), [441.941, 79.649].into(), [441.941, 72.936].into());
                pb.cubic_to([441.941, 72.936].into(), [444.339, 80.129].into(), [442.9, 84.444].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([448.175, 105.543].into());
                pb.cubic_to([448.175, 105.543].into(), [428.036, 119.928].into(), [424.679, 127.121].into());
                pb.cubic_to([424.679, 127.121].into(), [450.093, 98.83].into(), [450.093, 94.514].into());
                pb.cubic_to([450.093, 94.514].into(), [450.572, 103.145].into(), [448.175, 105.543].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([464.478, 253.231].into());
                pb.cubic_to([464.478, 253.231].into(), [452.97, 260.904].into(), [451.531, 258.986].into());
                pb.cubic_to([451.531, 258.986].into(), [461.601, 252.752].into(), [463.999, 244.6].into());
                pb.cubic_to([463.999, 244.6].into(), [462.56, 253.231].into(), [464.478, 253.231].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([472.63, 176.031].into());
                pb.line_to([455.847, 187.539].into());
                pb.cubic_to([455.847, 187.539].into(), [474.068, 171.235].into(), [474.548, 167.399].into());
                pb.line_to([472.63, 176.031].into());
            });
            cb.push(Cmd::FillPathSolid { path: p, color: argb_pack_u8s(204,204,204, 255) });

            let p = cb.build_path(|pb| {
                pb.move_to([97.894, 197.608].into());
                pb.line_to([118.992, 193.053].into());
            });
            let _ = p;

        }
    }
#[inline(never)]
pub fn tiger_static() -> CmdBuf {
    CmdBuf::new(build_it)
}

